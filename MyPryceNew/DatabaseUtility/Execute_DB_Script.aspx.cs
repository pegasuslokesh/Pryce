using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using PegasusDataAccess;
using System.Data.SqlClient;

public partial class DatabaseUtility_Execute_DB_Script : System.Web.UI.Page
{
    DataAccessClass objDa = null;
    protected void Page_Load(object sender, EventArgs e)
    {
        objDa = new DataAccessClass(Session["DBConnection"].ToString());

        if (!IsPostBack)
        {
           
            ExecuteSqlScript();
        }
    }

    //public void ExecuteSqlScript()
    //{
    //    string strsql = string.Empty;


    //    try
    //    {
    //        strsql = "update Ac_SubChartOfAccount set FinancialYearId=2 where FinancialYearId is null or FinancialYearId=' '";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }


    //    try
    //    {
    //        strsql = "CREATE FUNCTION [dbo].[Ac_GetBalance] ( @Company_Id int, @Brand_Id int, @Location_Id Nvarchar(Max), @ToDate datetime, @group_id int, @Account_no int, @other_account_no int, @currency_type int ) RETURNS float AS BEGIN declare @FromDate datetime declare @ob float declare @transaction_balance float declare @cb float set @ob=(select (case when @currency_type=1 then SUM(isnull(Ac_SubChartOfAccount.LDr_Amount-Ac_SubChartOfAccount.LCr_Amount,0)) else SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float)-cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) end) from ac_subChartOfAccount left join Ac_ChartOfAccount on ac_subChartOfAccount.AccTransId = Ac_ChartOfAccount.Trans_Id left join Ac_Groups on ac_groups.Ac_Group_Id=Ac_ChartOfAccount.Acc_Group_Id where Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and (Case when @group_id>0 and @Account_no=0 and @other_account_no=0 then Ac_ChartOfAccount.Acc_Group_Id else 0 End=@group_id) and (Case when @Account_no>0 then Ac_SubChartOfAccount.AccTransId else 0 End=@Account_No) and (Case when @Other_account_no>0 then Ac_SubChartOfAccount.Other_Account_No else 0 End=@Other_account_no)) set @transaction_balance=(select sum((case when @currency_type=1 then VD.Debit_Amount-VD.Credit_Amount else vd.CompanyCurrDebit-vd.CompanyCurrCredit end)) from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No left join Ac_ChartOfAccount on vd.Account_No=Ac_ChartOfAccount.trans_id where vd.Company_Id=@Company_Id and vd.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive=1 and Ac_Voucher_Header.Voucher_Date <= @ToDate and Ac_Voucher_Header.ReconciledFromFinance=1 and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') and (Case when @group_id>0 and @Account_no=0 and @other_account_no=0 then Ac_ChartOfAccount.Acc_Group_Id else 0 End=@group_id) and (Case when @Account_no>0 then vd.Account_No else 0 End=@Account_No) and (Case when @Other_account_no>0 then vd.Other_Account_No else 0 End=@Other_account_no)) set @cb= isnull(@ob,0)+isnull(@transaction_balance,0) return @cb END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "Alter FUNCTION [dbo].[Ac_GetBalance] ( @Company_Id int, @Brand_Id int, @Location_Id Nvarchar(Max), @ToDate datetime, @group_id int, @Account_no int, @other_account_no int, @currency_type int ) RETURNS float AS BEGIN declare @FromDate datetime declare @ob float declare @transaction_balance float declare @cb float set @ob=(select (case when @currency_type=1 then SUM(isnull(Ac_SubChartOfAccount.LDr_Amount-Ac_SubChartOfAccount.LCr_Amount,0)) else SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float)-cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) end) from ac_subChartOfAccount left join Ac_ChartOfAccount on ac_subChartOfAccount.AccTransId = Ac_ChartOfAccount.Trans_Id left join Ac_Groups on ac_groups.Ac_Group_Id=Ac_ChartOfAccount.Acc_Group_Id where Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and (Case when @group_id>0 and @Account_no=0 and @other_account_no=0 then Ac_ChartOfAccount.Acc_Group_Id else 0 End=@group_id) and (Case when @Account_no>0 then Ac_SubChartOfAccount.AccTransId else 0 End=@Account_No) and (Case when @Other_account_no>0 then Ac_SubChartOfAccount.Other_Account_No else 0 End=@Other_account_no)) set @transaction_balance=(select sum((case when @currency_type=1 then VD.Debit_Amount-VD.Credit_Amount else vd.CompanyCurrDebit-vd.CompanyCurrCredit end)) from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No left join Ac_ChartOfAccount on vd.Account_No=Ac_ChartOfAccount.trans_id where vd.Company_Id=@Company_Id and vd.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive=1 and Ac_Voucher_Header.Voucher_Date <= @ToDate and Ac_Voucher_Header.ReconciledFromFinance=1 and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') and (Case when @group_id>0 and @Account_no=0 and @other_account_no=0 then Ac_ChartOfAccount.Acc_Group_Id else 0 End=@group_id) and (Case when @Account_no>0 then vd.Account_No else 0 End=@Account_No) and (Case when @Other_account_no>0 then vd.Other_Account_No else 0 End=@Other_account_no)) set @cb= isnull(@ob,0)+isnull(@transaction_balance,0) return @cb END";
    //        objDa.execute_Command(strsql);

    //    }

    //    try
    //    {
    //        strsql = "Create FUNCTION [dbo].[fn_Ac_allAccounts_Balance] ( @company_id int, @brand_id int, @location_id varchar, @nature_of_account nvarchar(50), @primary_group_id int, @To_date datetime, @currency_type int, @customer_account_no int, @supplier_account_no int, @depth int, @counter int, @cb_gt float ) RETURNS @tbl_balance TABLE ( _id int NULL, nature_of_account int NULL, group_id int NULL, parent_id int NULL, account_no int NULL, other_account_no int NULL, name nvarchar(50) NULL, name_l nvarchar(50) NULL, cb float DEFAULT 0 NULL, cb_type varchar(2) NULL ) AS BEGIN DECLARE @id int, @current_nature_of_account int, @Group_id int, @account_no int, @other_account_no int, @name nvarchar(50), @name_l nvarchar(50), @cb float, @cb_type varchar(2), @currency varchar(50), @counter_bookmark int, @group_id_bookmark int declare @nest_company_id int, @nest_brand_id int, @nest_location_id varchar, @nest_To_date datetime, @nest_currency_type int, @nest_customer_account_no int, @nest_supplier_account_no int, @nest_depth int, @nest_counter int, @nest_cb_gt float declare @nest_id int , @nest_nature_of_account int, @nest_group_id int, @nest_parent_id int, @nest_account_no int, @nest_other_account_no int, @nest_name nvarchar(50), @nest_name_l nvarchar(50), @nest_cb float, @nest_cb_type varchar(2) declare @parent_bookmark int set @parent_bookmark=@counter declare @rec_count int set @rec_count=0 DECLARE cur_ac_group CURSOR LOCAL FOR SELECT ac_group_id, Ac_GroupName, Ac_GroupNameL, N_Group_ID FROM Ac_Groups WHERE Company_Id = @company_id AND Brand_Id = @brand_id AND N_Group_ID in (SELECT CAST(Value AS INT) FROM F_Split(@nature_of_account, ',')) AND Parant_Ac_Group_Id = @primary_group_id ORDER BY N_Group_ID,Ac_GroupName OPEN cur_ac_group FETCH NEXT FROM cur_ac_group INTO @group_id, @name, @name_l,@current_nature_of_account WHILE @@FETCH_STATUS = 0 BEGIN set @cb=0 set @counter=@counter+1 set @name=SPACE(@depth*5)+@name SET @counter_bookmark = @counter SET @Group_id_bookmark = @Group_id INSERT INTO @tbl_balance VALUES (@counter, @current_nature_of_account, @group_id, @parent_bookmark, 0, 0, @name, @name_l, 0, 'DR') BEGIN DECLARE cur_nested_group CURSOR LOCAL FOR select * from dbo.fn_Ac_allAccounts_Balance(@company_id,@brand_id,@location_id,@current_nature_of_account, @group_id,@To_date,@currency_type,@customer_account_no,@supplier_account_no, @depth+1,@counter,@cb)ab OPEN cur_nested_group FETCH NEXT FROM cur_nested_group INTO @nest_id,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type WHILE @@FETCH_STATUS = 0 BEGIN SET @counter = @counter + 1 if (@nest_account_no>0) BEGIN set @cb_gt=@cb_gt+@nest_cb END INSERT INTO @tbl_balance VALUES (@counter,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type) FETCH NEXT FROM cur_nested_group INTO @nest_id,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type END CLOSE cur_nested_group DEALLOCATE cur_nested_group END update @tbl_balance set cb=@cb_gt,cb_type=(case when @cb_gt>0 then 'DR' else 'CR' end) where _id=@counter_bookmark set @cb_gt=0 FETCH NEXT FROM cur_ac_group INTO @group_id, @name, @name_l,@current_nature_of_account END CLOSE cur_ac_group DEALLOCATE cur_ac_group set @rec_count=(select COUNT(Trans_Id) FROM Ac_ChartOfAccount WHERE Company_Id = @company_id AND Acc_Group_Id = @primary_group_id) if @rec_count>0 BEGIN DECLARE cur_chart_of_account CURSOR LOCAL FOR SELECT Trans_Id, AccountName, AccountNameL,(select dbo.ac_getBalance(@company_id,@brand_id,@location_id,@To_date,0,ac_chartOfAccount.Trans_Id,0,@currency_type))as balance FROM Ac_ChartOfAccount WHERE Company_Id = @company_id AND Acc_Group_Id = @primary_group_id ORDER BY AccountName OPEN cur_chart_of_account FETCH NEXT FROM cur_chart_of_account INTO @Account_no, @name, @name_l, @cb WHILE @@FETCH_STATUS = 0 BEGIN SET @counter = @counter + 1 SET @name = space(@depth*5) + @name SET @name_l = space(@depth*5) + @name_l set @cb_gt=@cb_gt+@cb INSERT INTO @tbl_balance VALUES (@counter, @nature_of_account, @primary_group_id, @parent_bookmark, @account_no, 0, @name, @name_l, @cb, (Case when @cb>0 then 'DR' else 'CR' end)) FETCH NEXT FROM cur_chart_of_account INTO @Account_no, @name, @name_l, @cb END CLOSE cur_chart_of_account DEALLOCATE cur_chart_of_account END RETURN END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter FUNCTION [dbo].[fn_Ac_allAccounts_Balance] ( @company_id int, @brand_id int, @location_id varchar, @nature_of_account nvarchar(50), @primary_group_id int, @To_date datetime, @currency_type int, @customer_account_no int, @supplier_account_no int, @depth int, @counter int, @cb_gt float ) RETURNS @tbl_balance TABLE ( _id int NULL, nature_of_account int NULL, group_id int NULL, parent_id int NULL, account_no int NULL, other_account_no int NULL, name nvarchar(50) NULL, name_l nvarchar(50) NULL, cb float DEFAULT 0 NULL, cb_type varchar(2) NULL ) AS BEGIN DECLARE @id int, @current_nature_of_account int, @Group_id int, @account_no int, @other_account_no int, @name nvarchar(50), @name_l nvarchar(50), @cb float, @cb_type varchar(2), @currency varchar(50), @counter_bookmark int, @group_id_bookmark int declare @nest_company_id int, @nest_brand_id int, @nest_location_id varchar, @nest_To_date datetime, @nest_currency_type int, @nest_customer_account_no int, @nest_supplier_account_no int, @nest_depth int, @nest_counter int, @nest_cb_gt float declare @nest_id int , @nest_nature_of_account int, @nest_group_id int, @nest_parent_id int, @nest_account_no int, @nest_other_account_no int, @nest_name nvarchar(50), @nest_name_l nvarchar(50), @nest_cb float, @nest_cb_type varchar(2) declare @parent_bookmark int set @parent_bookmark=@counter declare @rec_count int set @rec_count=0 DECLARE cur_ac_group CURSOR LOCAL FOR SELECT ac_group_id, Ac_GroupName, Ac_GroupNameL, N_Group_ID FROM Ac_Groups WHERE Company_Id = @company_id AND Brand_Id = @brand_id AND N_Group_ID in (SELECT CAST(Value AS INT) FROM F_Split(@nature_of_account, ',')) AND Parant_Ac_Group_Id = @primary_group_id ORDER BY N_Group_ID,Ac_GroupName OPEN cur_ac_group FETCH NEXT FROM cur_ac_group INTO @group_id, @name, @name_l,@current_nature_of_account WHILE @@FETCH_STATUS = 0 BEGIN set @cb=0 set @counter=@counter+1 set @name=SPACE(@depth*5)+@name SET @counter_bookmark = @counter SET @Group_id_bookmark = @Group_id INSERT INTO @tbl_balance VALUES (@counter, @current_nature_of_account, @group_id, @parent_bookmark, 0, 0, @name, @name_l, 0, 'DR') BEGIN DECLARE cur_nested_group CURSOR LOCAL FOR select * from dbo.fn_Ac_allAccounts_Balance(@company_id,@brand_id,@location_id,@current_nature_of_account, @group_id,@To_date,@currency_type,@customer_account_no,@supplier_account_no, @depth+1,@counter,@cb)ab OPEN cur_nested_group FETCH NEXT FROM cur_nested_group INTO @nest_id,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type WHILE @@FETCH_STATUS = 0 BEGIN SET @counter = @counter + 1 if (@nest_account_no>0) BEGIN set @cb_gt=@cb_gt+@nest_cb END INSERT INTO @tbl_balance VALUES (@counter,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type) FETCH NEXT FROM cur_nested_group INTO @nest_id,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type END CLOSE cur_nested_group DEALLOCATE cur_nested_group END update @tbl_balance set cb=@cb_gt,cb_type=(case when @cb_gt>0 then 'DR' else 'CR' end) where _id=@counter_bookmark set @cb_gt=0 FETCH NEXT FROM cur_ac_group INTO @group_id, @name, @name_l,@current_nature_of_account END CLOSE cur_ac_group DEALLOCATE cur_ac_group set @rec_count=(select COUNT(Trans_Id) FROM Ac_ChartOfAccount WHERE Company_Id = @company_id AND Acc_Group_Id = @primary_group_id) if @rec_count>0 BEGIN DECLARE cur_chart_of_account CURSOR LOCAL FOR SELECT Trans_Id, AccountName, AccountNameL,(select dbo.ac_getBalance(@company_id,@brand_id,@location_id,@To_date,0,ac_chartOfAccount.Trans_Id,0,@currency_type))as balance FROM Ac_ChartOfAccount WHERE Company_Id = @company_id AND Acc_Group_Id = @primary_group_id ORDER BY AccountName OPEN cur_chart_of_account FETCH NEXT FROM cur_chart_of_account INTO @Account_no, @name, @name_l, @cb WHILE @@FETCH_STATUS = 0 BEGIN SET @counter = @counter + 1 SET @name = space(@depth*5) + @name SET @name_l = space(@depth*5) + @name_l set @cb_gt=@cb_gt+@cb INSERT INTO @tbl_balance VALUES (@counter, @nature_of_account, @primary_group_id, @parent_bookmark, @account_no, 0, @name, @name_l, @cb, (Case when @cb>0 then 'DR' else 'CR' end)) FETCH NEXT FROM cur_chart_of_account INTO @Account_no, @name, @name_l, @cb END CLOSE cur_chart_of_account DEALLOCATE cur_chart_of_account END RETURN END";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE TABLE [dbo].[Ems_Contact_ProductCategory]( [Company_Id] [int] NOT NULL, [Brand_Id] [int] NOT NULL, [Contact_Id] [int] NOT NULL, [CategoryId] [int] NOT NULL, [Type] [nvarchar](1) NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NULL, [CreatedBy] [nvarchar](255) NULL, [CreatedDate] [datetime] NULL, [ModifiedBy] [nvarchar](255) NULL, [ModifiedDate] [datetime] NULL, [IsActive] [bit] NULL, CONSTRAINT [PK_Set_Contact_ProductCategory] PRIMARY KEY CLUSTERED ( [Company_Id] ASC, [Brand_Id] ASC, [Contact_Id] ASC, [CategoryId] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Ems_Contact_ProductCategory_Brand_Id] ON [dbo].[Ems_Contact_ProductCategory] ( [Brand_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Ems_Contact_ProductCategory_Company_Id] ON [dbo].[Ems_Contact_ProductCategory] ( [Company_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Ems_Contact_ProductCategory_Contact_Id] ON [dbo].[Ems_Contact_ProductCategory] ( [Contact_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Ems_Contact_ProductCategory_Type] ON [dbo].[Ems_Contact_ProductCategory] ( [Type] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Value : C or S C means customer and S means supplier we created common table for save contact product category ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Ems_Contact_ProductCategory', @level2type=N'COLUMN',@level2name=N'Type'";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "CREATE TABLE [dbo].[Inv_SalesCommissionConfiguration_Header]( [Company_Id] [int] NOT NULL, [Brand_Id] [int] NOT NULL, [Location_Id] [int] NOT NULL, [Trans_Id] [int] IDENTITY(1,1) NOT NULL, [Department_Id] [int] NULL, [Employee_Id] [int] NULL, [Parameter_Level] [nchar](50) NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NULL, [IsActive] [bit] NULL, [CreatedBy] [nvarchar](255) NULL, [CreatedDate] [datetime] NULL, [ModifiedBy] [nvarchar](255) NULL, [ModifiedDate] [datetime] NULL, CONSTRAINT [PK_Inv_SalesCommissionConfiguration_Header] PRIMARY KEY CLUSTERED ( [Company_Id] ASC, [Brand_Id] ASC, [Location_Id] ASC, [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY] GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Field4 is used for Approval Status' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Inv_SalesCommissionConfiguration_Header', @level2type=N'COLUMN',@level2name=N'Field4' GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'this field is used for sales return number' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Inv_SalesCommissionConfiguration_Header', @level2type=N'COLUMN',@level2name=N'Field5' GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'this field is used for sales return date' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Inv_SalesCommissionConfiguration_Header', @level2type=N'COLUMN',@level2name=N'Field7'";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "CREATE TABLE [dbo].[Inv_SalesCommissionConfiguration_Detail]( [Company_Id] [int] NOT NULL, [Brand_Id] [int] NOT NULL, [Location_Id] [int] NOT NULL, [Trans_Id] [int] IDENTITY(1,1) NOT NULL, [Ref_Id] [int] NULL, [Category_Id] [int] NULL, [Sales_Quota] [numeric](18, 6) NULL, [Commission_Percentage] [numeric](18, 6) NULL, [Is_Allow] [bit] NULL, [Notes] [nvarchar](max) NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NULL, [IsActive] [bit] NULL, [CreatedBy] [nvarchar](255) NULL, [CreatedDate] [datetime] NULL, [ModifiedBy] [nvarchar](255) NULL, [ModifiedDate] [datetime] NULL, CONSTRAINT [PK_Inv_SalesCommissionConfiguration_Detail] PRIMARY KEY CLUSTERED ( [Company_Id] ASC, [Brand_Id] ASC, [Location_Id] ASC, [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY] GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Field4 is used for Approval Status' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Inv_SalesCommissionConfiguration_Detail', @level2type=N'COLUMN',@level2name=N'Field4' GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'this field is used for sales return number' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Inv_SalesCommissionConfiguration_Detail', @level2type=N'COLUMN',@level2name=N'Field5' GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'this field is used for sales return date' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Inv_SalesCommissionConfiguration_Detail', @level2type=N'COLUMN',@level2name=N'Field7'";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "CREATE TABLE [dbo].[Sys_LocationType_Master]( [Trans_Id] [int] IDENTITY(1,1) NOT NULL, [Location_Type_Name] [nvarchar](255) NULL, [Location_Type_Name_L] [nvarchar](255) NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NULL, [IsActive] [bit] NOT NULL, [CreatedBy] [varchar](11) NOT NULL, [CreatedDate] [datetime] NOT NULL, [ModifiedBy] [varchar](11) NOT NULL, [ModifiedDate] [datetime] NOT NULL, CONSTRAINT [PK_Sys_LocationType_Master] PRIMARY KEY CLUSTERED ( [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY] GO SET ANSI_PADDING OFF GO CREATE NONCLUSTERED INDEX [IX_Sys_LocationType_Master_Is_Active] ON [dbo].[Sys_LocationType_Master] ( [IsActive] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Sys_LocationType_Master_Location_Type_Name] ON [dbo].[Sys_LocationType_Master] ( [Location_Type_Name] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Sys_LocationType_Master_Location_Type_Name_L] ON [dbo].[Sys_LocationType_Master] ( [Location_Type_Name_L] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Sys_LocationType_Master_Trans_Id] ON [dbo].[Sys_LocationType_Master] ( [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }
    //    try
    //    {
    //        strsql = "CREATE TABLE [dbo].[Inv_ReturnCommisison]( [Company_Id] [int] NOT NULL, [Brand_id] [int] NOT NULL, [Location_Id] [int] NOT NULL, [Trans_Id] [int] IDENTITY(1,1) NOT NULL, [Commision_Person] [int] NULL, [Voucher_Header_Id] [int] NULL, [Voucher_Detail_Id] [int] NULL, [Return_Voucher_Id] [int] NULL, [Return_Amount] [numeric](18, 6) NULL, [Is_Adjustable] [bit] NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NOT NULL, [IsActive] [bit] NULL, [CreatedBy] [nvarchar](255) NULL, [CreatedDate] [datetime] NULL, [ModifiedBy] [nvarchar](255) NULL, [ModifiedDate] [datetime] NULL, CONSTRAINT [PK_Inv_ReturnCommisison] PRIMARY KEY CLUSTERED ( [Company_Id] ASC, [Brand_id] ASC, [Location_Id] ASC, [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Inv_ReturnCommisison_Brand_Id] ON [dbo].[Inv_ReturnCommisison] ( [Brand_id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Inv_ReturnCommisison_Commision_Person] ON [dbo].[Inv_ReturnCommisison] ( [Commision_Person] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Inv_ReturnCommisison_Company_Id] ON [dbo].[Inv_ReturnCommisison] ( [Company_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Inv_ReturnCommisison_Is_Adjustable] ON [dbo].[Inv_ReturnCommisison] ( [Is_Adjustable] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Inv_ReturnCommisison_Location_Id] ON [dbo].[Inv_ReturnCommisison] ( [Location_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Inv_ReturnCommisison_Return_Voucher_Id] ON [dbo].[Inv_ReturnCommisison] ( [Return_Voucher_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Inv_ReturnCommisison_Trans_Id] ON [dbo].[Inv_ReturnCommisison] ( [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Inv_ReturnCommisison_Voucher_Detail_Id] ON [dbo].[Inv_ReturnCommisison] ( [Voucher_Detail_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO CREATE NONCLUSTERED INDEX [IX_Inv_ReturnCommisison_Voucher_Header_Id] ON [dbo].[Inv_ReturnCommisison] ( [Voucher_Header_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Field4 is used for Approval Status' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Inv_ReturnCommisison', @level2type=N'COLUMN',@level2name=N'Field4' GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'this field is used for sales return number' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Inv_ReturnCommisison', @level2type=N'COLUMN',@level2name=N'Field5' GO EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'this field is used for sales return date' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Inv_ReturnCommisison', @level2type=N'COLUMN',@level2name=N'Field7'";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ems_Contact_ProductCategory_Insert] @Company_Id int, @Brand_Id int, @Contact_Id int, @CategoryId int, @Type nvarchar(1), @Field1 nvarchar(255) = NULL, @Field2 nvarchar(255) = NULL, @Field3 nvarchar(255) = NULL, @Field4 nvarchar(255) = NULL, @Field5 nvarchar(255) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @CreatedBy nvarchar(255) = NULL, @CreatedDate datetime = NULL, @ModifiedBy nvarchar(255) = NULL, @ModifiedDate datetime = NULL, @IsActive bit = NULL, @ReferanceID int output As Begin Insert Into Ems_Contact_ProductCategory ([Company_Id],Brand_Id,[Contact_Id],[CategoryId],[Type],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate],[IsActive]) Values (@Company_Id,@Brand_Id,@Contact_Id,@CategoryId,@Type,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate,@IsActive) select @ReferanceID=@@ROWCOUNT return @ReferanceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ems_Contact_ProductCategory_Insert] @Company_Id int, @Brand_Id int, @Contact_Id int, @CategoryId int, @Type nvarchar(1), @Field1 nvarchar(255) = NULL, @Field2 nvarchar(255) = NULL, @Field3 nvarchar(255) = NULL, @Field4 nvarchar(255) = NULL, @Field5 nvarchar(255) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @CreatedBy nvarchar(255) = NULL, @CreatedDate datetime = NULL, @ModifiedBy nvarchar(255) = NULL, @ModifiedDate datetime = NULL, @IsActive bit = NULL, @ReferanceID int output As Begin Insert Into Ems_Contact_ProductCategory ([Company_Id],Brand_Id,[Contact_Id],[CategoryId],[Type],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate],[IsActive]) Values (@Company_Id,@Brand_Id,@Contact_Id,@CategoryId,@Type,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate,@IsActive) select @ReferanceID=@@ROWCOUNT return @ReferanceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ems_Contact_ProductCategory_Delete] @Company_Id int, @Brand_Id int, @Contact_Id int, @Type nvarchar(1), @ReferanceId int output As Begin Delete Ems_Contact_ProductCategory Where [Company_Id] = @Company_Id and Brand_Id=@Brand_Id and [Contact_Id] = @Contact_Id and [Type]=@Type select @ReferanceId=@@ROWCOUNT return @ReferanceId End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ems_Contact_ProductCategory_Delete] @Company_Id int, @Brand_Id int, @Contact_Id int, @Type nvarchar(1), @ReferanceId int output As Begin Delete Ems_Contact_ProductCategory Where [Company_Id] = @Company_Id and Brand_Id=@Brand_Id and [Contact_Id] = @Contact_Id and [Type]=@Type select @ReferanceId=@@ROWCOUNT return @ReferanceId End";
    //        objDa.execute_Command(strsql);

    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_Insert] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @Category_Id int, @Sales_Quota numeric(18,6), @Commission_Percentage numeric(18,6), @Is_Allow bit, @Notes nvarchar(max), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin INSERT INTO [Inv_SalesCommissionConfiguration_Detail] ([Company_Id] ,[Brand_Id] ,[Location_Id] ,[Ref_Id] ,[Category_Id] ,[Sales_Quota] ,[Commission_Percentage] ,[Is_Allow] ,[Notes] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate]) VALUES (@Company_Id ,@Brand_Id ,@Location_Id ,@Ref_Id ,@Category_Id ,@Sales_Quota ,@Commission_Percentage ,@Is_Allow ,@notes ,@Field1 ,@Field2 ,@Field3 ,@Field4 ,@Field5 ,@Field6 ,@Field7 ,@IsActive ,@CreatedBy ,@CreatedDate ,@ModifiedBy ,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_Insert] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @Category_Id int, @Sales_Quota numeric(18,6), @Commission_Percentage numeric(18,6), @Is_Allow bit, @Notes nvarchar(max), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin INSERT INTO [Inv_SalesCommissionConfiguration_Detail] ([Company_Id] ,[Brand_Id] ,[Location_Id] ,[Ref_Id] ,[Category_Id] ,[Sales_Quota] ,[Commission_Percentage] ,[Is_Allow] ,[Notes] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate]) VALUES (@Company_Id ,@Brand_Id ,@Location_Id ,@Ref_Id ,@Category_Id ,@Sales_Quota ,@Commission_Percentage ,@Is_Allow ,@notes ,@Field1 ,@Field2 ,@Field3 ,@Field4 ,@Field5 ,@Field6 ,@Field7 ,@IsActive ,@CreatedBy ,@CreatedDate ,@ModifiedBy ,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_DeleteRow] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @ReferenceID int output As Begin delete from Inv_SalesCommissionConfiguration_Detail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Ref_Id=@Ref_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_DeleteRow] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @ReferenceID int output As Begin delete from Inv_SalesCommissionConfiguration_Detail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Ref_Id=@Ref_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);

    //    }


    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_ReturnCommisison_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @Commision_Person Int, @Voucher_Header_Id Int, @Voucher_Detail_Id Int, @Return_Voucher_Id int, @Return_Amount numeric(18,6), @Is_Adjustable bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Inv_ReturnCommisison ([Company_Id],[Brand_Id],[Location_Id],[Commision_Person],[Voucher_Header_Id],[Voucher_Detail_Id],[Return_Voucher_Id],[Return_Amount],[Is_Adjustable],[Field1],[Field2],[Field3],[Field4],[field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Company_Id,@Brand_Id,@Location_Id,@Commision_Person,@Voucher_Header_Id,@Voucher_Detail_Id,@Return_Voucher_Id,@Return_Amount,@Is_Adjustable,@Field1,@Field2,@Field3,@Field4,@field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy, @ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_ReturnCommisison_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @Commision_Person Int, @Voucher_Header_Id Int, @Voucher_Detail_Id Int, @Return_Voucher_Id int, @Return_Amount numeric(18,6), @Is_Adjustable bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Inv_ReturnCommisison ([Company_Id],[Brand_Id],[Location_Id],[Commision_Person],[Voucher_Header_Id],[Voucher_Detail_Id],[Return_Voucher_Id],[Return_Amount],[Is_Adjustable],[Field1],[Field2],[Field3],[Field4],[field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Company_Id,@Brand_Id,@Location_Id,@Commision_Person,@Voucher_Header_Id,@Voucher_Detail_Id,@Return_Voucher_Id,@Return_Amount,@Is_Adjustable,@Field1,@Field2,@Field3,@Field4,@field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy, @ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_ReturnCommisison_Update] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Is_Adjustable bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_ReturnCommisison set Is_Adjustable=@Is_Adjustable, ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id Select @ReferenceID = @@ROWCOUNT Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_ReturnCommisison_Update] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Is_Adjustable bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_ReturnCommisison set Is_Adjustable=@Is_Adjustable, ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id Select @ReferenceID = @@ROWCOUNT Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @Department_Id Int, @Employee_Id Int, @Parameter_Level nchar(50), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin INSERT INTO [Inv_SalesCommissionConfiguration_Header] ([Company_Id] ,[Brand_Id] ,[Location_Id] ,[Department_Id] ,[Employee_Id] ,[Parameter_Level] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate]) VALUES (@Company_Id ,@Brand_Id ,@Location_Id ,@Department_Id ,@Employee_Id ,@Parameter_Level ,@Field1 ,@Field2 ,@Field3 ,@Field4 ,@Field5 ,@Field6 ,@Field7 ,@IsActive ,@CreatedBy ,@CreatedDate ,@ModifiedBy ,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @Department_Id Int, @Employee_Id Int, @Parameter_Level nchar(50), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin INSERT INTO [Inv_SalesCommissionConfiguration_Header] ([Company_Id] ,[Brand_Id] ,[Location_Id] ,[Department_Id] ,[Employee_Id] ,[Parameter_Level] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate]) VALUES (@Company_Id ,@Brand_Id ,@Location_Id ,@Department_Id ,@Employee_Id ,@Parameter_Level ,@Field1 ,@Field2 ,@Field3 ,@Field4 ,@Field5 ,@Field6 ,@Field7 ,@IsActive ,@CreatedBy ,@CreatedDate ,@ModifiedBy ,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_DeleteRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesCommissionConfiguration_Header set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_DeleteRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesCommissionConfiguration_Header set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_Update] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Department_Id Int, @Employee_Id Int, @Parameter_Level nchar(50), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesCommissionConfiguration_Header set [Company_Id] = @Company_Id ,[Brand_Id] = @Brand_Id ,[Location_Id] = @Location_Id ,[Department_Id] = @Department_Id ,[Employee_Id] = @Employee_Id ,[Parameter_Level] = @Parameter_Level ,[Field1] = @Field1 ,[Field2] = @Field2 ,[Field3] = @Field3 ,[Field4] = @Field4 ,[Field5] = @Field5 ,[Field6] = @Field6 ,[Field7] = @Field7 ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id Select @ReferenceID = @@ROWCOUNT Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_Update] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Department_Id Int, @Employee_Id Int, @Parameter_Level nchar(50), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesCommissionConfiguration_Header set [Company_Id] = @Company_Id ,[Brand_Id] = @Brand_Id ,[Location_Id] = @Location_Id ,[Department_Id] = @Department_Id ,[Employee_Id] = @Employee_Id ,[Parameter_Level] = @Parameter_Level ,[Field1] = @Field1 ,[Field2] = @Field2 ,[Field3] = @Field3 ,[Field4] = @Field4 ,[Field5] = @Field5 ,[Field6] = @Field6 ,[Field7] = @Field7 ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id Select @ReferenceID = @@ROWCOUNT Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Sys_LocationType_Master_Update] @Trans_Id int, @Location_Type_Name nvarchar(255), @Location_Type_Name_L nvarchar(255), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Update Sys_LocationType_Master Set [Location_Type_Name] = @Location_Type_Name, [Location_Type_Name_L] = @Location_Type_Name_L, [Field1] = @Field1, [Field2] = @Field2, [Field3] = @Field3, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate Where [Trans_Id] = @Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Sys_LocationType_Master_Update] @Trans_Id int, @Location_Type_Name nvarchar(255), @Location_Type_Name_L nvarchar(255), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Update Sys_LocationType_Master Set [Location_Type_Name] = @Location_Type_Name, [Location_Type_Name_L] = @Location_Type_Name_L, [Field1] = @Field1, [Field2] = @Field2, [Field3] = @Field3, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate Where [Trans_Id] = @Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Sys_LocationType_Master_RowStatus] @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Update Sys_LocationType_Master Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Trans_Id] =@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Sys_LocationType_Master_RowStatus] @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Update Sys_LocationType_Master Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Trans_Id] =@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Sys_LocationType_Master_Insert] @Location_Type_Name nvarchar(255), @Location_Type_Name_L nvarchar(255), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy varchar(11), @CreatedDate datetime, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Sys_LocationType_Master (Location_Type_Name,Location_Type_Name_L,[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Location_Type_Name,@Location_Type_Name_L,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Sys_LocationType_Master_Insert] @Location_Type_Name nvarchar(255), @Location_Type_Name_L nvarchar(255), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy varchar(11), @CreatedDate datetime, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Sys_LocationType_Master (Location_Type_Name,Location_Type_Name_L,[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Location_Type_Name,@Location_Type_Name_L,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Ac_Ageing_Detail_RowStatus_ByInvoice] @Company_Id int, @Brand_Id int, @Location_Id int, @Ref_Id int, @Ref_Type nvarchar(max), @Invoice_No nvarchar(max) As Begin Delete from Ac_Ageing_Detail Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Ref_Id]=@Ref_Id and [Ref_Type]=@Ref_Type and [Invoice_No]=@Invoice_No End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_Ageing_Detail_RowStatus_ByInvoice] @Company_Id int, @Brand_Id int, @Location_Id int, @Ref_Id int, @Ref_Type nvarchar(max), @Invoice_No nvarchar(max) As Begin Delete from Ac_Ageing_Detail Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Ref_Id]=@Ref_Id and [Ref_Type]=@Ref_Type and [Invoice_No]=@Invoice_No End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE proc [dbo].[sp_Set_DepartmentMaster_UpdateParentDepId] @OldParentDepId int, @NewParentDepId int, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int Output As Begin update Set_DepartmentMaster set Parent_Id=@NewParentDepId, ModifiedBy=@ModifiedBy, ModifiedDate=@ModifiedDate where Parent_Id=@OldParentDepId select @ReferenceID=@@ROWCOUNT return @ReferenceID END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter proc [dbo].[sp_Set_DepartmentMaster_UpdateParentDepId] @OldParentDepId int, @NewParentDepId int, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int Output As Begin update Set_DepartmentMaster set Parent_Id=@NewParentDepId, ModifiedBy=@ModifiedBy, ModifiedDate=@ModifiedDate where Parent_Id=@OldParentDepId select @ReferenceID=@@ROWCOUNT return @ReferenceID END";
    //        objDa.execute_Command(strsql);
    //    }



    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Sys_LocationType_Master_SelectRow] @Trans_Id int, @Location_Type_Name nvarchar(255), @Optype int As Begin if(@Optype=1) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master End ELSE IF (@Optype=2) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.ModifiedBy)) as Modified_User From Sys_LocationType_Master Where IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=3) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.ModifiedBy)) as Modified_User From Sys_LocationType_Master Where IsActive='False' order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master Where [Trans_Id] = @Trans_Id and IsActive='True' Order by CreatedDate desc End ELSE IF (@Optype=5) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master Where Location_Type_Name=@Location_Type_Name End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Sys_LocationType_Master_SelectRow] @Trans_Id int, @Location_Type_Name nvarchar(255), @Optype int As Begin if(@Optype=1) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master End ELSE IF (@Optype=2) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.ModifiedBy)) as Modified_User From Sys_LocationType_Master Where IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=3) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.ModifiedBy)) as Modified_User From Sys_LocationType_Master Where IsActive='False' order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master Where [Trans_Id] = @Trans_Id and IsActive='True' Order by CreatedDate desc End ELSE IF (@Optype=5) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master Where Location_Type_Name=@Location_Type_Name End End";
    //        objDa.execute_Command(strsql);
    //    }



    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Employee_Id Int, @Optype int As Begin if(@Optype=1) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id end if(@Optype=2) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and sh.Trans_Id=@Trans_Id end if(@Optype=3) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and sh.Employee_Id=@Employee_Id end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Employee_Id Int, @Optype int As Begin if(@Optype=1) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id end if(@Optype=2) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and sh.Trans_Id=@Trans_Id end if(@Optype=3) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and sh.Employee_Id=@Employee_Id end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_SelectRow] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @Optype int As Begin if(@Optype=1) begin select sd.[Company_Id] , sd.[Brand_Id] , sd.[Location_Id] , sd.[Trans_Id] , sd.[Ref_Id] , sd.[Category_Id] , sd.[Sales_Quota] , sd.[Commission_Percentage] , sd.[Is_Allow] , sd.[Notes] , sd.[Field1] , sd.[Field2] , sd.[Field3] , sd.[Field4] , sd.[Field5] , sd.[Field6] , sd.[Field7] , sd.[IsActive] , sd.[CreatedBy] , sd.[CreatedDate] , sd.[ModifiedBy] , sd.[ModifiedDate] ,Inv_Product_CategoryMaster.Category_Name from Inv_SalesCommissionConfiguration_Detail as SD left join Inv_Product_CategoryMaster on sd.Category_Id=Inv_Product_CategoryMaster.Category_Id where SD.Company_Id=@Company_Id and sd.Brand_Id=@Brand_Id and sd.Location_Id=@Location_Id and SD.Ref_Id=@Ref_Id end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_SelectRow] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @Optype int As Begin if(@Optype=1) begin select sd.[Company_Id] , sd.[Brand_Id] , sd.[Location_Id] , sd.[Trans_Id] , sd.[Ref_Id] , sd.[Category_Id] , sd.[Sales_Quota] , sd.[Commission_Percentage] , sd.[Is_Allow] , sd.[Notes] , sd.[Field1] , sd.[Field2] , sd.[Field3] , sd.[Field4] , sd.[Field5] , sd.[Field6] , sd.[Field7] , sd.[IsActive] , sd.[CreatedBy] , sd.[CreatedDate] , sd.[ModifiedBy] , sd.[ModifiedDate] ,Inv_Product_CategoryMaster.Category_Name from Inv_SalesCommissionConfiguration_Detail as SD left join Inv_Product_CategoryMaster on sd.Category_Id=Inv_Product_CategoryMaster.Category_Id where SD.Company_Id=@Company_Id and sd.Brand_Id=@Brand_Id and sd.Location_Id=@Location_Id and SD.Ref_Id=@Ref_Id end End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_ReturnCommisison_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Commision_Person Int, @Voucher_Header_Id Int, @Voucher_Detail_Id Int, @Return_Voucher_Id int, @Is_Adjustable bit, @Optype Int As Begin if(@Optype=1) begin select Inv_SalesCommission_Detail.field1 as CommisionType,Inv_ReturnCommisison.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id , Inv_ReturnCommisison.Return_Amount from Inv_ReturnCommisison inner join Inv_SalesCommission_Header on Inv_ReturnCommisison.Voucher_Header_Id=Inv_SalesCommission_Header.Trans_id inner join Inv_SalesCommission_Detail on Inv_ReturnCommisison.Voucher_Detail_Id=Inv_SalesCommission_Detail.Trans_Id inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commision_Person end if(@Optype=2) begin select Inv_SalesCommission_Detail.field1 as CommisionType,Inv_ReturnCommisison.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id ,Inv_ReturnCommisison.Return_Amount from Inv_ReturnCommisison inner join Inv_SalesCommission_Header on Inv_ReturnCommisison.Voucher_Header_Id=Inv_SalesCommission_Header.Trans_id inner join Inv_SalesCommission_Detail on Inv_ReturnCommisison.Voucher_Detail_Id=Inv_SalesCommission_Detail.Trans_Id inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_ReturnCommisison.Company_Id=@Company_Id and Inv_ReturnCommisison.Brand_Id=@Brand_Id and Inv_ReturnCommisison.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commision_Person and Inv_ReturnCommisison.Commision_Person=@Commision_Person and Inv_ReturnCommisison.Is_Adjustable=@Is_Adjustable end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_ReturnCommisison_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Commision_Person Int, @Voucher_Header_Id Int, @Voucher_Detail_Id Int, @Return_Voucher_Id int, @Is_Adjustable bit, @Optype Int As Begin if(@Optype=1) begin select Inv_SalesCommission_Detail.field1 as CommisionType,Inv_ReturnCommisison.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id , Inv_ReturnCommisison.Return_Amount from Inv_ReturnCommisison inner join Inv_SalesCommission_Header on Inv_ReturnCommisison.Voucher_Header_Id=Inv_SalesCommission_Header.Trans_id inner join Inv_SalesCommission_Detail on Inv_ReturnCommisison.Voucher_Detail_Id=Inv_SalesCommission_Detail.Trans_Id inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commision_Person end if(@Optype=2) begin select Inv_SalesCommission_Detail.field1 as CommisionType,Inv_ReturnCommisison.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id ,Inv_ReturnCommisison.Return_Amount from Inv_ReturnCommisison inner join Inv_SalesCommission_Header on Inv_ReturnCommisison.Voucher_Header_Id=Inv_SalesCommission_Header.Trans_id inner join Inv_SalesCommission_Detail on Inv_ReturnCommisison.Voucher_Detail_Id=Inv_SalesCommission_Detail.Trans_Id inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_ReturnCommisison.Company_Id=@Company_Id and Inv_ReturnCommisison.Brand_Id=@Brand_Id and Inv_ReturnCommisison.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commision_Person and Inv_ReturnCommisison.Commision_Person=@Commision_Person and Inv_ReturnCommisison.Is_Adjustable=@Is_Adjustable end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Ems_ContactMaster_SelectRow_Report] @Group_Id int, @Status Nvarchar(max), @Optype int As Begin if(@Optype=0) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) as Contact_Company_Name from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.Status,cm.Company_Id end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ems_ContactMaster_SelectRow_Report] @Group_Id int, @Status Nvarchar(max), @Optype int As Begin if(@Optype=0) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) as Contact_Company_Name from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.Status,cm.Company_Id end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Ems_Contact_ProductCategory_SelectRow] @Company_Id int, @Brand_Id int, @Contact_Id int, @CategoryId int, @Type nvarchar(1), @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_Id], [Contact_Id], [CategoryId], [Type], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [IsActive] , (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id=Ems_Contact_ProductCategory.CategoryId) as ProductCategoryName From Ems_Contact_ProductCategory where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Contact_Id=@Contact_Id and [Type]=@Type order by CategoryId desc end if(@Optype=2) begin Select [Company_Id], [Brand_Id], [Contact_Id], [CategoryId], [Type], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [IsActive] From Ems_Contact_ProductCategory where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Type=@Type order by CategoryId desc end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ems_Contact_ProductCategory_SelectRow] @Company_Id int, @Brand_Id int, @Contact_Id int, @CategoryId int, @Type nvarchar(1), @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_Id], [Contact_Id], [CategoryId], [Type], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [IsActive] , (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id=Ems_Contact_ProductCategory.CategoryId) as ProductCategoryName From Ems_Contact_ProductCategory where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Contact_Id=@Contact_Id and [Type]=@Type order by CategoryId desc end if(@Optype=2) begin Select [Company_Id], [Brand_Id], [Contact_Id], [CategoryId], [Type], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [IsActive] From Ems_Contact_ProductCategory where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Type=@Type order by CategoryId desc end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE PROCEDURE [dbo].[sp_Inv_SalesCommission_Summary_Report] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN with tb as( select Sh.Voucher_No,sh.Voucher_Date, case when sh.Field1='Agent' then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) end as Commission_Person, Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Cm.Name as CustomerName, Pm.ProductCode,EMP.Emp_Name as Salesperson,Inv_SalesCommission_Employee_Detail.Commission_Amount, Inv_SalesCommission_Employee_Detail.Is_Paid, Inv_SalesCommission_Detail.Is_Receive, Sh.From_Date, Sh.To_Date, case when Inv_SalesCommission_Employee_Detail.Is_Paid='True' then Inv_SalesCommission_Employee_Detail.Commission_Amount else 0 end as PaidAmount, case when Inv_SalesCommission_Employee_Detail.Is_Paid='True' then 0 else Inv_SalesCommission_Employee_Detail.Commission_Amount end as RemainAmount from Inv_SalesCommission_Header as Sh inner join Inv_SalesCommission_Detail on Sh.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Ems_ContactMaster as Cm on Inv_SalesCommission_Detail.Customer_Id=Cm.Trans_Id inner join Inv_ProductMaster as Pm on Inv_SalesCommission_Detail.Product_Id=Pm.ProductId inner join Inv_SalesInvoiceHeader on Inv_SalesCommission_Detail.Invoice_Id=Inv_SalesInvoiceHeader.Trans_Id inner join Set_EmployeeMaster as EMP on Inv_SalesInvoiceHeader.SalesPerson_Id=EMP.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id) select Commission_Person,DATENAME(MONTH,From_Date)+'-'+DATENAME(YEAR,From_Date) as MonthName, SUM(Commission_Amount) as Commission_Amount,SUM(PaidAmount) as PaidAmount,SUM(RemainAmount) as RemainAmount from tb group by Commission_Person,From_Date,To_Date END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter PROCEDURE [dbo].[sp_Inv_SalesCommission_Summary_Report] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN with tb as( select Sh.Voucher_No,sh.Voucher_Date, case when sh.Field1='Agent' then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) end as Commission_Person, Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Cm.Name as CustomerName, Pm.ProductCode,EMP.Emp_Name as Salesperson,Inv_SalesCommission_Employee_Detail.Commission_Amount, Inv_SalesCommission_Employee_Detail.Is_Paid, Inv_SalesCommission_Detail.Is_Receive, Sh.From_Date, Sh.To_Date, case when Inv_SalesCommission_Employee_Detail.Is_Paid='True' then Inv_SalesCommission_Employee_Detail.Commission_Amount else 0 end as PaidAmount, case when Inv_SalesCommission_Employee_Detail.Is_Paid='True' then 0 else Inv_SalesCommission_Employee_Detail.Commission_Amount end as RemainAmount from Inv_SalesCommission_Header as Sh inner join Inv_SalesCommission_Detail on Sh.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Ems_ContactMaster as Cm on Inv_SalesCommission_Detail.Customer_Id=Cm.Trans_Id inner join Inv_ProductMaster as Pm on Inv_SalesCommission_Detail.Product_Id=Pm.ProductId inner join Inv_SalesInvoiceHeader on Inv_SalesCommission_Detail.Invoice_Id=Inv_SalesInvoiceHeader.Trans_Id inner join Set_EmployeeMaster as EMP on Inv_SalesInvoiceHeader.SalesPerson_Id=EMP.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id) select Commission_Person,DATENAME(MONTH,From_Date)+'-'+DATENAME(YEAR,From_Date) as MonthName, SUM(Commission_Amount) as Commission_Amount,SUM(PaidAmount) as PaidAmount,SUM(RemainAmount) as RemainAmount from tb group by Commission_Person,From_Date,To_Date END";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE PROCEDURE [dbo].[sp_Inv_SalesCommission_Header_VoucherReport] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select SH.Voucher_No,SH.Voucher_Date,sh.From_Date,SH.To_Date,sh.Field1 as CommissionType ,Set_EmployeeMaster.Emp_Name as CommissionPerson,sh.Total_Sales_Amount,sh.Total_Comission_Amount,sh.Field3 as TotalReturnCommission,sh.Field4 as TotalActualCommission,sh.Total_Received_Amount,sh.Total_Paid_Amount,sh.Total_Remain_Amount,sh.Field2 as TotalUnpaidBalace from Inv_SalesCommission_Header as SH left join Set_EmployeeMaster on sh.Emp_Id=Set_EmployeeMaster.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter PROCEDURE [dbo].[sp_Inv_SalesCommission_Header_VoucherReport] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select SH.Voucher_No,SH.Voucher_Date,sh.From_Date,SH.To_Date,sh.Field1 as CommissionType ,Set_EmployeeMaster.Emp_Name as CommissionPerson,sh.Total_Sales_Amount,sh.Total_Comission_Amount,sh.Field3 as TotalReturnCommission,sh.Field4 as TotalActualCommission,sh.Total_Received_Amount,sh.Total_Paid_Amount,sh.Total_Remain_Amount,sh.Field2 as TotalUnpaidBalace from Inv_SalesCommission_Header as SH left join Set_EmployeeMaster on sh.Emp_Id=Set_EmployeeMaster.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id END";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE PROCEDURE [dbo].[sp_Inv_SalesCommission_Header_InvoiceReport] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select Invoice_No,Invoice_Date,MAX(CAST( Field2 as decimal(18,6))) as InvoiceAmount,SUM(Comission_Amount) as TotalCommission from Inv_SalesCommission_Detail group by Invoice_Id ,Invoice_No,Invoice_Date,Company_Id,Brand_Id,Location_Id having Inv_SalesCommission_Detail.Company_Id=@Company_Id and Inv_SalesCommission_Detail.Brand_Id=@Brand_id and Inv_SalesCommission_Detail.Location_Id=@Location_Id order by Invoice_Date END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter PROCEDURE [dbo].[sp_Inv_SalesCommission_Header_InvoiceReport] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select Invoice_No,Invoice_Date,MAX(CAST( Field2 as decimal(18,6))) as InvoiceAmount,SUM(Comission_Amount) as TotalCommission from Inv_SalesCommission_Detail group by Invoice_Id ,Invoice_No,Invoice_Date,Company_Id,Brand_Id,Location_Id having Inv_SalesCommission_Detail.Company_Id=@Company_Id and Inv_SalesCommission_Detail.Brand_Id=@Brand_id and Inv_SalesCommission_Detail.Location_Id=@Location_Id order by Invoice_Date END";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommission_Employee_Detail_Update] @Trans_Id int, @Is_Paid bit, @Paid_Date datetime, @ReferanceId int output As Begin update Inv_SalesCommission_Employee_Detail set Is_Paid=@Is_Paid,Paid_Date=@Paid_Date where Trans_Id=@Trans_Id select @ReferanceID=@@ROWCOUNT return @ReferanceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommission_Employee_Detail_Update] @Trans_Id int, @Is_Paid bit, @Paid_Date datetime, @ReferanceId int output As Begin update Inv_SalesCommission_Employee_Detail set Is_Paid=@Is_Paid,Paid_Date=@Paid_Date where Trans_Id=@Trans_Id select @ReferanceID=@@ROWCOUNT return @ReferanceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommission_Detail_Update] @Trans_Id int, @Is_Receive int , @Is_Return Nvarchar(255) , @ReferenceID int output As Begin update Inv_SalesCommission_Detail set Is_Receive=@Is_Receive,Field3=@Is_return where Trans_Id=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommission_Detail_Update] @Trans_Id int, @Is_Receive int , @Is_Return Nvarchar(255) , @ReferenceID int output As Begin update Inv_SalesCommission_Detail set Is_Receive=@Is_Receive,Field3=@Is_return where Trans_Id=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommission_Detail_SelectPendingCommission] @Company_Id int, @Brand_Id int , @Location_Id int , @FromDate datetime, @Todate datetime, @Commission_Person int, @Invoice_Id int, @Product_Id int, @Optype int As Begin if(@Optype=1) begin select Inv_SalesCommission_Employee_Detail.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Trans_Id as DetailTransId,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commission_Person and (Inv_SalesCommission_Detail.Is_Receive='False' or Inv_SalesCommission_Detail.Field3='False') and Inv_SalesCommission_Header.From_Date>=@FromDate and Inv_SalesCommission_Header.To_Date<=@Todate and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end if(@Optype=2) begin select Inv_SalesCommission_Employee_Detail.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Trans_Id as DetailTransId,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id,Inv_SalesCommission_Detail.field1 as CommisionType from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commission_Person and Inv_SalesCommission_Detail.Is_Receive='True' and Inv_SalesCommission_Employee_Detail.Is_Paid='False' and Inv_SalesCommission_Header.From_Date>=@FromDate and Inv_SalesCommission_Header.To_Date<=@Todate and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end if(@Optype=3) begin select Inv_SalesCommission_Header.Trans_Id as Voucher_header_Id,Inv_SalesCommission_Detail.Trans_Id as Detail_Voucher_Id, Inv_SalesCommission_Employee_Detail.Commission_Person,Inv_SalesCommission_Employee_Detail.Commission_Percentage from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Detail.Invoice_Id=@Invoice_Id and Inv_SalesCommission_Detail.Product_Id =@Product_Id and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesCommission_Detail_SelectPendingCommission] @Company_Id int, @Brand_Id int , @Location_Id int , @FromDate datetime, @Todate datetime, @Commission_Person int, @Invoice_Id int, @Product_Id int, @Optype int As Begin if(@Optype=1) begin select Inv_SalesCommission_Employee_Detail.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Trans_Id as DetailTransId,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commission_Person and (Inv_SalesCommission_Detail.Is_Receive='False' or Inv_SalesCommission_Detail.Field3='False') and Inv_SalesCommission_Header.From_Date>=@FromDate and Inv_SalesCommission_Header.To_Date<=@Todate and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end if(@Optype=2) begin select Inv_SalesCommission_Employee_Detail.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Trans_Id as DetailTransId,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id,Inv_SalesCommission_Detail.field1 as CommisionType from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commission_Person and Inv_SalesCommission_Detail.Is_Receive='True' and Inv_SalesCommission_Employee_Detail.Is_Paid='False' and Inv_SalesCommission_Header.From_Date>=@FromDate and Inv_SalesCommission_Header.To_Date<=@Todate and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end if(@Optype=3) begin select Inv_SalesCommission_Header.Trans_Id as Voucher_header_Id,Inv_SalesCommission_Detail.Trans_Id as Detail_Voucher_Id, Inv_SalesCommission_Employee_Detail.Commission_Person,Inv_SalesCommission_Employee_Detail.Commission_Percentage from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Detail.Invoice_Id=@Invoice_Id and Inv_SalesCommission_Detail.Product_Id =@Product_Id and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE PROCEDURE [dbo].[sp_Inv_SalesCommission_Detail_Report] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select Sh.Voucher_No,sh.Voucher_Date, case when sh.Field1='Agent' then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) end as Commission_Person, Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Cm.Name as CustomerName, Pm.ProductCode,EMP.Emp_Name as Salesperson,Inv_SalesCommission_Employee_Detail.Commission_Amount, Inv_SalesCommission_Employee_Detail.Is_Paid, Inv_SalesCommission_Detail.Is_Receive from Inv_SalesCommission_Header as Sh inner join Inv_SalesCommission_Detail on Sh.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Ems_ContactMaster as Cm on Inv_SalesCommission_Detail.Customer_Id=Cm.Trans_Id inner join Inv_ProductMaster as Pm on Inv_SalesCommission_Detail.Product_Id=Pm.ProductId inner join Inv_SalesInvoiceHeader on Inv_SalesCommission_Detail.Invoice_Id=Inv_SalesInvoiceHeader.Trans_Id inner join Set_EmployeeMaster as EMP on Inv_SalesInvoiceHeader.SalesPerson_Id=EMP.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter PROCEDURE [dbo].[sp_Inv_SalesCommission_Detail_Report] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select Sh.Voucher_No,sh.Voucher_Date, case when sh.Field1='Agent' then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) end as Commission_Person, Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Cm.Name as CustomerName, Pm.ProductCode,EMP.Emp_Name as Salesperson,Inv_SalesCommission_Employee_Detail.Commission_Amount, Inv_SalesCommission_Employee_Detail.Is_Paid, Inv_SalesCommission_Detail.Is_Receive from Inv_SalesCommission_Header as Sh inner join Inv_SalesCommission_Detail on Sh.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Ems_ContactMaster as Cm on Inv_SalesCommission_Detail.Customer_Id=Cm.Trans_Id inner join Inv_ProductMaster as Pm on Inv_SalesCommission_Detail.Product_Id=Pm.ProductId inner join Inv_SalesInvoiceHeader on Inv_SalesCommission_Detail.Invoice_Id=Inv_SalesInvoiceHeader.Trans_Id inner join Set_EmployeeMaster as EMP on Inv_SalesInvoiceHeader.SalesPerson_Id=EMP.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id END";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Ac_SubChartOfAccount_RowStatus_ByTransID] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int As Begin Delete from Ac_SubChartOfAccount Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_SubChartOfAccount_RowStatus_ByTransID] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int As Begin Delete from Ac_SubChartOfAccount Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Ac_Voucher_Detail_UpdateReconcileStatus] @Trans_Id int, @Field3 nvarchar(255), @Field4 nvarchar(255), @ReferenceID int output As Begin Update Ac_Voucher_Detail SET [Field3]=@Field3 ,[Field4]=@Field4 Where [Trans_Id] = @Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End ";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_Voucher_Detail_UpdateReconcileStatus] @Trans_Id int, @Field3 nvarchar(255), @Field4 nvarchar(255), @ReferenceID int output As Begin Update Ac_Voucher_Detail SET [Field3]=@Field3 ,[Field4]=@Field4 Where [Trans_Id] = @Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End ";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Ac_SupplierStatement_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Optype int As Begin IF (@Optype=1) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Currency_Id, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Top 1 Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Company_Id=Ac_Voucher_Detail.Other_Account_No) as ContactName, (Select Ems_ContactMaster.Code from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as ContactCode, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No, (Select Set_AddressMaster.Address From Set_AddressMaster where Set_AddressMaster.Trans_Id=(Select top 1 Set_AddressChild.Ref_Id from Set_AddressChild where Set_AddressChild.Add_Type='Contact' and Set_AddressChild.Add_Ref_Id=Ac_Voucher_Detail.Other_Account_No)) as CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_SupplierStatement_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Optype int As Begin IF (@Optype=1) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Currency_Id, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Top 1 Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Company_Id=Ac_Voucher_Detail.Other_Account_No) as ContactName, (Select Ems_ContactMaster.Code from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as ContactCode, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No, (Select Set_AddressMaster.Address From Set_AddressMaster where Set_AddressMaster.Trans_Id=(Select top 1 Set_AddressChild.Ref_Id from Set_AddressChild where Set_AddressChild.Add_Type='Contact' and Set_AddressChild.Add_Ref_Id=Ac_Voucher_Detail.Other_Account_No)) as CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ac_AllSupplierDetail_SelectRow]       @Company_Id int, @Brand_Id int,    @Account_No nvarchar(max),  @SupplierAccount_No int, @Location_Id Nvarchar(Max), @FromDate datetime, @ToDate datetime,   @Currency_Type int,       @Optype int As      Begin      IF (@Optype=1)      Begin   select Company_Id,Brand_Id,Supplier_Id,Name,(case when @Currency_Type=1 then Opening_Balance else Company_OpeningBalance end) as Opening_Final,(case when @Currency_Type=1 then Debit_Amount else Company_DebitAmount end) as Debit_Final,(case when @Currency_Type=1 then Credit_Amount else Company_CreditAmount end) as Credit_Final,(case when @Currency_Type=1 then Closing_Balance else Company_ClosingBalance end) as Closing_Final,Opening_Balance,Debit_Amount,Credit_Amount,Closing_Balance,ForeignOpening_Balance,ForeignDebit_Amount,ForeignCredit_Amount,ForeignClosing_Balance,Company_OpeningBalance,Company_DebitAmount,Company_CreditAmount,Company_ClosingBalance,(case when @Currency_Type=1 then Start30 else Comp_Start30 end) as Start30_Final,(case when @Currency_Type=1 then Second60 else comp_second60 end) as Second60_Final,(case when @Currency_Type=1 then Third90 else Comp_third90 end) as Third90_Final,(case when @Currency_Type=1 then Fourth90Above else Comp_fourth90above end) as Fourth90above_Final,(case when @Currency_Type=1 then AgeingBalance else Comp_AgeingBalance end) as AgeingBalance_Final,Start30,Second60,Third90,Fourth90Above,AgeingBalance,Comp_Start30,Comp_Second60,Comp_Third90,Comp_Fourth90Above,Comp_AgeingBalance from(select Set_Suppliers.Company_Id,Set_Suppliers.Brand_Id,Set_Suppliers.Supplier_Id,ems_contactmaster.Name,((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0)))as Opening_Balance,          isnull(trans.dr,0)as Debit_Amount,isnull(trans.cr,0) as Credit_Amount,           (((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0)) as Closing_Balance,          ((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0)))as ForeignOpening_Balance,          isnull(trans.f_dr,0)as ForeignDebit_Amount,isnull(trans.f_cr,0) as ForeignCredit_Amount,          ((((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as ForeignClosing_Balance,                     ((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0)))as Company_OpeningBalance,          isnull(trans.cmp_dr,0)as Company_DebitAmount,isnull(trans.cmp_cr,0) as Company_CreditAmount,          ((((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as Company_ClosingBalance,                                        (select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Start30,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Second60,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Third90,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Fourth90Above,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as AgeingBalance,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Start30,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Second60,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Third90,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Fourth90Above,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_AgeingBalance                    from (select Set_Suppliers.Company_Id,Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id from Set_Suppliers where Set_Suppliers.Account_No=@SupplierAccount_No and Set_Suppliers.Company_Id=@Company_Id and Set_Suppliers.Brand_Id=@Brand_Id and Set_Suppliers.IsActive='True')set_suppliers           left join          (select Ac_SubChartOfAccount.Other_account_no, SUM(isnull(Ac_SubChartOfAccount.LCr_Amount,0)) as m_o_cr, SUM(isnull(Ac_SubChartOfAccount.LDr_Amount,0)) as m_o_dr, SUM(isnull(cast(Ac_SubChartOfAccount.FCr_Amount as float),0)) as m_f_o_cr,SUM(isnull(cast(Ac_SubChartOfAccount.FDr_Amount as float),0)) as m_f_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float),0)) as m_cmp_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) as m_cmp_o_cr from ac_subChartOfAccount where Ac_SubChartOfAccount.Other_Account_No=@SupplierAccount_No and Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) group by Ac_SubChartOfAccount.Company_Id,Ac_SubChartOfAccount.Brand_Id,Ac_SubChartOfAccount.other_account_no)m_ob on m_ob.other_account_no=set_suppliers.Supplier_Id          left join                              ems_contactmaster on ems_contactmaster.Trans_Id=set_suppliers.Supplier_Id left join          (select VD.Other_Account_No,VD.Company_Id,VD.Brand_Id,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Debit_Amount else 0 end))as dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.Foreign_Amount else 0 end))as f_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Credit_Amount else 0 end))as cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.Credit_Amount else 0 end))as f_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.Debit_Amount else 0 end))as dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.Debit_Amount else 0 end))as f_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.credit_Amount else 0 end))as cr,             sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.credit_Amount else 0 end))as f_cr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No     inner join Set_Suppliers on Set_Suppliers.Supplier_Id=VD.Other_Account_No      where VD.Account_No in (SELECT CAST(Value AS INT) FROM F_Split(@Account_No, ',')) and VD.Other_Account_No!=0 and Set_Suppliers.Company_Id=@Company_Id and Set_Suppliers.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive='True' and Ac_Voucher_Header.ReconciledFromFinance='True'     and Ac_Voucher_Header.Voucher_Date <=@ToDate and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved')    group by VD.Company_Id,VD.Brand_Id,VD.Other_Account_No)trans    on trans.Other_Account_No=Set_Suppliers.Supplier_Id)tbl_final order by Name      End end";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Ac_AllSupplierDetail_SelectRow]       @Company_Id int, @Brand_Id int,    @Account_No nvarchar(max),  @SupplierAccount_No int, @Location_Id Nvarchar(Max), @FromDate datetime, @ToDate datetime,   @Currency_Type int,       @Optype int As      Begin      IF (@Optype=1)      Begin   select Company_Id,Brand_Id,Supplier_Id,Name,(case when @Currency_Type=1 then Opening_Balance else Company_OpeningBalance end) as Opening_Final,(case when @Currency_Type=1 then Debit_Amount else Company_DebitAmount end) as Debit_Final,(case when @Currency_Type=1 then Credit_Amount else Company_CreditAmount end) as Credit_Final,(case when @Currency_Type=1 then Closing_Balance else Company_ClosingBalance end) as Closing_Final,Opening_Balance,Debit_Amount,Credit_Amount,Closing_Balance,ForeignOpening_Balance,ForeignDebit_Amount,ForeignCredit_Amount,ForeignClosing_Balance,Company_OpeningBalance,Company_DebitAmount,Company_CreditAmount,Company_ClosingBalance,(case when @Currency_Type=1 then Start30 else Comp_Start30 end) as Start30_Final,(case when @Currency_Type=1 then Second60 else comp_second60 end) as Second60_Final,(case when @Currency_Type=1 then Third90 else Comp_third90 end) as Third90_Final,(case when @Currency_Type=1 then Fourth90Above else Comp_fourth90above end) as Fourth90above_Final,(case when @Currency_Type=1 then AgeingBalance else Comp_AgeingBalance end) as AgeingBalance_Final,Start30,Second60,Third90,Fourth90Above,AgeingBalance,Comp_Start30,Comp_Second60,Comp_Third90,Comp_Fourth90Above,Comp_AgeingBalance from(select Set_Suppliers.Company_Id,Set_Suppliers.Brand_Id,Set_Suppliers.Supplier_Id,ems_contactmaster.Name,((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0)))as Opening_Balance,          isnull(trans.dr,0)as Debit_Amount,isnull(trans.cr,0) as Credit_Amount,           (((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0)) as Closing_Balance,          ((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0)))as ForeignOpening_Balance,          isnull(trans.f_dr,0)as ForeignDebit_Amount,isnull(trans.f_cr,0) as ForeignCredit_Amount,          ((((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as ForeignClosing_Balance,                     ((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0)))as Company_OpeningBalance,          isnull(trans.cmp_dr,0)as Company_DebitAmount,isnull(trans.cmp_cr,0) as Company_CreditAmount,          ((((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as Company_ClosingBalance,                                        (select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Start30,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Second60,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Third90,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Fourth90Above,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as AgeingBalance,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Start30,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Second60,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Third90,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Fourth90Above,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_AgeingBalance                    from (select Set_Suppliers.Company_Id,Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id from Set_Suppliers where Set_Suppliers.Account_No=@SupplierAccount_No and Set_Suppliers.Company_Id=@Company_Id and Set_Suppliers.Brand_Id=@Brand_Id and Set_Suppliers.IsActive='True')set_suppliers           left join          (select Ac_SubChartOfAccount.Other_account_no, SUM(isnull(Ac_SubChartOfAccount.LCr_Amount,0)) as m_o_cr, SUM(isnull(Ac_SubChartOfAccount.LDr_Amount,0)) as m_o_dr, SUM(isnull(cast(Ac_SubChartOfAccount.FCr_Amount as float),0)) as m_f_o_cr,SUM(isnull(cast(Ac_SubChartOfAccount.FDr_Amount as float),0)) as m_f_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float),0)) as m_cmp_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) as m_cmp_o_cr from ac_subChartOfAccount where Ac_SubChartOfAccount.Other_Account_No=@SupplierAccount_No and Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) group by Ac_SubChartOfAccount.Company_Id,Ac_SubChartOfAccount.Brand_Id,Ac_SubChartOfAccount.other_account_no)m_ob on m_ob.other_account_no=set_suppliers.Supplier_Id          left join                              ems_contactmaster on ems_contactmaster.Trans_Id=set_suppliers.Supplier_Id left join          (select VD.Other_Account_No,VD.Company_Id,VD.Brand_Id,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Debit_Amount else 0 end))as dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.Foreign_Amount else 0 end))as f_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Credit_Amount else 0 end))as cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.Credit_Amount else 0 end))as f_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.Debit_Amount else 0 end))as dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.Debit_Amount else 0 end))as f_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.credit_Amount else 0 end))as cr,             sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.credit_Amount else 0 end))as f_cr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No     inner join Set_Suppliers on Set_Suppliers.Supplier_Id=VD.Other_Account_No      where VD.Account_No in (SELECT CAST(Value AS INT) FROM F_Split(@Account_No, ',')) and VD.Other_Account_No!=0 and Set_Suppliers.Company_Id=@Company_Id and Set_Suppliers.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive='True' and Ac_Voucher_Header.ReconciledFromFinance='True'     and Ac_Voucher_Header.Voucher_Date <=@ToDate and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved')    group by VD.Company_Id,VD.Brand_Id,VD.Other_Account_No)trans    on trans.Other_Account_No=Set_Suppliers.Supplier_Id)tbl_final order by Name      End end";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "CREATE Procedure [dbo].[sp_Ac_AllStatements_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id Nvarchar(Max), @Account_No int, @Other_Account_No int, @From_Date datetime, @To_Date datetime, @Currency_Type int As Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id,dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, (case when @Currency_Type=1 then dbo.Ac_Voucher_Detail.Debit_Amount else Ac_Voucher_Detail.CompanyCurrDebit end) as Debit_Amount , (case when @Currency_Type=1 then dbo.Ac_Voucher_Detail.Credit_Amount else Ac_Voucher_Detail.CompanyCurrCredit end) as Credit_Amount , dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount,Ac_Voucher_Detail.Field2 as BankReconcilation, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Top 1 Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Company_Id=Ac_Voucher_Detail.Other_Account_No) as ContactName, (Select Ems_ContactMaster.Code from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as ContactCode, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No, (Select Set_AddressMaster.Address From Set_AddressMaster where Set_AddressMaster.Trans_Id=(Select top 1 Set_AddressChild.Ref_Id from Set_AddressChild where Set_AddressChild.Add_Type='Contact' and Set_AddressChild.Add_Ref_Id=Ac_Voucher_Detail.Other_Account_No)) as CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Detail.Account_No=@Account_No and (Case when @Other_Account_No>0 then Ac_Voucher_Detail.Other_Account_No else 0 end) =@Other_Account_No and (Ac_Voucher_Header.Voucher_Date>=@From_Date and Ac_Voucher_Header.Voucher_Date<=@To_Date) and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_AllStatements_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id Nvarchar(Max), @Account_No int, @Other_Account_No int, @From_Date datetime, @To_Date datetime, @Currency_Type int As Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id,dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, (case when @Currency_Type=1 then dbo.Ac_Voucher_Detail.Debit_Amount else Ac_Voucher_Detail.CompanyCurrDebit end) as Debit_Amount , (case when @Currency_Type=1 then dbo.Ac_Voucher_Detail.Credit_Amount else Ac_Voucher_Detail.CompanyCurrCredit end) as Credit_Amount , dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount,Ac_Voucher_Detail.Field2 as BankReconcilation, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Top 1 Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Company_Id=Ac_Voucher_Detail.Other_Account_No) as ContactName, (Select Ems_ContactMaster.Code from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as ContactCode, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No, (Select Set_AddressMaster.Address From Set_AddressMaster where Set_AddressMaster.Trans_Id=(Select top 1 Set_AddressChild.Ref_Id from Set_AddressChild where Set_AddressChild.Add_Type='Contact' and Set_AddressChild.Add_Ref_Id=Ac_Voucher_Detail.Other_Account_No)) as CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Detail.Account_No=@Account_No and (Case when @Other_Account_No>0 then Ac_Voucher_Detail.Other_Account_No else 0 end) =@Other_Account_No and (Ac_Voucher_Header.Voucher_Date>=@From_Date and Ac_Voucher_Header.Voucher_Date<=@To_Date) and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ac_AllCustomer_Balance]     @Company_Id int, @Brand_Id int,    @Account_No nvarchar(max),  @CustomerAccount_No int, @Location_Id Nvarchar(Max), @FromDate datetime, @ToDate datetime,  @currency_type int,         @Optype int As       Begin      IF (@Optype=1)      Begin   select company_id,brand_id,Customer_Id,name,(case when @currency_type=1 then opening_balance else cmp_ob end) as opening_final,(case when @currency_type=1 then debit_amount else cmp_dr end) as Debit_final,(case when @currency_type=1 then credit_Amount else cmp_cr end) as Credit_final,(case when @currency_type=1 then closing_balance else cmp_cb end) as closing_final,opening_balance,debit_amount,credit_Amount,closing_balance,ForeignOpening_Balance,ForeignDebit_Amount,ForeignCredit_Amount,ForeignClosing_Balance,cmp_ob,cmp_dr,cmp_cr,(case when @currency_type=1 then Start30 else Comp_Start30 end) as start30_final,(case when @currency_type=1 then second60 else comp_second60 end) as second60_final,(case when @currency_type=1 then third90 else Comp_third90 end) as third90_final,(case when @currency_type=1 then fourth90above else Comp_fourth90above end) as fourth90above_final,(case when @currency_type=1 then ageingBalance else Comp_ageingBalance end) as AgeingBalance_final,Start30,second60,third90,fourth90above,ageingBalance,Comp_Start30,comp_second60,Comp_third90,Comp_fourth90above,Comp_ageingBalance from (select set_CustomerMaster.Company_Id,set_CustomerMaster.Brand_Id,set_CustomerMaster.Customer_Id,ems_contactmaster.Name,((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0)))as Opening_Balance,          isnull(trans.dr,0)as Debit_Amount,isnull(trans.cr,0) as Credit_Amount,           (((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0)) as Closing_Balance,          ((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0)))as ForeignOpening_Balance,          isnull(trans.f_dr,0)as ForeignDebit_Amount,isnull(trans.f_cr,0) as ForeignCredit_Amount,          ((((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as ForeignClosing_Balance,                     ((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0)))as cmp_ob,          isnull(trans.cmp_dr,0)as cmp_dr,isnull(trans.cmp_cr,0) as cmp_cr,          ((((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as cmp_cb,                                        (select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Start30,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Second60,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Third90,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Fourth90Above,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as AgeingBalance,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Start30,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Second60,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Third90,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Fourth90Above,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_AgeingBalance                    from (select set_CustomerMaster.Company_Id,set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id from set_CustomerMaster where set_CustomerMaster.Account_No=@CustomerAccount_no and set_CustomerMaster.Company_Id=@Company_Id and set_CustomerMaster.Brand_Id=@Brand_Id and set_CustomerMaster.IsActive='True')set_CustomerMaster           left join          (select Ac_SubChartOfAccount.Other_account_no, SUM(isnull(Ac_SubChartOfAccount.LCr_Amount,0)) as m_o_cr, SUM(isnull(Ac_SubChartOfAccount.LDr_Amount,0)) as m_o_dr, SUM(isnull(cast(Ac_SubChartOfAccount.FCr_Amount as float),0)) as m_f_o_cr,SUM(isnull(cast(Ac_SubChartOfAccount.FDr_Amount as float),0)) as m_f_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float),0)) as m_cmp_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) as m_cmp_o_cr from ac_subChartOfAccount where Ac_SubChartOfAccount.Other_Account_No=@CustomerAccount_no and Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) group by Ac_SubChartOfAccount.Company_Id,Ac_SubChartOfAccount.Brand_Id,Ac_SubChartOfAccount.other_account_no)m_ob on m_ob.other_account_no=set_CustomerMaster.Customer_Id          left join                              ems_contactmaster on ems_contactmaster.Trans_Id=set_CustomerMaster.Customer_Id left join          (select VD.Other_Account_No,VD.Company_Id,VD.Brand_Id,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Debit_Amount else 0 end))as dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.Foreign_Amount else 0 end))as f_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Credit_Amount else 0 end))as cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.Credit_Amount else 0 end))as f_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.Debit_Amount else 0 end))as dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.Debit_Amount else 0 end))as f_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.credit_Amount else 0 end))as cr,             sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.credit_Amount else 0 end))as f_cr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No     inner join set_CustomerMaster on set_CustomerMaster.Customer_Id=VD.Other_Account_No      where VD.Account_No in (SELECT CAST(Value AS INT) FROM F_Split(@Account_No, ',')) and VD.Other_Account_No!=0 and set_CustomerMaster.Company_Id=@Company_Id and set_CustomerMaster.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive='True' and Ac_Voucher_Header.ReconciledFromFinance='True'     and Ac_Voucher_Header.Voucher_Date <=@ToDate     group by VD.Company_Id,VD.Brand_Id,VD.Other_Account_No)trans    on trans.Other_Account_No=set_CustomerMaster.Customer_Id)final order by name       End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Ac_AllCustomer_Balance]     @Company_Id int, @Brand_Id int,    @Account_No nvarchar(max),  @CustomerAccount_No int, @Location_Id Nvarchar(Max), @FromDate datetime, @ToDate datetime,  @currency_type int,         @Optype int As       Begin      IF (@Optype=1)      Begin   select company_id,brand_id,Customer_Id,name,(case when @currency_type=1 then opening_balance else cmp_ob end) as opening_final,(case when @currency_type=1 then debit_amount else cmp_dr end) as Debit_final,(case when @currency_type=1 then credit_Amount else cmp_cr end) as Credit_final,(case when @currency_type=1 then closing_balance else cmp_cb end) as closing_final,opening_balance,debit_amount,credit_Amount,closing_balance,ForeignOpening_Balance,ForeignDebit_Amount,ForeignCredit_Amount,ForeignClosing_Balance,cmp_ob,cmp_dr,cmp_cr,(case when @currency_type=1 then Start30 else Comp_Start30 end) as start30_final,(case when @currency_type=1 then second60 else comp_second60 end) as second60_final,(case when @currency_type=1 then third90 else Comp_third90 end) as third90_final,(case when @currency_type=1 then fourth90above else Comp_fourth90above end) as fourth90above_final,(case when @currency_type=1 then ageingBalance else Comp_ageingBalance end) as AgeingBalance_final,Start30,second60,third90,fourth90above,ageingBalance,Comp_Start30,comp_second60,Comp_third90,Comp_fourth90above,Comp_ageingBalance from (select set_CustomerMaster.Company_Id,set_CustomerMaster.Brand_Id,set_CustomerMaster.Customer_Id,ems_contactmaster.Name,((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0)))as Opening_Balance,          isnull(trans.dr,0)as Debit_Amount,isnull(trans.cr,0) as Credit_Amount,           (((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0)) as Closing_Balance,          ((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0)))as ForeignOpening_Balance,          isnull(trans.f_dr,0)as ForeignDebit_Amount,isnull(trans.f_cr,0) as ForeignCredit_Amount,          ((((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as ForeignClosing_Balance,                     ((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0)))as cmp_ob,          isnull(trans.cmp_dr,0)as cmp_dr,isnull(trans.cmp_cr,0) as cmp_cr,          ((((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as cmp_cb,                                        (select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Start30,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Second60,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Third90,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Fourth90Above,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as AgeingBalance,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Start30,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Second60,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Third90,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Fourth90Above,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_AgeingBalance                    from (select set_CustomerMaster.Company_Id,set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id from set_CustomerMaster where set_CustomerMaster.Account_No=@CustomerAccount_no and set_CustomerMaster.Company_Id=@Company_Id and set_CustomerMaster.Brand_Id=@Brand_Id and set_CustomerMaster.IsActive='True')set_CustomerMaster           left join          (select Ac_SubChartOfAccount.Other_account_no, SUM(isnull(Ac_SubChartOfAccount.LCr_Amount,0)) as m_o_cr, SUM(isnull(Ac_SubChartOfAccount.LDr_Amount,0)) as m_o_dr, SUM(isnull(cast(Ac_SubChartOfAccount.FCr_Amount as float),0)) as m_f_o_cr,SUM(isnull(cast(Ac_SubChartOfAccount.FDr_Amount as float),0)) as m_f_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float),0)) as m_cmp_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) as m_cmp_o_cr from ac_subChartOfAccount where Ac_SubChartOfAccount.Other_Account_No=@CustomerAccount_no and Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) group by Ac_SubChartOfAccount.Company_Id,Ac_SubChartOfAccount.Brand_Id,Ac_SubChartOfAccount.other_account_no)m_ob on m_ob.other_account_no=set_CustomerMaster.Customer_Id          left join                              ems_contactmaster on ems_contactmaster.Trans_Id=set_CustomerMaster.Customer_Id left join          (select VD.Other_Account_No,VD.Company_Id,VD.Brand_Id,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Debit_Amount else 0 end))as dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.Foreign_Amount else 0 end))as f_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Credit_Amount else 0 end))as cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.Credit_Amount else 0 end))as f_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.Debit_Amount else 0 end))as dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.Debit_Amount else 0 end))as f_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.credit_Amount else 0 end))as cr,             sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.credit_Amount else 0 end))as f_cr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No     inner join set_CustomerMaster on set_CustomerMaster.Customer_Id=VD.Other_Account_No      where VD.Account_No in (SELECT CAST(Value AS INT) FROM F_Split(@Account_No, ',')) and VD.Other_Account_No!=0 and set_CustomerMaster.Company_Id=@Company_Id and set_CustomerMaster.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive='True' and Ac_Voucher_Header.ReconciledFromFinance='True'     and Ac_Voucher_Header.Voucher_Date <=@ToDate     group by VD.Company_Id,VD.Brand_Id,VD.Other_Account_No)trans    on trans.Other_Account_No=set_CustomerMaster.Customer_Id)final order by name       End End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "select * from Set_OperationType where Op_Type='Is Pay  Commission ?'";
    //        if (objDa.return_DataTable(strsql).Rows.Count == 0)
    //        {

    //            strsql = "insert into Set_OperationType values(21,'Is Pay  Commission ?')";
    //            objDa.execute_Command(strsql);
    //        }
    //    }
    //    catch
    //    {

    //    }


    //    try
    //    {
    //        strsql = "update Inv_SalesReturnHeader set CreatedBy=(select Inv_SalesInvoiceHeader.CreatedBy from Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Trans_Id=Inv_SalesReturnHeader.Invoice_Id),ModifiedBy=(select Inv_SalesInvoiceHeader.ModifiedBy from Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Trans_Id=Inv_SalesReturnHeader.Invoice_Id)";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }


    //    try
    //    {
    //        strsql = "update IT_ObjectEntry  Set Page_Url='../VoucherEntries/AgeingSettlementNew.aspx' where OBJECT_ID='338'";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "update Set_UserPermission set Set_UserPermission.Field1=(select Set_UserMaster.Role_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_UserPermission.User_Id and Set_UserMaster.Company_Id=Set_UserPermission.Company_Id) where Set_UserPermission.Field1=' ' ";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "select * from it_objectentry where OBJECT_NAME='Location Type'";
    //        if (objDa.return_DataTable(strsql).Rows.Count == 0)
    //        {

    //            strsql = "INSERT INTO [IT_ObjectEntry]           ([Object_Name]           ,[Object_Name_L]           ,[Page_Url]           ,[Order_Appear]           ,[Form_Type]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])     VALUES           ('Location Type'           ,'Location Type'           ,'../SystemSetUp/LocationType.aspx'           ,'12'           ,'F'           ,'True'           ,'superadmin'           ,'" + DateTime.Now.ToString() + "'            ,'superadmin'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);
    //        }
    //    }
    //    catch
    //    {

    //    }



    //    try
    //    {
    //        strsql = "select * from IT_App_Mod_Object where OBJECT_ID=340 and application_id=0";
    //        if (objDa.return_DataTable(strsql).Rows.Count == 0)
    //        {

    //            strsql = "insert into IT_App_Mod_Object values(0,106,340)";
    //            objDa.execute_Command(strsql);
    //        }
    //    }
    //    catch
    //    {

    //    }


    //    try
    //    {
    //        strsql = "select * from IT_App_Mod_Object where OBJECT_ID=340 and application_id=3";
    //        if (objDa.return_DataTable(strsql).Rows.Count == 0)
    //        {

    //            strsql = "insert into IT_App_Mod_Object values(3,106,340)";
    //            objDa.execute_Command(strsql);
    //        }
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "update Inv_SalesOrderDetail set Field2='4' where Field6='True' and Field2=' '";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "update Inv_SalesOrderDetail set Field2='0' where Field6='False' and Field2=' '";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "update Inv_SalesInvoiceDetail set Field3='0' where Field3=' '";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "select * from inv_parametermaster where ParameterName='Commission Payment Allow(In Month)'";
    //        if (objDa.return_DataTable(strsql).Rows.Count == 0)
    //        {

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (1           ,1           ,1          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,1          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,2         ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);
    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,3         ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);
    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,4          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,3           ,5          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,6          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,7          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);



    //        }
    //    }
    //    catch
    //    {

    //    }



    //    try
    //    {
    //        strsql = "select * from inv_parametermaster where ParameterName='Is Serial on Sales Return'";
    //        if (objDa.return_DataTable(strsql).Rows.Count == 0)
    //        {

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (1           ,1           ,1          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,1          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,2         ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);
    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,3         ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);
    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,4          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,3           ,5          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,6          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,7          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);



    //        }
    //    }
    //    catch
    //    {

    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesReturnHeader_RowStatus] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesReturnHeader set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);

    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesReturnHeader_RowStatus] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesReturnHeader set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesQuotationHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @SQuotation_Id int, @SQuotation_No nvarchar(255), @SInquiry_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Amount] ,[Emp_Id] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by SQuotation_Id desc End ELSE IF (@Optype=2) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,dbo.Set_EmployeeMaster.Emp_Name as EmployeeName ,Ems_ContactMaster.Name as Customer_Name, Inv_SalesInquiryHeader.SInquiryNo as InquiryNo, Inv_SalesInquiryHeader.OrderCompletionDate as OrderCompletionDate, (SELECT STUFF((SELECT Distinct ',' + cast(Inv_ProductMaster.EProductName as char(14))+'...' FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as ShortProductList, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_ProductMaster.EProductName) FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as FullProductList , (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id =SI.Field5) as CategoryName FROM Inv_SalesQuotationHeader as SI left Join Set_EmployeeMaster ON SI.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id left join Inv_SalesInquiryHeader on SI.SInquiry_No=Inv_SalesInquiryHeader.SInquiryID left join Ems_ContactMaster on Ems_ContactMaster.Trans_Id=Inv_SalesInquiryHeader.Customer_Id Where SI.Company_Id = @Company_Id and SI.Brand_Id=@Brand_Id and SI.Location_Id=@Location_Id and SI.IsActive='True' order by SI.Field7 desc End ELSE IF (@Optype=3) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id =SI.Field5) as CategoryName , (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,dbo.Set_EmployeeMaster.Emp_Name as EmployeeName ,(Select name from Ems_ContactMaster where Trans_Id in (Select Customer_Id from Inv_SalesInquiryHeader where Inv_SalesInquiryHeader.SInquiryID=si.SInquiry_No) )as Customer_Name, (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=SI.SInquiry_No) as InquiryNo, (SELECT STUFF((SELECT Distinct ',' + cast(Inv_ProductMaster.EProductName as char(14))+'...' FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as ShortProductList, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_ProductMaster.EProductName) FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as FullProductList FROM Inv_SalesQuotationHeader as SI left Join Set_EmployeeMaster ON SI.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id Where SI.Company_Id = @Company_Id and SI.Brand_Id=@Brand_Id and SI.Location_Id=@Location_Id and SI.IsActive='False' order by SI.SQuotation_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,Agent_Id ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST(Inv_SalesQuotationHeader.row_lock_Id as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] ,(Select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id =Inv_SalesQuotationHeader.Agent_Id )as Agent_Name FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SQuotation_Id=@SQuotation_Id order by SQuotation_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SQuotation_No=@SQuotation_No order by SQuotation_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SInquiry_No=@SInquiry_No order by SQuotation_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(SQuotation_Id) FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,(Select name from Ems_ContactMaster where Trans_Id in (Select Customer_Id from Inv_SalesInquiryHeader where Inv_SalesInquiryHeader.SInquiryID=si.SInquiry_No) )as Customer_Name, (select Emp_Name from Set_EmployeeMaster where Emp_Id=SI.Emp_Id) as EmployeeName FROM Inv_SalesQuotationHeader as SI where SI.SQuotation_Id not in(select SOfromTransNo from Inv_SalesOrderHeader) and SI.IsActive='True' and SI.Company_Id=@Company_Id and SI.Brand_ID=@Brand_Id and SI.Location_Id=@Location_Id order by SQuotation_Id desc End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesQuotationHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @SQuotation_Id int, @SQuotation_No nvarchar(255), @SInquiry_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Amount] ,[Emp_Id] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by SQuotation_Id desc End ELSE IF (@Optype=2) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,dbo.Set_EmployeeMaster.Emp_Name as EmployeeName ,Ems_ContactMaster.Name as Customer_Name, Inv_SalesInquiryHeader.SInquiryNo as InquiryNo, Inv_SalesInquiryHeader.OrderCompletionDate as OrderCompletionDate, (SELECT STUFF((SELECT Distinct ',' + cast(Inv_ProductMaster.EProductName as char(14))+'...' FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as ShortProductList, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_ProductMaster.EProductName) FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as FullProductList , (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id =SI.Field5) as CategoryName FROM Inv_SalesQuotationHeader as SI left Join Set_EmployeeMaster ON SI.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id left join Inv_SalesInquiryHeader on SI.SInquiry_No=Inv_SalesInquiryHeader.SInquiryID left join Ems_ContactMaster on Ems_ContactMaster.Trans_Id=Inv_SalesInquiryHeader.Customer_Id Where SI.Company_Id = @Company_Id and SI.Brand_Id=@Brand_Id and SI.Location_Id=@Location_Id and SI.IsActive='True' order by SI.Field7 desc End ELSE IF (@Optype=3) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id =SI.Field5) as CategoryName , (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,dbo.Set_EmployeeMaster.Emp_Name as EmployeeName ,(Select name from Ems_ContactMaster where Trans_Id in (Select Customer_Id from Inv_SalesInquiryHeader where Inv_SalesInquiryHeader.SInquiryID=si.SInquiry_No) )as Customer_Name, (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=SI.SInquiry_No) as InquiryNo, (SELECT STUFF((SELECT Distinct ',' + cast(Inv_ProductMaster.EProductName as char(14))+'...' FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as ShortProductList, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_ProductMaster.EProductName) FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as FullProductList FROM Inv_SalesQuotationHeader as SI left Join Set_EmployeeMaster ON SI.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id Where SI.Company_Id = @Company_Id and SI.Brand_Id=@Brand_Id and SI.Location_Id=@Location_Id and SI.IsActive='False' order by SI.SQuotation_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,Agent_Id ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST(Inv_SalesQuotationHeader.row_lock_Id as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] ,(Select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id =Inv_SalesQuotationHeader.Agent_Id )as Agent_Name FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SQuotation_Id=@SQuotation_Id order by SQuotation_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SQuotation_No=@SQuotation_No order by SQuotation_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SInquiry_No=@SInquiry_No order by SQuotation_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(SQuotation_Id) FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,(Select name from Ems_ContactMaster where Trans_Id in (Select Customer_Id from Inv_SalesInquiryHeader where Inv_SalesInquiryHeader.SInquiryID=si.SInquiry_No) )as Customer_Name, (select Emp_Name from Set_EmployeeMaster where Emp_Id=SI.Emp_Id) as EmployeeName FROM Inv_SalesQuotationHeader as SI where SI.SQuotation_Id not in(select SOfromTransNo from Inv_SalesOrderHeader) and SI.IsActive='True' and SI.Company_Id=@Company_Id and SI.Brand_ID=@Brand_Id and SI.Location_Id=@Location_Id order by SQuotation_Id desc End End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesOrderHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @SalesOrderNo nvarchar(255), @SOfromTransType nvarchar(1), @SOfromTransNo int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , case when (select distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransType='S' And Inv_SalesInvoiceDetail.SIFromTransNo=Inv_SalesOrderHeader.Trans_Id) Is null then 'Pending' else 'Created' end as InvoiceStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by SalesOrderDate desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,IsdeliveryVoucher ,[IsInPO] ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,Agent_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST(Inv_SalesOrderHeader.row_lock_Id as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id =Inv_SalesOrderHeader.Agent_Id) as Agent_Name, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesOrderHeader.CreatedBy)) as Salespersonname, (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesOrderHeader.CreatedBy) as SalespersonID FROM Inv_SalesOrderHeader Where Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SalesOrderNo=@SalesOrderNo order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SOfromTransType=@SOfromTransType and SOfromTransNo=@SOfromTransNo order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id not in(select Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransType='S') and Inv_SalesOrderHeader.IsActive='True' and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=9) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_SalesOrderHeader.Location_Id) as From_Location_Name FROM Inv_SalesOrderHeader Where IsActive='True' and IsInPO='2' and Inv_SalesOrderHeader.Trans_Id not in (select Inv_ProductionRequestHeader.Field1 from Inv_ProductionRequestHeader) and Inv_SalesOrderHeader.Trans_Id in (select distinct Inv_SalesOrderDetail.SalesOrderNo from Inv_SalesOrderDetail where Inv_SalesOrderDetail.Field2=@Location_Id ) order by Trans_Id desc End ELSE IF (@Optype=11) begin select Inv_SalesOrderHeader.Trans_Id,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate, (Select Ems_ContactMaster.name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , Inv_SalesOrderHeader.NetAmount, Inv_productMaster.ProductCode, Inv_productMaster.EProductName, Inv_UnitMaster.Unit_Name, Inv_SalesOrderDetail.Quantity as OrderQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty , (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesOrderDetail.Product_Id) as sysQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId inner join Inv_UnitMaster on Inv_SalesOrderDetail.UnitId=Inv_UnitMaster.Unit_Id where Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True') and (Inv_SalesInvoiceDetail.OrderQty-Inv_SalesInvoiceDetail.Quantity)<=0 and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.IsActive='True' order by Inv_SalesOrderHeader.CreatedDate desc end ELSE IF (@Optype=12) begin select Inv_SalesOrderHeader.Trans_Id,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate, (Select Ems_ContactMaster.name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , Inv_SalesOrderHeader.NetAmount, Inv_productMaster.ProductCode, Inv_productMaster.EProductName, Inv_UnitMaster.Unit_Name, Inv_SalesOrderDetail.Quantity as OrderQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesDeliveryVoucher_Detail.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesDeliveryVoucher_Detail.Product_Id=Inv_SalesOrderDetail.Product_ID)) IS NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesDeliveryVoucher_Detail.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesDeliveryVoucher_Detail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty , (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesOrderDetail.Product_Id) as sysQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId inner join Inv_UnitMaster on Inv_UnitMaster.Unit_Id=Inv_SalesOrderDetail.UnitId where Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='True') and (Inv_SalesDeliveryVoucher_Detail.Order_Qty-Inv_SalesDeliveryVoucher_Detail.Delievered_Qty)<=0 and Inv_SalesDeliveryVoucher_Detail.Order_id =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='False') and (Inv_SalesDeliveryVoucher_Detail.Delievered_Qty)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='True') and (Inv_SalesDeliveryVoucher_Detail.Order_Qty- (Select sUM(SD.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail as SD where SD.Order_Id =Inv_SalesOrderHeader.Trans_Id and SD.Product_Id=Inv_SalesOrderDetail.Product_ID))=0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderHeader.IsActive='True' and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.IsdeliveryVoucher='True' order by Inv_SalesOrderHeader.CreatedDate desc end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesOrderHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @SalesOrderNo nvarchar(255), @SOfromTransType nvarchar(1), @SOfromTransNo int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , case when (select distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransType='S' And Inv_SalesInvoiceDetail.SIFromTransNo=Inv_SalesOrderHeader.Trans_Id) Is null then 'Pending' else 'Created' end as InvoiceStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by SalesOrderDate desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,IsdeliveryVoucher ,[IsInPO] ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,Agent_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST(Inv_SalesOrderHeader.row_lock_Id as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id =Inv_SalesOrderHeader.Agent_Id) as Agent_Name, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesOrderHeader.CreatedBy)) as Salespersonname, (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesOrderHeader.CreatedBy) as SalespersonID FROM Inv_SalesOrderHeader Where Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SalesOrderNo=@SalesOrderNo order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SOfromTransType=@SOfromTransType and SOfromTransNo=@SOfromTransNo order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id not in(select Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransType='S') and Inv_SalesOrderHeader.IsActive='True' and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=9) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_SalesOrderHeader.Location_Id) as From_Location_Name FROM Inv_SalesOrderHeader Where IsActive='True' and IsInPO='2' and Inv_SalesOrderHeader.Trans_Id not in (select Inv_ProductionRequestHeader.Field1 from Inv_ProductionRequestHeader) and Inv_SalesOrderHeader.Trans_Id in (select distinct Inv_SalesOrderDetail.SalesOrderNo from Inv_SalesOrderDetail where Inv_SalesOrderDetail.Field2=@Location_Id ) order by Trans_Id desc End ELSE IF (@Optype=11) begin select Inv_SalesOrderHeader.Trans_Id,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate, (Select Ems_ContactMaster.name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , Inv_SalesOrderHeader.NetAmount, Inv_productMaster.ProductCode, Inv_productMaster.EProductName, Inv_UnitMaster.Unit_Name, Inv_SalesOrderDetail.Quantity as OrderQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty , (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesOrderDetail.Product_Id) as sysQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId inner join Inv_UnitMaster on Inv_SalesOrderDetail.UnitId=Inv_UnitMaster.Unit_Id where Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True') and (Inv_SalesInvoiceDetail.OrderQty-Inv_SalesInvoiceDetail.Quantity)<=0 and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.IsActive='True' order by Inv_SalesOrderHeader.CreatedDate desc end ELSE IF (@Optype=12) begin select Inv_SalesOrderHeader.Trans_Id,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate, (Select Ems_ContactMaster.name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , Inv_SalesOrderHeader.NetAmount, Inv_productMaster.ProductCode, Inv_productMaster.EProductName, Inv_UnitMaster.Unit_Name, Inv_SalesOrderDetail.Quantity as OrderQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesDeliveryVoucher_Detail.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesDeliveryVoucher_Detail.Product_Id=Inv_SalesOrderDetail.Product_ID)) IS NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesDeliveryVoucher_Detail.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesDeliveryVoucher_Detail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty , (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesOrderDetail.Product_Id) as sysQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId inner join Inv_UnitMaster on Inv_UnitMaster.Unit_Id=Inv_SalesOrderDetail.UnitId where Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='True') and (Inv_SalesDeliveryVoucher_Detail.Order_Qty-Inv_SalesDeliveryVoucher_Detail.Delievered_Qty)<=0 and Inv_SalesDeliveryVoucher_Detail.Order_id =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='False') and (Inv_SalesDeliveryVoucher_Detail.Delievered_Qty)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='True') and (Inv_SalesDeliveryVoucher_Detail.Order_Qty- (Select sUM(SD.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail as SD where SD.Order_Id =Inv_SalesOrderHeader.Trans_Id and SD.Product_Id=Inv_SalesOrderDetail.Product_ID))=0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderHeader.IsActive='True' and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.IsdeliveryVoucher='True' order by Inv_SalesOrderHeader.CreatedDate desc end End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Proc [dbo].[sp_Inv_SalesOrderGetProductForInvoice] @Company_Id int, @Brand_Id int , @Location_ID int, @CustomerId int as begin Select case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as Quantity, case when (Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)is NULL then 0 else (Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID) end as SoldQty, (Select Inv_StockDetail.Quantity From Inv_StockDetail where Inv_StockDetail.ProductId = Inv_SalesOrderDetail.Product_Id and Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_ID=@Location_ID) as SysQty , Inv_SalesOrderHeader.Company_Id,Inv_SalesOrderHeader.Brand_Id,Inv_SalesOrderHeader.Location_Id,Inv_SalesOrderHeader.Field4 , Inv_SalesOrderDetail.Trans_Id,Inv_SalesOrderHeader.SalesOrderDate,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderDetail.Product_Id,Inv_SalesOrderDetail.UnitId,Inv_SalesOrderHeader.Trans_Id as SoID, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_SalesOrderDetail.UnitId) as Unit_Name,Inv_SalesOrderDetail.Serial_No, Inv_SalesOrderDetail.UnitPrice,Inv_SalesOrderDetail.FreeQty, Inv_SalesOrderDetail.Quantity as OrderQty, Inv_SalesOrderDetail.TaxP,Inv_SalesOrderDetail.TaxV,Inv_SalesOrderDetail.DiscountP,Inv_SalesOrderDetail.DiscountV, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Quantity) from Inv_SalesInvoiceDetail where SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) IS NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Quantity) from Inv_SalesInvoiceDetail where SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as InvRemainQty , 0 as InvoiceQty ,0 as RecQty ,Inv_productMaster.EProductName as ProductName,Inv_productMaster.ProductCode,Inv_ProductMaster.Description as ProductDescription From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId where Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False' and Inv_SalesInvoiceHeader.IsActive='True') and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.OrderQty-Inv_SalesInvoiceDetail.Quantity)<=0 and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderHeader.CustomerId=@CustomerId and Inv_SalesOrderHeader.IsActive='True' order by Inv_SalesOrderHeader.SalesOrderDate end";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Proc [dbo].[sp_Inv_SalesOrderGetProductForInvoice] @Company_Id int, @Brand_Id int , @Location_ID int, @CustomerId int as begin Select case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as Quantity, case when (Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)is NULL then 0 else (Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID) end as SoldQty, (Select Inv_StockDetail.Quantity From Inv_StockDetail where Inv_StockDetail.ProductId = Inv_SalesOrderDetail.Product_Id and Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_ID=@Location_ID) as SysQty , Inv_SalesOrderHeader.Company_Id,Inv_SalesOrderHeader.Brand_Id,Inv_SalesOrderHeader.Location_Id,Inv_SalesOrderHeader.Field4 , Inv_SalesOrderDetail.Trans_Id,Inv_SalesOrderHeader.SalesOrderDate,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderDetail.Product_Id,Inv_SalesOrderDetail.UnitId,Inv_SalesOrderHeader.Trans_Id as SoID, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_SalesOrderDetail.UnitId) as Unit_Name,Inv_SalesOrderDetail.Serial_No, Inv_SalesOrderDetail.UnitPrice,Inv_SalesOrderDetail.FreeQty, Inv_SalesOrderDetail.Quantity as OrderQty, Inv_SalesOrderDetail.TaxP,Inv_SalesOrderDetail.TaxV,Inv_SalesOrderDetail.DiscountP,Inv_SalesOrderDetail.DiscountV, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Quantity) from Inv_SalesInvoiceDetail where SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) IS NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Quantity) from Inv_SalesInvoiceDetail where SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as InvRemainQty , 0 as InvoiceQty ,0 as RecQty ,Inv_productMaster.EProductName as ProductName,Inv_productMaster.ProductCode,Inv_ProductMaster.Description as ProductDescription From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId where Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False' and Inv_SalesInvoiceHeader.IsActive='True') and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.OrderQty-Inv_SalesInvoiceDetail.Quantity)<=0 and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderHeader.CustomerId=@CustomerId and Inv_SalesOrderHeader.IsActive='True' order by Inv_SalesOrderHeader.SalesOrderDate end";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesInvoiceHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No nvarchar(255), @SIFromTransType nvarchar(100), @SIFromTransNo nvarchar(50), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] ,ReturnNo FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT ROW_NUMBER() OVER(ORDER BY Inv_SalesInvoiceHeader.Trans_Id asc) AS RowNumber, Set_EmployeeMaster.Emp_Name as EmployeeName , Inv_SalesInvoiceHeader.Company_Id, Inv_SalesInvoiceHeader.Brand_Id, Inv_SalesInvoiceHeader.Location_Id, Ems_ContactMaster.Name as CustomerName , Inv_SalesInvoiceHeader.Invoice_No, Inv_SalesInvoiceHeader.Invoice_Date, Inv_SalesInvoiceHeader.Field4, Inv_SalesInvoiceHeader.GrandTotal, (Inv_SalesInvoiceHeader.GrandTotal*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Inv_SalesInvoiceHeader.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalGrandTotal, (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_SalesInvoiceHeader.Location_Id) as LocationCurrency, Inv_SalesInvoiceHeader.Trans_Id, Inv_SalesInvoiceHeader.Post, Inv_SalesInvoiceHeader.Currency_Id, inv_salesinvoiceheader.Supplier_Id as Customer_Id , case when Inv_SalesInvoiceHeader.SIFromTransType='S' then 'By Sales Order' end as Transtype , Inv_SalesInvoiceHeader.ReturnNo , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesInvoiceHeader.CreatedBy)=0 then Inv_SalesInvoiceHeader.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesInvoiceHeader.CreatedBy)) end as InvoiceCreatedBy, case when ((select ParameterValue from Inv_ParameterMaster where Inv_ParameterMaster.Company_Id=@Company_Id and Inv_ParameterMaster.Brand_Id=@Brand_Id and Inv_ParameterMaster.Location_Id=@Location_Id and Inv_ParameterMaster.ParameterName='Is Delivery Voucher allow')='True') And (Inv_SalesInvoiceHeader.SIFromTransType='S') then Cast('True' As Bit) else CAST('False' as Bit) end as IsDeliveryPrint, Inv_SalesInvoiceHeader.Field7, (select top 1 Inv_SalesInvoiceDetail.Post from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) as ReturnPostStatus , (select sum((Inv_SalesInvoiceDetail.UnitPrice-Inv_SalesInvoiceDetail.DiscountV+Inv_SalesInvoiceDetail.TaxV)*Inv_SalesInvoiceDetail.ReturnQty) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id ) as ReturnAmount, Inv_SalesInvoiceHeader.return_Is_Active , (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_salesOrderHeader.SalesOrderNo) FROM Inv_salesOrderHeader where Inv_salesOrderHeader.Trans_id in (select Distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as OrderList , (select Set_Payment_Mode_Master.Field1 from Set_Payment_Mode_Master where Set_Payment_Mode_Master.Pay_Mode_Id=(select top 1 Inv_PaymentTrn.PaymentModeId from Inv_PaymentTrn where Inv_PaymentTrn.TypeTrans='SI' and Inv_PaymentTrn.TransNo=Inv_SalesInvoiceHeader.Trans_Id )) as PaymentType FROM Inv_SalesInvoiceHeader inner join Set_EmployeeMaster on Set_EmployeeMaster.emp_id=Inv_SalesInvoiceHeader.SalesPerson_Id left join Ems_ContactMaster on Ems_ContactMaster.Trans_Id=Inv_SalesInvoiceHeader.Supplier_Id inner join Set_LocationMaster on Inv_SalesInvoiceHeader.Location_Id=Set_LocationMaster.Location_Id Where Inv_SalesInvoiceHeader.Company_Id = @Company_Id and Inv_SalesInvoiceHeader.Brand_Id=@Brand_Id and Inv_SalesInvoiceHeader.Location_Id=@Location_Id and Inv_SalesInvoiceHeader.IsActive='True' order by Inv_SalesInvoiceHeader.Invoice_Date desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno, (select Emp_Name from Set_EmployeeMaster where Emp_Id=Inv_SalesInvoiceHeader.SalesPerson_Id) as EmployeeName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesInvoiceHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesInvoiceHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesInvoiceHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesInvoiceHeader.ModifiedBy) as ModifiedUser, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_salesOrderHeader.SalesOrderNo) FROM Inv_salesOrderHeader where Inv_salesOrderHeader.Trans_id in (select Distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as OrderList FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] , (select Set_Payment_Mode_Master.Field1 from Set_Payment_Mode_Master where Set_Payment_Mode_Master.Pay_Mode_Id=(select top 1 Inv_PaymentTrn.PaymentModeId from Inv_PaymentTrn where Inv_PaymentTrn.TypeTrans='SI' and Inv_PaymentTrn.TransNo= Inv_SalesInvoiceHeader.Trans_Id )) as PaymentType ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno, (select Emp_Name from Set_EmployeeMaster where Emp_Id=Inv_SalesInvoiceHeader.SalesPerson_Id) as EmployeeName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Field2) as ShipCustomerName FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] , returnno, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Invoice_No=@Invoice_No order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SIFromTransType=@SIFromTransType and SIFromTransNo=@SIFromTransNo order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin select SH.Trans_Id,SH.Invoice_No,SH.Invoice_Date,sh.Currency_Id,Sh.Supplier_Id,(select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=sh.Supplier_Id) as Name,PM.ProductId,PM.ProductCode,PM.EProductName, ((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity) as Amount, (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalAmount, case when @SIFromTransType='Sales' then PM.Field4 when @SIFromTransType='Technical' then PM.Field5 else 1 end as Comission_Percentage, case when @SIFromTransType='Sales' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field4 as decimal(18,6)))/100) when @SIFromTransType='Technical' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field5 as decimal(18,6)))/100) else (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *1)/100) end as Comission_Amount ,SH.SalesPerson_Id, (select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo) as AgentId, (select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=((select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo))) as Agent_name, (select distinct Inv_SalesOrderDetail.AgentCommission from Inv_SalesOrderDetail where Inv_SalesOrderDetail.SalesOrderNo=SD.SIFromTransNo and Inv_SalesOrderDetail.Product_Id=sd.Product_Id) as AgentCommission , case when sd.ReturnQty IS null then 'False' when sd.ReturnQty IS not null And SD.ReturnQty >0 then 'True' else 'False' end as Is_Return , Pm.Field5 as TechnicalCommission from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId inner join Set_LocationMaster on Set_LocationMaster.Location_Id=sh.Location_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.SIFromTransType='S' and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType) order by sh.Invoice_Date End ELSE IF (@Optype=9) Begin select distinct SH.Trans_Id,SH.Invoice_No from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType) end else if(@Optype=10) begin select SH.Trans_Id,SH.Invoice_No,SH.Invoice_Date,sh.Currency_Id,Sh.Supplier_Id,(select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=sh.Supplier_Id) as Name,PM.ProductId,PM.ProductCode,PM.EProductName, ((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity) as Amount, (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalAmount, case when @SIFromTransType='Sales' then PM.Field4 when @SIFromTransType='Technical' then PM.Field5 else 1 end as Comission_Percentage, case when @SIFromTransType='Sales' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field4 as decimal(18,6)))/100) when @SIFromTransType='Technical' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field5 as decimal(18,6)))/100) else (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *1)/100) end as Comission_Amount ,SH.SalesPerson_Id, (select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo) as AgentId, (select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=((select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo))) as Agent_name, (select distinct Inv_SalesOrderDetail.AgentCommission from Inv_SalesOrderDetail where Inv_SalesOrderDetail.SalesOrderNo=SD.SIFromTransNo and Inv_SalesOrderDetail.Product_Id=sd.Product_Id) as AgentCommission , case when sd.ReturnQty IS null then 'False' when sd.ReturnQty IS not null And SD.ReturnQty >0 then 'True' else 'False' end as Is_Return , Pm.Field5 as TechnicalCommission from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId inner join Set_LocationMaster on Set_LocationMaster.Location_Id=sh.Location_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.SIFromTransType='S' and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType and Inv_SalesCommission_Detail.Voucher_No<>@Trans_Id) order by sh.Invoice_Date end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesInvoiceHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No nvarchar(255), @SIFromTransType nvarchar(100), @SIFromTransNo nvarchar(50), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] ,ReturnNo FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT ROW_NUMBER() OVER(ORDER BY Inv_SalesInvoiceHeader.Trans_Id asc) AS RowNumber, Set_EmployeeMaster.Emp_Name as EmployeeName , Inv_SalesInvoiceHeader.Company_Id, Inv_SalesInvoiceHeader.Brand_Id, Inv_SalesInvoiceHeader.Location_Id, Ems_ContactMaster.Name as CustomerName , Inv_SalesInvoiceHeader.Invoice_No, Inv_SalesInvoiceHeader.Invoice_Date, Inv_SalesInvoiceHeader.Field4, Inv_SalesInvoiceHeader.GrandTotal, (Inv_SalesInvoiceHeader.GrandTotal*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Inv_SalesInvoiceHeader.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalGrandTotal, (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_SalesInvoiceHeader.Location_Id) as LocationCurrency, Inv_SalesInvoiceHeader.Trans_Id, Inv_SalesInvoiceHeader.Post, Inv_SalesInvoiceHeader.Currency_Id, inv_salesinvoiceheader.Supplier_Id as Customer_Id , case when Inv_SalesInvoiceHeader.SIFromTransType='S' then 'By Sales Order' end as Transtype , Inv_SalesInvoiceHeader.ReturnNo , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesInvoiceHeader.CreatedBy)=0 then Inv_SalesInvoiceHeader.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesInvoiceHeader.CreatedBy)) end as InvoiceCreatedBy, case when ((select ParameterValue from Inv_ParameterMaster where Inv_ParameterMaster.Company_Id=@Company_Id and Inv_ParameterMaster.Brand_Id=@Brand_Id and Inv_ParameterMaster.Location_Id=@Location_Id and Inv_ParameterMaster.ParameterName='Is Delivery Voucher allow')='True') And (Inv_SalesInvoiceHeader.SIFromTransType='S') then Cast('True' As Bit) else CAST('False' as Bit) end as IsDeliveryPrint, Inv_SalesInvoiceHeader.Field7, (select top 1 Inv_SalesInvoiceDetail.Post from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) as ReturnPostStatus , (select sum((Inv_SalesInvoiceDetail.UnitPrice-Inv_SalesInvoiceDetail.DiscountV+Inv_SalesInvoiceDetail.TaxV)*Inv_SalesInvoiceDetail.ReturnQty) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id ) as ReturnAmount, Inv_SalesInvoiceHeader.return_Is_Active , (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_salesOrderHeader.SalesOrderNo) FROM Inv_salesOrderHeader where Inv_salesOrderHeader.Trans_id in (select Distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as OrderList , (select Set_Payment_Mode_Master.Field1 from Set_Payment_Mode_Master where Set_Payment_Mode_Master.Pay_Mode_Id=(select top 1 Inv_PaymentTrn.PaymentModeId from Inv_PaymentTrn where Inv_PaymentTrn.TypeTrans='SI' and Inv_PaymentTrn.TransNo=Inv_SalesInvoiceHeader.Trans_Id )) as PaymentType FROM Inv_SalesInvoiceHeader inner join Set_EmployeeMaster on Set_EmployeeMaster.emp_id=Inv_SalesInvoiceHeader.SalesPerson_Id left join Ems_ContactMaster on Ems_ContactMaster.Trans_Id=Inv_SalesInvoiceHeader.Supplier_Id inner join Set_LocationMaster on Inv_SalesInvoiceHeader.Location_Id=Set_LocationMaster.Location_Id Where Inv_SalesInvoiceHeader.Company_Id = @Company_Id and Inv_SalesInvoiceHeader.Brand_Id=@Brand_Id and Inv_SalesInvoiceHeader.Location_Id=@Location_Id and Inv_SalesInvoiceHeader.IsActive='True' order by Inv_SalesInvoiceHeader.Invoice_Date desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno, (select Emp_Name from Set_EmployeeMaster where Emp_Id=Inv_SalesInvoiceHeader.SalesPerson_Id) as EmployeeName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesInvoiceHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesInvoiceHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesInvoiceHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesInvoiceHeader.ModifiedBy) as ModifiedUser, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_salesOrderHeader.SalesOrderNo) FROM Inv_salesOrderHeader where Inv_salesOrderHeader.Trans_id in (select Distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as OrderList FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] , (select Set_Payment_Mode_Master.Field1 from Set_Payment_Mode_Master where Set_Payment_Mode_Master.Pay_Mode_Id=(select top 1 Inv_PaymentTrn.PaymentModeId from Inv_PaymentTrn where Inv_PaymentTrn.TypeTrans='SI' and Inv_PaymentTrn.TransNo= Inv_SalesInvoiceHeader.Trans_Id )) as PaymentType ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno, (select Emp_Name from Set_EmployeeMaster where Emp_Id=Inv_SalesInvoiceHeader.SalesPerson_Id) as EmployeeName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Field2) as ShipCustomerName FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] , returnno, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Invoice_No=@Invoice_No order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SIFromTransType=@SIFromTransType and SIFromTransNo=@SIFromTransNo order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin select SH.Trans_Id,SH.Invoice_No,SH.Invoice_Date,sh.Currency_Id,Sh.Supplier_Id,(select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=sh.Supplier_Id) as Name,PM.ProductId,PM.ProductCode,PM.EProductName, ((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity) as Amount, (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalAmount, case when @SIFromTransType='Sales' then PM.Field4 when @SIFromTransType='Technical' then PM.Field5 else 1 end as Comission_Percentage, case when @SIFromTransType='Sales' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field4 as decimal(18,6)))/100) when @SIFromTransType='Technical' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field5 as decimal(18,6)))/100) else (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *1)/100) end as Comission_Amount ,SH.SalesPerson_Id, (select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo) as AgentId, (select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=((select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo))) as Agent_name, (select distinct Inv_SalesOrderDetail.AgentCommission from Inv_SalesOrderDetail where Inv_SalesOrderDetail.SalesOrderNo=SD.SIFromTransNo and Inv_SalesOrderDetail.Product_Id=sd.Product_Id) as AgentCommission , case when sd.ReturnQty IS null then 'False' when sd.ReturnQty IS not null And SD.ReturnQty >0 then 'True' else 'False' end as Is_Return , Pm.Field5 as TechnicalCommission from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId inner join Set_LocationMaster on Set_LocationMaster.Location_Id=sh.Location_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.SIFromTransType='S' and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType) order by sh.Invoice_Date End ELSE IF (@Optype=9) Begin select distinct SH.Trans_Id,SH.Invoice_No from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType) end else if(@Optype=10) begin select SH.Trans_Id,SH.Invoice_No,SH.Invoice_Date,sh.Currency_Id,Sh.Supplier_Id,(select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=sh.Supplier_Id) as Name,PM.ProductId,PM.ProductCode,PM.EProductName, ((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity) as Amount, (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalAmount, case when @SIFromTransType='Sales' then PM.Field4 when @SIFromTransType='Technical' then PM.Field5 else 1 end as Comission_Percentage, case when @SIFromTransType='Sales' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field4 as decimal(18,6)))/100) when @SIFromTransType='Technical' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field5 as decimal(18,6)))/100) else (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *1)/100) end as Comission_Amount ,SH.SalesPerson_Id, (select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo) as AgentId, (select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=((select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo))) as Agent_name, (select distinct Inv_SalesOrderDetail.AgentCommission from Inv_SalesOrderDetail where Inv_SalesOrderDetail.SalesOrderNo=SD.SIFromTransNo and Inv_SalesOrderDetail.Product_Id=sd.Product_Id) as AgentCommission , case when sd.ReturnQty IS null then 'False' when sd.ReturnQty IS not null And SD.ReturnQty >0 then 'True' else 'False' end as Is_Return , Pm.Field5 as TechnicalCommission from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId inner join Set_LocationMaster on Set_LocationMaster.Location_Id=sh.Location_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.SIFromTransType='S' and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType and Inv_SalesCommission_Detail.Voucher_No<>@Trans_Id) order by sh.Invoice_Date end End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesInvoiceHeader_RowStatus] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesInvoiceHeader set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesInvoiceHeader_RowStatus] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesInvoiceHeader set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesInvoiceDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No int, @Serial_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT Company_Id, Brand_Id, Location_Id, Trans_Id, case when Inv_SalesInvoiceDetail.SIFromTransType='S' then (select Inv_SalesOrderHeader.SalesOrderNo from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=Inv_SalesInvoiceDetail.SIFromTransNo) else '0' end as SalesOrderNo, SIFromTransNo as SoID, Serial_No, Product_Id, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as ProductName, (select Inv_ProductMaster.Description from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as ProductDescription, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_SalesInvoiceDetail.Unit_Id) as Unit_Name, Inv_SalesInvoiceDetail.Unit_Id as UnitId, Inv_SalesInvoiceDetail.Unit_Id, UnitPrice, Inv_SalesInvoiceDetail.Field3 as FreeQty, OrderQty, case when Inv_SalesInvoiceDetail.SIFromTransType='D' and Inv_SalesInvoiceDetail.Field1='True' then Inv_SalesInvoiceDetail.Quantity when Inv_SalesInvoiceDetail.SIFromTransType='D' And Inv_SalesInvoiceDetail.Field1='False' then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')is NULL then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')is not NULL then (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True') end as SoldQty, case when Inv_SalesInvoiceDetail.SIFromTransType='D' then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And(Inv_SalesInvoiceDetail.OrderQty- (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True'))is NULL then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Inv_SalesInvoiceDetail.OrderQty-(Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True'))is not NULL then (Inv_SalesInvoiceDetail.OrderQty-(Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')) end as RemainQty, isnull(ReturnQty,0) as TotalReturnQty , (select Inv_ProductMaster.Field5 from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as TechnicalCommission, Quantity, (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesInvoiceDetail.Product_Id) as SysQty, DiscountP, DiscountV, TaxP, TaxV , ReturnQty ,[Invoice_No] ,[SIFromTransType] ,[SIFromTransNo] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], ((UnitPrice*Quantity)+TaxV-DiscountV) as LineTotal FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Invoice_No=@Invoice_No End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Serial_No=@Serial_No order by Trans_Id desc End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesInvoiceDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No int, @Serial_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT Company_Id, Brand_Id, Location_Id, Trans_Id, case when Inv_SalesInvoiceDetail.SIFromTransType='S' then (select Inv_SalesOrderHeader.SalesOrderNo from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=Inv_SalesInvoiceDetail.SIFromTransNo) else '0' end as SalesOrderNo, SIFromTransNo as SoID, Serial_No, Product_Id, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as ProductName, (select Inv_ProductMaster.Description from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as ProductDescription, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_SalesInvoiceDetail.Unit_Id) as Unit_Name, Inv_SalesInvoiceDetail.Unit_Id as UnitId, Inv_SalesInvoiceDetail.Unit_Id, UnitPrice, Inv_SalesInvoiceDetail.Field3 as FreeQty, OrderQty, case when Inv_SalesInvoiceDetail.SIFromTransType='D' and Inv_SalesInvoiceDetail.Field1='True' then Inv_SalesInvoiceDetail.Quantity when Inv_SalesInvoiceDetail.SIFromTransType='D' And Inv_SalesInvoiceDetail.Field1='False' then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')is NULL then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')is not NULL then (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True') end as SoldQty, case when Inv_SalesInvoiceDetail.SIFromTransType='D' then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And(Inv_SalesInvoiceDetail.OrderQty- (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True'))is NULL then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Inv_SalesInvoiceDetail.OrderQty-(Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True'))is not NULL then (Inv_SalesInvoiceDetail.OrderQty-(Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')) end as RemainQty, isnull(ReturnQty,0) as TotalReturnQty , (select Inv_ProductMaster.Field5 from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as TechnicalCommission, Quantity, (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesInvoiceDetail.Product_Id) as SysQty, DiscountP, DiscountV, TaxP, TaxV , ReturnQty ,[Invoice_No] ,[SIFromTransType] ,[SIFromTransNo] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], ((UnitPrice*Quantity)+TaxV-DiscountV) as LineTotal FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Invoice_No=@Invoice_No End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Serial_No=@Serial_No order by Trans_Id desc End End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesInvoiceDetail_ReturnUpdate] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No int, @Product_Id int, @ReturnQty numeric(18,6), @Post bit, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Update Inv_SalesInvoiceDetail SET [ReturnQty]=@ReturnQty ,Post=@Post ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id]=@Brand_Id and [Location_Id]=@Location_Id and [Invoice_No] = @Invoice_No and [Product_Id]=@Product_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesInvoiceDetail_ReturnUpdate] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No int, @Product_Id int, @ReturnQty numeric(18,6), @Post bit, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Update Inv_SalesInvoiceDetail SET [ReturnQty]=@ReturnQty ,Post=@Post ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id]=@Brand_Id and [Location_Id]=@Location_Id and [Invoice_No] = @Invoice_No and [Product_Id]=@Product_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesDeliveryVoucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @SalesOrder_Id int, @Optype int As Begin if(@Optype=1) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id end else if(@Optype=2) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.IsActive='False' end else if(@Optype=3) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id end else if(@Optype=4) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.Trans_Id=@Trans_Id end else if(@Optype=5) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=@SalesOrder_Id end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesDeliveryVoucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @SalesOrder_Id int, @Optype int As Begin if(@Optype=1) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id end else if(@Optype=2) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.IsActive='False' end else if(@Optype=3) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id end else if(@Optype=4) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.Trans_Id=@Trans_Id end else if(@Optype=5) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=@SalesOrder_Id end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_PurchaseReturnHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PReturn_No nvarchar(255), @Invoice_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id order by TransID desc End ELSE IF (@Optype=2) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo,Inv_PurchaseInvoiceHeader.InvoiceDate,dbo.Inv_PurchaseReturnHeader.Field1,Inv_PurchaseReturnHeader.Field2 as ReturnAmount, Inv_PurchaseReturnHeader.Field3 as CurrencyID , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseInvoiceHeader.SupplierId) as Supplier_Name, Inv_PurchaseInvoiceHeader.SupplierId, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.ModifiedBy) as ModifiedUser FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' order by TransID desc End ELSE IF (@Optype=3) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo ,Inv_PurchaseReturnHeader.Field2 as ReturnAmount,Inv_PurchaseReturnHeader.Field3 as CurrencyID , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.ModifiedBy) as ModifiedUser FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='False' order by TransID desc End ELSE IF (@Optype=4) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo,Inv_PurchaseReturnHeader.Field1 ,Inv_PurchaseReturnHeader.Field2 as ReturnAmount, Inv_PurchaseReturnHeader.Field3 as CurrencyID FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.Trans_Id=@Trans_Id order by TransID desc End ELSE IF (@Optype=5) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.PReturn_No=@PReturn_No order by TransID desc End ELSE IF (@Optype=6) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.Invoice_Id=@Invoice_Id order by TransID desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseReturnHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_PurchaseReturnHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PReturn_No nvarchar(255), @Invoice_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id order by TransID desc End ELSE IF (@Optype=2) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo,Inv_PurchaseInvoiceHeader.InvoiceDate,dbo.Inv_PurchaseReturnHeader.Field1,Inv_PurchaseReturnHeader.Field2 as ReturnAmount, Inv_PurchaseReturnHeader.Field3 as CurrencyID , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseInvoiceHeader.SupplierId) as Supplier_Name, Inv_PurchaseInvoiceHeader.SupplierId, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.ModifiedBy) as ModifiedUser FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' order by TransID desc End ELSE IF (@Optype=3) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo ,Inv_PurchaseReturnHeader.Field2 as ReturnAmount,Inv_PurchaseReturnHeader.Field3 as CurrencyID , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.ModifiedBy) as ModifiedUser FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='False' order by TransID desc End ELSE IF (@Optype=4) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo,Inv_PurchaseReturnHeader.Field1 ,Inv_PurchaseReturnHeader.Field2 as ReturnAmount, Inv_PurchaseReturnHeader.Field3 as CurrencyID FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.Trans_Id=@Trans_Id order by TransID desc End ELSE IF (@Optype=5) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.PReturn_No=@PReturn_No order by TransID desc End ELSE IF (@Optype=6) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.Invoice_Id=@Invoice_Id order by TransID desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseReturnHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_PurchaseRequestHeader_SelectRow] @Company_Id int, @Brand_ID int, @Location_Id int, @Trans_Id int, @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id order by Trans_Id desc end if(@Optype=2) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID order by Trans_Id desc end if(@Optype=3) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id order by Trans_Id desc end if(@Optype=4) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and Trans_Id=@Trans_Id order by Trans_Id desc end if(@Optype=5) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from dbo.Set_DepartmentMaster where Dep_Id=(select Department_Id from dbo.Set_EmployeeMaster where Emp_Code=Inv_PurchaseRequestHeader.CreatedBy)) as Department_Name, (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName , (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc end if(@Optype=6) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from dbo.Set_DepartmentMaster where Dep_Id=(select Department_Id from dbo.Set_EmployeeMaster where Emp_Code=Inv_PurchaseRequestHeader.CreatedBy)) as Department_Name, (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName , (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc end if(@Optype=7) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], Field7, CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and Trans_Id=@Trans_Id and IsActive='True' order by Trans_Id desc end if(@Optype=8) begin Select *, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName from Inv_PurchaseRequestHeader where Inv_PurchaseRequestHeader.Trans_Id not in(select TransNo from Inv_PurchaseInquiryHeader where TransFrom='PR') and Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' and DepartmentApproval='True' and Inv_PurchaseRequestHeader.Field3<>'Reject' order by ModifiedDate desc end if(@Optype=9) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader order by Trans_Id desc end if(@Optype=10) begin Select * , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName from Inv_PurchaseRequestHeader where Inv_PurchaseRequestHeader.Trans_Id not in(select TransNo from Inv_PurchaseInquiryHeader where TransFrom='PR') and Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' and DepartmentApproval='True' and Inv_PurchaseRequestHeader.Field3<>'Reject' order by ModifiedDate desc end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_PurchaseRequestHeader_SelectRow] @Company_Id int, @Brand_ID int, @Location_Id int, @Trans_Id int, @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id order by Trans_Id desc end if(@Optype=2) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID order by Trans_Id desc end if(@Optype=3) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id order by Trans_Id desc end if(@Optype=4) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and Trans_Id=@Trans_Id order by Trans_Id desc end if(@Optype=5) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from dbo.Set_DepartmentMaster where Dep_Id=(select Department_Id from dbo.Set_EmployeeMaster where Emp_Code=Inv_PurchaseRequestHeader.CreatedBy)) as Department_Name, (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName , (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc end if(@Optype=6) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from dbo.Set_DepartmentMaster where Dep_Id=(select Department_Id from dbo.Set_EmployeeMaster where Emp_Code=Inv_PurchaseRequestHeader.CreatedBy)) as Department_Name, (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName , (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc end if(@Optype=7) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], Field7, CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and Trans_Id=@Trans_Id and IsActive='True' order by Trans_Id desc end if(@Optype=8) begin Select *, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName from Inv_PurchaseRequestHeader where Inv_PurchaseRequestHeader.Trans_Id not in(select TransNo from Inv_PurchaseInquiryHeader where TransFrom='PR') and Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' and DepartmentApproval='True' and Inv_PurchaseRequestHeader.Field3<>'Reject' order by ModifiedDate desc end if(@Optype=9) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader order by Trans_Id desc end if(@Optype=10) begin Select * , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName from Inv_PurchaseRequestHeader where Inv_PurchaseRequestHeader.Trans_Id not in(select TransNo from Inv_PurchaseInquiryHeader where TransFrom='PR') and Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' and DepartmentApproval='True' and Inv_PurchaseRequestHeader.Field3<>'Reject' order by ModifiedDate desc end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_PurchaseQuoteHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @RPQ_No nvarchar(255), @PI_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (select PI_No from Inv_PurchaseInquiryHeader where Trans_Id=Inv_PurchaseQuoteHeader.PI_No) as Pinq_No, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Ems_ContactMaster.Name) FROM Ems_ContactMaster where Ems_ContactMaster.Trans_Id in (select distinct(Supplier_Id) from dbo.Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as Supplier_Name , case when (select top 1 Inv_PurchaseOrderHeader.TransID from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.ReferenceVoucherType='PQ' and Inv_PurchaseOrderHeader.ReferenceID=Inv_PurchaseQuoteHeader.Trans_Id) Is null then 'Pending' else 'Created' end as QuotationStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.ModifiedBy) as ModifiedUser FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (select PI_No from Inv_PurchaseInquiryHeader where Trans_Id=Inv_PurchaseQuoteHeader.PI_No) as Pinq_No, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Ems_ContactMaster.Name) FROM Ems_ContactMaster where Ems_ContactMaster.Trans_Id in (select distinct(Supplier_Id) from dbo.Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as Supplier_Name, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.ModifiedBy) as ModifiedUser FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and RPQ_No=@RPQ_No order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_PurchaseQuoteHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @RPQ_No nvarchar(255), @PI_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (select PI_No from Inv_PurchaseInquiryHeader where Trans_Id=Inv_PurchaseQuoteHeader.PI_No) as Pinq_No, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Ems_ContactMaster.Name) FROM Ems_ContactMaster where Ems_ContactMaster.Trans_Id in (select distinct(Supplier_Id) from dbo.Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as Supplier_Name , case when (select top 1 Inv_PurchaseOrderHeader.TransID from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.ReferenceVoucherType='PQ' and Inv_PurchaseOrderHeader.ReferenceID=Inv_PurchaseQuoteHeader.Trans_Id) Is null then 'Pending' else 'Created' end as QuotationStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.ModifiedBy) as ModifiedUser FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (select PI_No from Inv_PurchaseInquiryHeader where Trans_Id=Inv_PurchaseQuoteHeader.PI_No) as Pinq_No, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Ems_ContactMaster.Name) FROM Ems_ContactMaster where Ems_ContactMaster.Trans_Id in (select distinct(Supplier_Id) from dbo.Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as Supplier_Name, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.ModifiedBy) as ModifiedUser FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and RPQ_No=@RPQ_No order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_PurchaseOrderHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @Optype int As if(@Optype=1) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id order by TransID desc End if(@Optype=2) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id order by TransID desc End if(@Optype=3) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID order by TransID desc End if(@Optype=4) Begin Select PO.[Company_Id], PO.[Brand_Id], PO.[Location_ID], PO.[TransID], PO.[PoNO], PO.[PaymentModeID], replace(convert(NVARCHAR,PO.PODate, 106), ' ', '-') AS PODate, PO.[ReferenceVoucherType], PO.[ReferenceID], PO.[SalesOrderID], replace(convert(NVARCHAR,PO.DeliveryDate, 106), ' ', '-') AS DeliveryDate, PO.[OrderType], PO.[SupplierId], PO.[CurrencyID], PO.[CurrencyRate], PO.[Remark], PO.[ShippingLine], PO.[ShipBy], PO.[ShipmentType], PO.[Freight_Status], PO.[ShipUnit], PO.[TotalWeight], PO.[UnitRate], replace(convert(NVARCHAR,PO.DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,PO.DateReceiving, 106), ' ', '-') AS DateReceiving, PO.[PartialShipment], PO.[Condition_1], PO.[Condition_2], PO.[Condition_3], PO.[Condition_4], PO.[Condition_5], Airway_Bill_No, Volumetric_weight, PO.[Field1], PO.[Field2], PO.[Field3], PO.[Field4], PO.[Field5], PO.[Field6], case when PO.[Field6]=0 then 'Pending' when PO.[Field6]=1 then 'Approved' end as ApprovalStatus, PO.[Field7], PO.[IsActive], PO.[CreatedBy], PO.[CreatedDate], PO.[ModifiedBy], PO.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.TransID=PO.TransID) )as Supplier_Name, case when PO.OrderType = 'D' then 'Direct' when po.OrderType='R' And po.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type, ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=PO.TransID)+CAST(PO.Field3 as numeric(18,6))) as PoAmount, case when (select distinct Inv_PurchaseInvoiceDetail.POId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.POId=PO.TransID) Is null then 'Pending' else 'Created' end as InvoiceStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader as PO where PO.Company_Id=@Company_Id and PO.Brand_Id=@Brand_Id and PO.Location_ID=@Location_ID and PO.IsActive='True' order by PO.TransID desc End if(@Optype=5) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=Inv_PurchaseOrderHeader.TransID)+CAST(Inv_PurchaseOrderHeader.Field3 as numeric(18,6))) as PoAmount , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseOrderHeader.Condition_2) as ShipToName, (select Set_AddressMaster.Address_Name from Set_AddressMaster where Set_AddressMaster.Trans_Id=Inv_PurchaseOrderHeader.Condition_3) as ShipToAddressName From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='True' and TransID=@TransID order by TransID desc End if(@Optype=6) Begin Select PO.[Company_Id], PO.[Brand_Id], PO.[Location_ID], PO.[TransID], PO.[PoNO], PO.[PaymentModeID], replace(convert(NVARCHAR,PO.PODate, 106), ' ', '-') AS PODate, PO.[ReferenceVoucherType], PO.[ReferenceID], PO.[SalesOrderID], replace(convert(NVARCHAR,PO.DeliveryDate, 106), ' ', '-') AS DeliveryDate, PO.[OrderType], PO.[SupplierId], PO.[CurrencyID], PO.[CurrencyRate], PO.[Remark], PO.[ShippingLine], PO.[ShipBy], PO.[ShipmentType], PO.[Freight_Status], PO.[ShipUnit], PO.[TotalWeight], PO.[UnitRate], replace(convert(NVARCHAR,PO.DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,PO.DateReceiving, 106), ' ', '-') AS DateReceiving, PO.[PartialShipment], PO.[Condition_1], PO.[Condition_2], PO.[Condition_3], PO.[Condition_4], PO.[Condition_5], Airway_Bill_No, Volumetric_weight, PO.[Field1], PO.[Field2], PO.[Field3], PO.[Field4], PO.[Field5], PO.[Field6], case when PO.[Field6]=0 then 'Pending' when PO.[Field6]=1 then 'Approved' end as ApprovalStatus, PO.[Field7], PO.[IsActive], PO.[CreatedBy], PO.[CreatedDate], PO.[ModifiedBy], PO.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.TransID=PO.TransID) )as Supplier_Name, case when PO.OrderType = 'D' then 'Direct' when po.OrderType='R' And po.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader as PO where PO.Company_Id=@Company_Id and PO.Brand_Id=@Brand_Id and PO.Location_ID=@Location_ID and PO.IsActive='False' order by PO.TransID desc End if(@Optype=7) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader order by TransID desc End if(@Optype=8) begin Select Inv_PurchaseOrderHeader.TransID, Inv_PurchaseOrderHeader.PoNO,Inv_PurchaseOrderHeader.PODate,Inv_PurchaseOrderHeader.DeliveryDate, (Select name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseOrderHeader.SupplierId) as Supplier_Name, case when Inv_PurchaseOrderHeader.OrderType = 'D' then 'Direct' when Inv_PurchaseOrderHeader.OrderType='R' And Inv_PurchaseOrderHeader.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type, Inv_PurchaseOrderHeader.Field4, ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=Inv_PurchaseOrderHeader.TransID)+CAST(Inv_PurchaseOrderHeader.Field3 as numeric(18,6))) as PoAmount, Inv_PurchaseOrderHeader.CurrencyID, Inv_productMaster.EProductName as ProductName,Inv_productMaster.ProductCode, Inv_PurchaseOrderDetail.OrderQty, case when (Inv_PurchaseOrderDetail.OrderQty-(Select sUM(RecQty) from Inv_PurchaseInvoiceDetail where POId =Inv_PurchaseOrderDetail.PoNO and ProductId=Inv_PurchaseOrderDetail.Product_ID))is NULL then Inv_PurchaseOrderDetail.OrderQty else (Inv_PurchaseOrderDetail.OrderQty-(Select sUM(RecQty) from Inv_PurchaseInvoiceDetail where POId =Inv_PurchaseOrderDetail.PoNO and ProductId=Inv_PurchaseOrderDetail.Product_ID)) end as RemainQty, Inv_PurchaseOrderDetail.UnitID , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseOrderHeader.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader inner join Inv_PurchaseOrderDetail on Inv_PurchaseOrderHeader.TransID=Inv_PurchaseOrderDetail.PoNO inner join Inv_productMaster on Inv_PurchaseOrderDetail.Product_ID=Inv_productMaster.ProductId where Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='False') and POId =Inv_PurchaseOrderDetail.PoNO) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='True') and (Inv_PurchaseInvoiceDetail.OrderQty-Inv_PurchaseInvoiceDetail.InvoiceQty)<=0 and POId =Inv_PurchaseOrderDetail.PoNO ) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='False') and (Inv_PurchaseInvoiceDetail.InvoiceQty)>0 and Inv_PurchaseOrderHeader.PartialShipment<>'Y' and POId =Inv_PurchaseOrderDetail.PoNO) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='True') and (Inv_PurchaseInvoiceDetail.InvoiceQty)>0 and Inv_PurchaseOrderHeader.PartialShipment<>'Y' and POId =Inv_PurchaseOrderDetail.PoNO ) and Inv_PurchaseOrderHeader.Company_Id=@Company_Id and Inv_PurchaseOrderHeader.Brand_Id=@Brand_Id and Inv_PurchaseOrderHeader.Location_ID=@Location_ID and Inv_PurchaseOrderHeader.IsActive='True' end";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_PurchaseOrderHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @Optype int As if(@Optype=1) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id order by TransID desc End if(@Optype=2) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id order by TransID desc End if(@Optype=3) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID order by TransID desc End if(@Optype=4) Begin Select PO.[Company_Id], PO.[Brand_Id], PO.[Location_ID], PO.[TransID], PO.[PoNO], PO.[PaymentModeID], replace(convert(NVARCHAR,PO.PODate, 106), ' ', '-') AS PODate, PO.[ReferenceVoucherType], PO.[ReferenceID], PO.[SalesOrderID], replace(convert(NVARCHAR,PO.DeliveryDate, 106), ' ', '-') AS DeliveryDate, PO.[OrderType], PO.[SupplierId], PO.[CurrencyID], PO.[CurrencyRate], PO.[Remark], PO.[ShippingLine], PO.[ShipBy], PO.[ShipmentType], PO.[Freight_Status], PO.[ShipUnit], PO.[TotalWeight], PO.[UnitRate], replace(convert(NVARCHAR,PO.DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,PO.DateReceiving, 106), ' ', '-') AS DateReceiving, PO.[PartialShipment], PO.[Condition_1], PO.[Condition_2], PO.[Condition_3], PO.[Condition_4], PO.[Condition_5], Airway_Bill_No, Volumetric_weight, PO.[Field1], PO.[Field2], PO.[Field3], PO.[Field4], PO.[Field5], PO.[Field6], case when PO.[Field6]=0 then 'Pending' when PO.[Field6]=1 then 'Approved' end as ApprovalStatus, PO.[Field7], PO.[IsActive], PO.[CreatedBy], PO.[CreatedDate], PO.[ModifiedBy], PO.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.TransID=PO.TransID) )as Supplier_Name, case when PO.OrderType = 'D' then 'Direct' when po.OrderType='R' And po.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type, ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=PO.TransID)+CAST(PO.Field3 as numeric(18,6))) as PoAmount, case when (select distinct Inv_PurchaseInvoiceDetail.POId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.POId=PO.TransID) Is null then 'Pending' else 'Created' end as InvoiceStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader as PO where PO.Company_Id=@Company_Id and PO.Brand_Id=@Brand_Id and PO.Location_ID=@Location_ID and PO.IsActive='True' order by PO.TransID desc End if(@Optype=5) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=Inv_PurchaseOrderHeader.TransID)+CAST(Inv_PurchaseOrderHeader.Field3 as numeric(18,6))) as PoAmount , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseOrderHeader.Condition_2) as ShipToName, (select Set_AddressMaster.Address_Name from Set_AddressMaster where Set_AddressMaster.Trans_Id=Inv_PurchaseOrderHeader.Condition_3) as ShipToAddressName From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='True' and TransID=@TransID order by TransID desc End if(@Optype=6) Begin Select PO.[Company_Id], PO.[Brand_Id], PO.[Location_ID], PO.[TransID], PO.[PoNO], PO.[PaymentModeID], replace(convert(NVARCHAR,PO.PODate, 106), ' ', '-') AS PODate, PO.[ReferenceVoucherType], PO.[ReferenceID], PO.[SalesOrderID], replace(convert(NVARCHAR,PO.DeliveryDate, 106), ' ', '-') AS DeliveryDate, PO.[OrderType], PO.[SupplierId], PO.[CurrencyID], PO.[CurrencyRate], PO.[Remark], PO.[ShippingLine], PO.[ShipBy], PO.[ShipmentType], PO.[Freight_Status], PO.[ShipUnit], PO.[TotalWeight], PO.[UnitRate], replace(convert(NVARCHAR,PO.DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,PO.DateReceiving, 106), ' ', '-') AS DateReceiving, PO.[PartialShipment], PO.[Condition_1], PO.[Condition_2], PO.[Condition_3], PO.[Condition_4], PO.[Condition_5], Airway_Bill_No, Volumetric_weight, PO.[Field1], PO.[Field2], PO.[Field3], PO.[Field4], PO.[Field5], PO.[Field6], case when PO.[Field6]=0 then 'Pending' when PO.[Field6]=1 then 'Approved' end as ApprovalStatus, PO.[Field7], PO.[IsActive], PO.[CreatedBy], PO.[CreatedDate], PO.[ModifiedBy], PO.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.TransID=PO.TransID) )as Supplier_Name, case when PO.OrderType = 'D' then 'Direct' when po.OrderType='R' And po.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader as PO where PO.Company_Id=@Company_Id and PO.Brand_Id=@Brand_Id and PO.Location_ID=@Location_ID and PO.IsActive='False' order by PO.TransID desc End if(@Optype=7) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader order by TransID desc End if(@Optype=8) begin Select Inv_PurchaseOrderHeader.TransID, Inv_PurchaseOrderHeader.PoNO,Inv_PurchaseOrderHeader.PODate,Inv_PurchaseOrderHeader.DeliveryDate, (Select name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseOrderHeader.SupplierId) as Supplier_Name, case when Inv_PurchaseOrderHeader.OrderType = 'D' then 'Direct' when Inv_PurchaseOrderHeader.OrderType='R' And Inv_PurchaseOrderHeader.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type, Inv_PurchaseOrderHeader.Field4, ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=Inv_PurchaseOrderHeader.TransID)+CAST(Inv_PurchaseOrderHeader.Field3 as numeric(18,6))) as PoAmount, Inv_PurchaseOrderHeader.CurrencyID, Inv_productMaster.EProductName as ProductName,Inv_productMaster.ProductCode, Inv_PurchaseOrderDetail.OrderQty, case when (Inv_PurchaseOrderDetail.OrderQty-(Select sUM(RecQty) from Inv_PurchaseInvoiceDetail where POId =Inv_PurchaseOrderDetail.PoNO and ProductId=Inv_PurchaseOrderDetail.Product_ID))is NULL then Inv_PurchaseOrderDetail.OrderQty else (Inv_PurchaseOrderDetail.OrderQty-(Select sUM(RecQty) from Inv_PurchaseInvoiceDetail where POId =Inv_PurchaseOrderDetail.PoNO and ProductId=Inv_PurchaseOrderDetail.Product_ID)) end as RemainQty, Inv_PurchaseOrderDetail.UnitID , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseOrderHeader.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader inner join Inv_PurchaseOrderDetail on Inv_PurchaseOrderHeader.TransID=Inv_PurchaseOrderDetail.PoNO inner join Inv_productMaster on Inv_PurchaseOrderDetail.Product_ID=Inv_productMaster.ProductId where Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='False') and POId =Inv_PurchaseOrderDetail.PoNO) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='True') and (Inv_PurchaseInvoiceDetail.OrderQty-Inv_PurchaseInvoiceDetail.InvoiceQty)<=0 and POId =Inv_PurchaseOrderDetail.PoNO ) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='False') and (Inv_PurchaseInvoiceDetail.InvoiceQty)>0 and Inv_PurchaseOrderHeader.PartialShipment<>'Y' and POId =Inv_PurchaseOrderDetail.PoNO) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='True') and (Inv_PurchaseInvoiceDetail.InvoiceQty)>0 and Inv_PurchaseOrderHeader.PartialShipment<>'Y' and POId =Inv_PurchaseOrderDetail.PoNO ) and Inv_PurchaseOrderHeader.Company_Id=@Company_Id and Inv_PurchaseOrderHeader.Brand_Id=@Brand_Id and Inv_PurchaseOrderHeader.Location_ID=@Location_ID and Inv_PurchaseOrderHeader.IsActive='True' end";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader order by TransID desc end if(@Optype=2) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id order by TransID desc end if(@Optype=3) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id order by TransID desc end if(@Optype=4) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID order by TransID desc end if(@Optype=5) begin Select PIN.[Company_Id], PIN.[Brand_Id], PIN.[Location_ID], PIN.[TransID], PIN.[InvoiceNo], PIN.[InvoiceDate], PIN.[InvoiceType], PIN.[SupInvoiceNo], PIN.[SupInvoiceDate], PIN.[PaymentModeID], PIN.[SupplierId], PIN.[CurrencyID], PIN.[ExchangeRate], PIN.[CostingRate], PIN.[Remark], PIN.[OtherCharges], PIN.[TotalQuantity], PIN.[TotalAmount], PIN.[NetTax], PIN.[NetTaxValue], PIN.[NetAmount], PIN.[NetDiscount], PIN.[NetDiscountValue], PIN.[GrandTotal], PIN.[Post], PIN.[Field1], PIN.[Field2], PIN.[Field3], PIN.[Field4], PIN.[Field5], PIN.[Field6], PIN.[Field7], PIN.[IsActive], PIN.[CreatedBy], PIN.[CreatedDate], PIN.[ModifiedBy], PIN.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransID=PIN.TransID) )as Supplier_Name , (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_PurchaseOrderHeader.PoNO) FROM Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.Transid in (select Distinct Inv_PurchaseInvoiceDetail.POId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo=PIN.TransID) FOR XML PATH('')),1,1,'') ) as OrderList, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.ModifiedBy) as ModifiedUser From Inv_PurchaseInvoiceHeader as PIN where PIN.Company_Id=@Company_Id and PIN.Brand_Id=@Brand_Id and PIN.Location_ID=@Location_ID and PIN.IsActive='True' order by PIN.TransID desc end if(@Optype=6) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='False' order by TransID desc end if(@Optype=7) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='True' and TransID=@TransID order by TransID desc end if(@Optype=8) begin Select PIN.[Company_Id], PIN.[Brand_Id], PIN.[Location_ID], PIN.[TransID], PIN.[InvoiceNo], PIN.[InvoiceDate], PIN.[InvoiceType], PIN.[SupInvoiceNo], PIN.[SupInvoiceDate], PIN.[PaymentModeID], PIN.[SupplierId], PIN.[CurrencyID], PIN.[ExchangeRate], PIN.[CostingRate], PIN.[Remark], PIN.[OtherCharges], PIN.[TotalQuantity], PIN.[TotalAmount], PIN.[NetTax], PIN.[NetTaxValue], PIN.[NetAmount], PIN.[NetDiscount], PIN.[NetDiscountValue], PIN.[GrandTotal], PIN.[Post], PIN.[Field1], PIN.[Field2], PIN.[Field3], PIN.[Field4], PIN.[Field5], PIN.[Field6], PIN.[Field7], PIN.[IsActive], PIN.[CreatedBy], PIN.[CreatedDate], PIN.[ModifiedBy], PIN.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransID=PIN.TransID) )as Supplier_Name , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.ModifiedBy) as ModifiedUser From Inv_PurchaseInvoiceHeader as PIN where PIN.Company_Id=@Company_Id and PIN.Brand_Id=@Brand_Id and PIN.Location_ID=@Location_ID and PIN.IsActive='True' and PIN.Post='True' and PIN.TransID not in (select Inv_PurchaseReturnHeader.Invoice_Id from Inv_PurchaseReturnHeader) order by PIN.TransID desc end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader order by TransID desc end if(@Optype=2) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id order by TransID desc end if(@Optype=3) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id order by TransID desc end if(@Optype=4) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID order by TransID desc end if(@Optype=5) begin Select PIN.[Company_Id], PIN.[Brand_Id], PIN.[Location_ID], PIN.[TransID], PIN.[InvoiceNo], PIN.[InvoiceDate], PIN.[InvoiceType], PIN.[SupInvoiceNo], PIN.[SupInvoiceDate], PIN.[PaymentModeID], PIN.[SupplierId], PIN.[CurrencyID], PIN.[ExchangeRate], PIN.[CostingRate], PIN.[Remark], PIN.[OtherCharges], PIN.[TotalQuantity], PIN.[TotalAmount], PIN.[NetTax], PIN.[NetTaxValue], PIN.[NetAmount], PIN.[NetDiscount], PIN.[NetDiscountValue], PIN.[GrandTotal], PIN.[Post], PIN.[Field1], PIN.[Field2], PIN.[Field3], PIN.[Field4], PIN.[Field5], PIN.[Field6], PIN.[Field7], PIN.[IsActive], PIN.[CreatedBy], PIN.[CreatedDate], PIN.[ModifiedBy], PIN.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransID=PIN.TransID) )as Supplier_Name , (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_PurchaseOrderHeader.PoNO) FROM Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.Transid in (select Distinct Inv_PurchaseInvoiceDetail.POId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo=PIN.TransID) FOR XML PATH('')),1,1,'') ) as OrderList, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.ModifiedBy) as ModifiedUser From Inv_PurchaseInvoiceHeader as PIN where PIN.Company_Id=@Company_Id and PIN.Brand_Id=@Brand_Id and PIN.Location_ID=@Location_ID and PIN.IsActive='True' order by PIN.TransID desc end if(@Optype=6) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='False' order by TransID desc end if(@Optype=7) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='True' and TransID=@TransID order by TransID desc end if(@Optype=8) begin Select PIN.[Company_Id], PIN.[Brand_Id], PIN.[Location_ID], PIN.[TransID], PIN.[InvoiceNo], PIN.[InvoiceDate], PIN.[InvoiceType], PIN.[SupInvoiceNo], PIN.[SupInvoiceDate], PIN.[PaymentModeID], PIN.[SupplierId], PIN.[CurrencyID], PIN.[ExchangeRate], PIN.[CostingRate], PIN.[Remark], PIN.[OtherCharges], PIN.[TotalQuantity], PIN.[TotalAmount], PIN.[NetTax], PIN.[NetTaxValue], PIN.[NetAmount], PIN.[NetDiscount], PIN.[NetDiscountValue], PIN.[GrandTotal], PIN.[Post], PIN.[Field1], PIN.[Field2], PIN.[Field3], PIN.[Field4], PIN.[Field5], PIN.[Field6], PIN.[Field7], PIN.[IsActive], PIN.[CreatedBy], PIN.[CreatedDate], PIN.[ModifiedBy], PIN.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransID=PIN.TransID) )as Supplier_Name , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.ModifiedBy) as ModifiedUser From Inv_PurchaseInvoiceHeader as PIN where PIN.Company_Id=@Company_Id and PIN.Brand_Id=@Brand_Id and PIN.Location_ID=@Location_ID and PIN.IsActive='True' and PIN.Post='True' and PIN.TransID not in (select Inv_PurchaseReturnHeader.Invoice_Id from Inv_PurchaseReturnHeader) order by PIN.TransID desc end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_PurchaseInquiryHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PI_No nvarchar(255), @TransFrom nvarchar(50), @TransNo nvarchar(50), @Optype int As Begin if(@Optype=1) Begin SELECT PIQ.[Company_Id] ,PIQ.[Brand_Id] ,PIQ.[Location_Id] ,PIQ.[Trans_Id] ,PIQ.[PI_No] ,PIQ.[PIDate] ,PIQ.[TransFrom] ,case when PIQ.[TransFrom]='SI' then 'Sales Inquiry' when PIQ.[TransFrom]='PR' then 'Purchase Request' when PIQ.[TransFrom]='' then 'Direct' end as RefType ,PIQ.[Description] ,PIQ.[Status] ,PIQ.[Field1] ,PIQ.[Field2] ,PIQ.[Field3] ,PIQ.[Field4] ,PIQ.[Field5] ,PIQ.[Field6] ,PIQ.[Field7] ,PIQ.[CreatedBy] ,PIQ.[CreatedDate] ,PIQ.[ModifiedBy] ,PIQ.[ModifiedDate] ,PIQ.[IsActive], (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.CreatedBy) as UserName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.ModifiedBy) as ModifiedUserName, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=PIQ.CreatedBy)) as DepartmentName , case when PIQ.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=PIQ.TransNo) when PIQ.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=PIQ.TransNo) else '0' end as TransNo , case when PIQ.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= PIQ.TransNo)) end as Customer_Name , case when PIQ.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as OrderCompletionDate , case when PIQ.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as TenderNo FROM Inv_PurchaseInquiryHeader as PIQ Where PIQ.Company_Id = @Company_Id and PIQ.Brand_Id=@Brand_Id and PIQ.Location_Id=@Location_Id and PIQ.IsActive='True' order by PIQ.Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT PIQ.[Company_Id] ,PIQ.[Brand_Id] ,PIQ.[Location_Id] ,PIQ.[Trans_Id] ,PIQ.[PI_No] ,PIQ.[PIDate] ,PIQ.[TransFrom] ,case when PIQ.[TransFrom]='SI' then 'Sales Inquiry' when PIQ.[TransFrom]='PR' then 'Purchase Request' when PIQ.[TransFrom]='' then 'Direct' end as RefType ,PIQ.[Description] ,PIQ.[Status] ,PIQ.[Field1] ,PIQ.[Field2] ,PIQ.[Field3] ,PIQ.[Field4] ,PIQ.[Field5] ,PIQ.[Field6] ,PIQ.[Field7] ,PIQ.[CreatedBy] ,PIQ.[CreatedDate] ,PIQ.[ModifiedBy] ,PIQ.[ModifiedDate] ,PIQ.[IsActive], (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.CreatedBy) as UserName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.ModifiedBy) as ModifiedUserName, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=PIQ.CreatedBy)) as DepartmentName , case when PIQ.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=PIQ.TransNo) when PIQ.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=PIQ.TransNo) else '0' end as TransNo , case when PIQ.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= PIQ.TransNo)) end as Customer_Name , case when PIQ.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as OrderCompletionDate , case when PIQ.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as TenderNo FROM Inv_PurchaseInquiryHeader as PIQ Where PIQ .Company_Id = @Company_Id and PIQ.Brand_Id=@Brand_Id and PIQ.Location_Id=@Location_Id and PIQ .IsActive='False' order by PIQ.Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST([Row_Lock_Id] as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and TransFrom=@TransFrom and TransNo=@TransNo order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin Select Inv_PurchaseInquiryHeader.*, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseInquiryHeader.CreatedBy) as UserName, case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then 'Sales Inquiry' when Inv_PurchaseInquiryHeader.[TransFrom]='PR' then 'Purchase Request' when Inv_PurchaseInquiryHeader.[TransFrom]='' then 'Direct' end as RefType, case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=Inv_PurchaseInquiryHeader.TransNo) when Inv_PurchaseInquiryHeader.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=Inv_PurchaseInquiryHeader.TransNo) else '0' end as RefNo , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= Inv_PurchaseInquiryHeader.TransNo)) end as Customer_Name , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = Inv_PurchaseInquiryHeader.TransNo) end as OrderCompletionDate , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = Inv_PurchaseInquiryHeader.TransNo) end as TenderNo, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseInquiryHeader.CreatedBy)) as DepartmentName from Inv_PurchaseInquiryHeader where Inv_PurchaseInquiryHeader.Trans_Id not in(select PI_No from Inv_PurchaseQuoteHeader) and IsActive='True' and Company_Id=@Company_Id and Brand_ID=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_PurchaseInquiryHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PI_No nvarchar(255), @TransFrom nvarchar(50), @TransNo nvarchar(50), @Optype int As Begin if(@Optype=1) Begin SELECT PIQ.[Company_Id] ,PIQ.[Brand_Id] ,PIQ.[Location_Id] ,PIQ.[Trans_Id] ,PIQ.[PI_No] ,PIQ.[PIDate] ,PIQ.[TransFrom] ,case when PIQ.[TransFrom]='SI' then 'Sales Inquiry' when PIQ.[TransFrom]='PR' then 'Purchase Request' when PIQ.[TransFrom]='' then 'Direct' end as RefType ,PIQ.[Description] ,PIQ.[Status] ,PIQ.[Field1] ,PIQ.[Field2] ,PIQ.[Field3] ,PIQ.[Field4] ,PIQ.[Field5] ,PIQ.[Field6] ,PIQ.[Field7] ,PIQ.[CreatedBy] ,PIQ.[CreatedDate] ,PIQ.[ModifiedBy] ,PIQ.[ModifiedDate] ,PIQ.[IsActive], (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.CreatedBy) as UserName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.ModifiedBy) as ModifiedUserName, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=PIQ.CreatedBy)) as DepartmentName , case when PIQ.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=PIQ.TransNo) when PIQ.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=PIQ.TransNo) else '0' end as TransNo , case when PIQ.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= PIQ.TransNo)) end as Customer_Name , case when PIQ.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as OrderCompletionDate , case when PIQ.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as TenderNo FROM Inv_PurchaseInquiryHeader as PIQ Where PIQ.Company_Id = @Company_Id and PIQ.Brand_Id=@Brand_Id and PIQ.Location_Id=@Location_Id and PIQ.IsActive='True' order by PIQ.Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT PIQ.[Company_Id] ,PIQ.[Brand_Id] ,PIQ.[Location_Id] ,PIQ.[Trans_Id] ,PIQ.[PI_No] ,PIQ.[PIDate] ,PIQ.[TransFrom] ,case when PIQ.[TransFrom]='SI' then 'Sales Inquiry' when PIQ.[TransFrom]='PR' then 'Purchase Request' when PIQ.[TransFrom]='' then 'Direct' end as RefType ,PIQ.[Description] ,PIQ.[Status] ,PIQ.[Field1] ,PIQ.[Field2] ,PIQ.[Field3] ,PIQ.[Field4] ,PIQ.[Field5] ,PIQ.[Field6] ,PIQ.[Field7] ,PIQ.[CreatedBy] ,PIQ.[CreatedDate] ,PIQ.[ModifiedBy] ,PIQ.[ModifiedDate] ,PIQ.[IsActive], (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.CreatedBy) as UserName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.ModifiedBy) as ModifiedUserName, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=PIQ.CreatedBy)) as DepartmentName , case when PIQ.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=PIQ.TransNo) when PIQ.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=PIQ.TransNo) else '0' end as TransNo , case when PIQ.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= PIQ.TransNo)) end as Customer_Name , case when PIQ.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as OrderCompletionDate , case when PIQ.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as TenderNo FROM Inv_PurchaseInquiryHeader as PIQ Where PIQ .Company_Id = @Company_Id and PIQ.Brand_Id=@Brand_Id and PIQ.Location_Id=@Location_Id and PIQ .IsActive='False' order by PIQ.Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST([Row_Lock_Id] as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and TransFrom=@TransFrom and TransNo=@TransNo order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin Select Inv_PurchaseInquiryHeader.*, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseInquiryHeader.CreatedBy) as UserName, case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then 'Sales Inquiry' when Inv_PurchaseInquiryHeader.[TransFrom]='PR' then 'Purchase Request' when Inv_PurchaseInquiryHeader.[TransFrom]='' then 'Direct' end as RefType, case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=Inv_PurchaseInquiryHeader.TransNo) when Inv_PurchaseInquiryHeader.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=Inv_PurchaseInquiryHeader.TransNo) else '0' end as RefNo , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= Inv_PurchaseInquiryHeader.TransNo)) end as Customer_Name , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = Inv_PurchaseInquiryHeader.TransNo) end as OrderCompletionDate , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = Inv_PurchaseInquiryHeader.TransNo) end as TenderNo, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseInquiryHeader.CreatedBy)) as DepartmentName from Inv_PurchaseInquiryHeader where Inv_PurchaseInquiryHeader.Trans_Id not in(select PI_No from Inv_PurchaseQuoteHeader) and IsActive='True' and Company_Id=@Company_Id and Brand_ID=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_ProductMaster_Update] @Company_Id int, @Brand_Id int, @ProductId int, @ProductCode nvarchar(250), @PartNo nvarchar(50), @ModelNo nvarchar(80), @ModelName nvarchar(MAX), @EProductName nvarchar(MAX), @LProductName nvarchar(MAX), @CountryID int, @UnitId int, @ItemType nvarchar(2), @HScode nvarchar(50), @HasBatchNo bit, @TypeOfBatchNo nvarchar(MAX), @HasSerialNo bit, @ReorderQty nvarchar(50), @CostPrice nvarchar(50), @Description text, @SalesPrice1 nvarchar(MAX), @SalesPrice2 nvarchar(MAX), @SalesPrice3 nvarchar(MAX), @ProductColor nvarchar(50), @WSalePrice nvarchar(MAX), @ReservedQty nvarchar(50), @DamageQty nvarchar(50), @ExpiredQty nvarchar(50), @MaximumQty nvarchar(50), @MinimumQty nvarchar(50), @Profit numeric(18,3), @Discount nvarchar(50), @MaintainStock nvarchar(MAX), @URL nvarchar(MAX), @VMWeight nvarchar(11), @WeighUnitID nvarchar(3), @DimLenth numeric(18,3), @DimHieght numeric(18,3), @DimDepth numeric(18,3), @AlternateId1 nvarchar(25), @AlternateId2 nvarchar(25), @AlternateId3 nvarchar(25), @Field1 nvarchar(MAX), @Field2 nvarchar(MAX), @Field3 nvarchar(MAX), @Field4 nvarchar(MAX), @Field5 nvarchar(MAX), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(11), @ModfiedDate datetime, @ReferenceID int output As Begin Update Inv_ProductMaster Set [ProductCode] = @ProductCode, [PartNo] = @PartNo, [ModelNo] = @ModelNo, [ModelName] =@ModelName, [EProductName] = @EProductName, [LProductName] = @LProductName, [CountryID] = @CountryID, [UnitId] = @UnitId, [ItemType] = @ItemType, [HScode] = @HScode, [HasBatchNo] = @HasBatchNo, [TypeOfBatchNo] = @TypeOfBatchNo, [HasSerialNo] = @HasSerialNo, [ReorderQty] = @ReorderQty, [CostPrice] = @CostPrice, [Description] = @Description, [SalesPrice1] = @SalesPrice1, [SalesPrice2] = @SalesPrice2, [SalesPrice3] = @SalesPrice3, [ProductColor] = @ProductColor, [WSalePrice] = @WSalePrice, [ReservedQty] = @ReservedQty, [DamageQty] = @DamageQty, [ExpiredQty] = @ExpiredQty, [MaximumQty] = @MaximumQty, [MinimumQty] = @MinimumQty, [Profit] = @Profit, [Discount] = @Discount, [MaintainStock] = @MaintainStock, [URL] = @URL, [ActualWeight] = @VMWeight, [WeighUnitID] = @WeighUnitID, [DimLenth] = @DimLenth, [DimHieght] = @DimHieght, [DimDepth] = @DimDepth, AlternateId1=@AlternateId1, AlternateId2=@AlternateId2, AlternateId3=@AlternateId3, [Field1] = @Field1, [Field2] = @Field2, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModfiedDate] = @ModfiedDate Where [Company_Id] = @Company_Id and [ProductId] = @ProductId select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_ProductMaster_Update] @Company_Id int, @Brand_Id int, @ProductId int, @ProductCode nvarchar(250), @PartNo nvarchar(50), @ModelNo nvarchar(80), @ModelName nvarchar(MAX), @EProductName nvarchar(MAX), @LProductName nvarchar(MAX), @CountryID int, @UnitId int, @ItemType nvarchar(2), @HScode nvarchar(50), @HasBatchNo bit, @TypeOfBatchNo nvarchar(MAX), @HasSerialNo bit, @ReorderQty nvarchar(50), @CostPrice nvarchar(50), @Description text, @SalesPrice1 nvarchar(MAX), @SalesPrice2 nvarchar(MAX), @SalesPrice3 nvarchar(MAX), @ProductColor nvarchar(50), @WSalePrice nvarchar(MAX), @ReservedQty nvarchar(50), @DamageQty nvarchar(50), @ExpiredQty nvarchar(50), @MaximumQty nvarchar(50), @MinimumQty nvarchar(50), @Profit numeric(18,3), @Discount nvarchar(50), @MaintainStock nvarchar(MAX), @URL nvarchar(MAX), @VMWeight nvarchar(11), @WeighUnitID nvarchar(3), @DimLenth numeric(18,3), @DimHieght numeric(18,3), @DimDepth numeric(18,3), @AlternateId1 nvarchar(25), @AlternateId2 nvarchar(25), @AlternateId3 nvarchar(25), @Field1 nvarchar(MAX), @Field2 nvarchar(MAX), @Field3 nvarchar(MAX), @Field4 nvarchar(MAX), @Field5 nvarchar(MAX), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(11), @ModfiedDate datetime, @ReferenceID int output As Begin Update Inv_ProductMaster Set [ProductCode] = @ProductCode, [PartNo] = @PartNo, [ModelNo] = @ModelNo, [ModelName] =@ModelName, [EProductName] = @EProductName, [LProductName] = @LProductName, [CountryID] = @CountryID, [UnitId] = @UnitId, [ItemType] = @ItemType, [HScode] = @HScode, [HasBatchNo] = @HasBatchNo, [TypeOfBatchNo] = @TypeOfBatchNo, [HasSerialNo] = @HasSerialNo, [ReorderQty] = @ReorderQty, [CostPrice] = @CostPrice, [Description] = @Description, [SalesPrice1] = @SalesPrice1, [SalesPrice2] = @SalesPrice2, [SalesPrice3] = @SalesPrice3, [ProductColor] = @ProductColor, [WSalePrice] = @WSalePrice, [ReservedQty] = @ReservedQty, [DamageQty] = @DamageQty, [ExpiredQty] = @ExpiredQty, [MaximumQty] = @MaximumQty, [MinimumQty] = @MinimumQty, [Profit] = @Profit, [Discount] = @Discount, [MaintainStock] = @MaintainStock, [URL] = @URL, [ActualWeight] = @VMWeight, [WeighUnitID] = @WeighUnitID, [DimLenth] = @DimLenth, [DimHieght] = @DimHieght, [DimDepth] = @DimDepth, AlternateId1=@AlternateId1, AlternateId2=@AlternateId2, AlternateId3=@AlternateId3, [Field1] = @Field1, [Field2] = @Field2, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModfiedDate] = @ModfiedDate Where [Company_Id] = @Company_Id and [ProductId] = @ProductId select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_ProductMaster_SelectRow] @Company_Id int, @Brand_Id int, @ProductId int, @ProductCode nvarchar(250), @Optype int , @Location_Id int As Begin SET NOCOUNT ON; if(@Optype=1) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,10) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.DimDepth,pm.HScode,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate,pm.IsActive , (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id end if(@Optype=2) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,120) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 1 then Pm.SalesPrice1 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 2 then Pm.SalesPrice2 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 3 then Pm.SalesPrice3 else '0' end as ProductSalesPrice, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.CreatedBy)=0 then 'Superadmin' else substring((select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.CreatedBy)),0,17) end as CreatedEmpName, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.modifiedBy)=0 then 'Superadmin' else substring((select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=pm.modifiedBy)),0,17) end as ModifiedEmpName, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else cast((select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) as numeric(18,3) ) end as StockQty , (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName , (select Inv_ModelMaster.Model_No from Inv_ModelMaster where Inv_ModelMaster.Trans_Id=Pm.ModelNo) as ModelNo From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='True' end if(@Optype=3) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,10) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.WeighUnitID,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.ProductId=@ProductId order by ProductId desc end if(@Optype=4) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(PM.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and ProductCode=@ProductCode order by ProductId desc end if(@Optype=5) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(PM.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=pm.Company_Id and Set_EmployeeMaster.Emp_Code=pm.CreatedBy) as CreatedEmpName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=pm.Company_Id and Set_EmployeeMaster.Emp_Code=pm.ModifiedBy) as ModifiedEmpName From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='False' order by ProductId desc end if(@Optype=6) begin select ProductId,ProductCode,EProductName, (SUBSTRING(EProductName,0,10)) as ShortProductName , (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=inv_productmaster.UnitId) as UnitName, IsActive , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=inv_productmaster.ProductId ) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=inv_productmaster.ProductId) end as StockQty from inv_productmaster order by EProductName asc end if(@Optype=7) begin Select Inv_StockDetail.ProductId, inv_productmaster.ProductCode,(SUBSTRING(inv_productmaster.EProductName,0,10)) as ShortProductName ,inv_productmaster.EProductName ,Inv_UnitMaster.Unit_Name , Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by inv_productmaster.EProductName asc end if(@Optype=8) begin Select Inv_StockDetail.ProductId,Inv_Product_CategoryMaster.Category_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name , Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_Product_Category on inv_productmaster.ProductId=Inv_Product_Category.ProductId inner Join Inv_Product_CategoryMaster on Inv_Product_CategoryMaster.Category_Id=Inv_Product_Category.CategoryId where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_Product_CategoryMaster.Category_Name asc end if(@Optype=9) begin Select Inv_StockDetail.ProductId,Inv_ProductBrandMaster.Brand_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name ,Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_Product_Brand on inv_productmaster.ProductId=Inv_Product_Brand.ProductId inner Join Inv_ProductBrandMaster on Inv_ProductBrandMaster.Brand_Id=Inv_Product_Brand.PBrandId where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_ProductBrandMaster.Brand_Name asc end if(@Optype=10) begin Select Inv_StockDetail.ProductId,Inv_RackMaster.Rack_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name ,Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_RackDetail on inv_productmaster.ProductId=Inv_RackDetail.Product_Id inner Join Inv_RackMaster on Inv_RackMaster.Rack_ID=Inv_RackDetail.Rack_Id where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_RackMaster.Rack_Name asc end if(@Optype=11) begin Select Company_Id,Brand_Id,ProductCode from Inv_ProductMaster where ProductId=@ProductId end if(@optype=12) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(Pm.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 1 then Pm.SalesPrice1 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 2 then Pm.SalesPrice2 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 3 then Pm.SalesPrice3 else '0' end as ProductSalesPrice, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=Pm.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=Pm.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='True' and pm.Field1=' ' and Pm.Field3='True' end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_ProductMaster_SelectRow] @Company_Id int, @Brand_Id int, @ProductId int, @ProductCode nvarchar(250), @Optype int , @Location_Id int As Begin SET NOCOUNT ON; if(@Optype=1) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,10) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.DimDepth,pm.HScode,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate,pm.IsActive , (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id end if(@Optype=2) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,120) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 1 then Pm.SalesPrice1 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 2 then Pm.SalesPrice2 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 3 then Pm.SalesPrice3 else '0' end as ProductSalesPrice, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.CreatedBy)=0 then 'Superadmin' else substring((select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.CreatedBy)),0,17) end as CreatedEmpName, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.modifiedBy)=0 then 'Superadmin' else substring((select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=pm.modifiedBy)),0,17) end as ModifiedEmpName, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else cast((select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) as numeric(18,3) ) end as StockQty , (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName , (select Inv_ModelMaster.Model_No from Inv_ModelMaster where Inv_ModelMaster.Trans_Id=Pm.ModelNo) as ModelNo From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='True' end if(@Optype=3) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,10) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.WeighUnitID,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.ProductId=@ProductId order by ProductId desc end if(@Optype=4) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(PM.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and ProductCode=@ProductCode order by ProductId desc end if(@Optype=5) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(PM.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=pm.Company_Id and Set_EmployeeMaster.Emp_Code=pm.CreatedBy) as CreatedEmpName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=pm.Company_Id and Set_EmployeeMaster.Emp_Code=pm.ModifiedBy) as ModifiedEmpName From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='False' order by ProductId desc end if(@Optype=6) begin select ProductId,ProductCode,EProductName, (SUBSTRING(EProductName,0,10)) as ShortProductName , (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=inv_productmaster.UnitId) as UnitName, IsActive , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=inv_productmaster.ProductId ) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=inv_productmaster.ProductId) end as StockQty from inv_productmaster order by EProductName asc end if(@Optype=7) begin Select Inv_StockDetail.ProductId, inv_productmaster.ProductCode,(SUBSTRING(inv_productmaster.EProductName,0,10)) as ShortProductName ,inv_productmaster.EProductName ,Inv_UnitMaster.Unit_Name , Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by inv_productmaster.EProductName asc end if(@Optype=8) begin Select Inv_StockDetail.ProductId,Inv_Product_CategoryMaster.Category_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name , Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_Product_Category on inv_productmaster.ProductId=Inv_Product_Category.ProductId inner Join Inv_Product_CategoryMaster on Inv_Product_CategoryMaster.Category_Id=Inv_Product_Category.CategoryId where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_Product_CategoryMaster.Category_Name asc end if(@Optype=9) begin Select Inv_StockDetail.ProductId,Inv_ProductBrandMaster.Brand_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name ,Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_Product_Brand on inv_productmaster.ProductId=Inv_Product_Brand.ProductId inner Join Inv_ProductBrandMaster on Inv_ProductBrandMaster.Brand_Id=Inv_Product_Brand.PBrandId where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_ProductBrandMaster.Brand_Name asc end if(@Optype=10) begin Select Inv_StockDetail.ProductId,Inv_RackMaster.Rack_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name ,Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_RackDetail on inv_productmaster.ProductId=Inv_RackDetail.Product_Id inner Join Inv_RackMaster on Inv_RackMaster.Rack_ID=Inv_RackDetail.Rack_Id where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_RackMaster.Rack_Name asc end if(@Optype=11) begin Select Company_Id,Brand_Id,ProductCode from Inv_ProductMaster where ProductId=@ProductId end if(@optype=12) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(Pm.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 1 then Pm.SalesPrice1 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 2 then Pm.SalesPrice2 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 3 then Pm.SalesPrice3 else '0' end as ProductSalesPrice, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=Pm.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=Pm.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='True' and pm.Field1=' ' and Pm.Field3='True' end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_ProductMaster_Insert] @Company_Id int, @Brand_Id int, @ProductCode nvarchar(250) = NULL, @PartNo nvarchar(50) = NULL, @ModelNo nvarchar(80) = NULL, @ModelName nvarchar(MAX), @EProductName nvarchar(MAX) = NULL, @LProductName nvarchar(MAX) = NULL, @CountryID int = NULL, @UnitId int = NULL, @ItemType nvarchar(2) = NULL, @HScode nvarchar(50) = NULL, @HasBatchNo bit = NULL, @TypeOfBatchNo nvarchar(MAX) = NULL, @HasSerialNo bit = NULL, @ReorderQty nvarchar(50) = NULL, @CostPrice nvarchar(50) = NULL, @Description text = NULL, @SalesPrice1 nvarchar(MAX) = NULL, @SalesPrice2 nvarchar(MAX) = NULL, @SalesPrice3 nvarchar(MAX) = NULL, @ProductColor nvarchar(50) = NULL, @WSalePrice nvarchar(MAX) = NULL, @ReservedQty nvarchar(50) = NULL, @DamageQty nvarchar(50) = NULL, @ExpiredQty nvarchar(50) = NULL, @MaximumQty nvarchar(50) = NULL, @MinimumQty nvarchar(50) = NULL, @Profit numeric(18,3) = NULL, @Discount nvarchar(50) = NULL, @MaintainStock nvarchar(MAX) = NULL, @URL nvarchar(MAX) = NULL, @VMWeight nvarchar(11) = NULL, @WeighUnitID nvarchar(3) = NULL, @DimLenth numeric(18,3) = NULL, @DimHieght numeric(18,3) = NULL, @DimDepth numeric(18,3) = NULL, @AlternateId1 nvarchar(25), @AlternateId2 nvarchar(25), @AlternateId3 nvarchar(25), @Field1 nvarchar(MAX) = NULL, @Field2 nvarchar(MAX) = NULL, @Field3 nvarchar(MAX) = NULL, @Field4 nvarchar(MAX) = NULL, @Field5 nvarchar(MAX) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @IsActive bit = NULL, @CreatedBy nvarchar(11) = NULL, @CreatedDate datetime = NULL, @ModifiedBy nvarchar(11) = NULL, @ModfiedDate datetime = NULL, @ReferenceID int output As Begin Insert Into Inv_ProductMaster ([Company_Id],[Brand_Id],[ProductCode],[PartNo],[ModelNo],[ModelName],[EProductName],[LProductName],[CountryID],[UnitId],[ItemType],[HScode],[HasBatchNo],[TypeOfBatchNo],[HasSerialNo],[ReorderQty],[CostPrice],[Description],[SalesPrice1],[SalesPrice2],[SalesPrice3],[ProductColor],[WSalePrice],[ReservedQty],[DamageQty],[ExpiredQty],[MaximumQty],[MinimumQty],[Profit],[Discount],[MaintainStock],[URL],[ActualWeight],[WeighUnitID],[DimLenth],[DimHieght],[DimDepth],[AlternateId1],[AlternateId2],[AlternateId3],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModfiedDate]) Values (@Company_Id,@Brand_Id,@ProductCode,@PartNo,@ModelNo,@ModelName,@EProductName,@LProductName,@CountryID,@UnitId,@ItemType,@HScode,@HasBatchNo,@TypeOfBatchNo,@HasSerialNo,@ReorderQty,@CostPrice,@Description,@SalesPrice1,@SalesPrice2,@SalesPrice3,@ProductColor,@WSalePrice,@ReservedQty,@DamageQty,@ExpiredQty,@MaximumQty,@MinimumQty,@Profit,@Discount,@MaintainStock,@URL,@VMWeight,@WeighUnitID,@DimLenth,@DimHieght,@DimDepth,@AlternateId1,@AlternateId2,@AlternateId3,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModfiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_ProductMaster_Insert] @Company_Id int, @Brand_Id int, @ProductCode nvarchar(250) = NULL, @PartNo nvarchar(50) = NULL, @ModelNo nvarchar(80) = NULL, @ModelName nvarchar(MAX), @EProductName nvarchar(MAX) = NULL, @LProductName nvarchar(MAX) = NULL, @CountryID int = NULL, @UnitId int = NULL, @ItemType nvarchar(2) = NULL, @HScode nvarchar(50) = NULL, @HasBatchNo bit = NULL, @TypeOfBatchNo nvarchar(MAX) = NULL, @HasSerialNo bit = NULL, @ReorderQty nvarchar(50) = NULL, @CostPrice nvarchar(50) = NULL, @Description text = NULL, @SalesPrice1 nvarchar(MAX) = NULL, @SalesPrice2 nvarchar(MAX) = NULL, @SalesPrice3 nvarchar(MAX) = NULL, @ProductColor nvarchar(50) = NULL, @WSalePrice nvarchar(MAX) = NULL, @ReservedQty nvarchar(50) = NULL, @DamageQty nvarchar(50) = NULL, @ExpiredQty nvarchar(50) = NULL, @MaximumQty nvarchar(50) = NULL, @MinimumQty nvarchar(50) = NULL, @Profit numeric(18,3) = NULL, @Discount nvarchar(50) = NULL, @MaintainStock nvarchar(MAX) = NULL, @URL nvarchar(MAX) = NULL, @VMWeight nvarchar(11) = NULL, @WeighUnitID nvarchar(3) = NULL, @DimLenth numeric(18,3) = NULL, @DimHieght numeric(18,3) = NULL, @DimDepth numeric(18,3) = NULL, @AlternateId1 nvarchar(25), @AlternateId2 nvarchar(25), @AlternateId3 nvarchar(25), @Field1 nvarchar(MAX) = NULL, @Field2 nvarchar(MAX) = NULL, @Field3 nvarchar(MAX) = NULL, @Field4 nvarchar(MAX) = NULL, @Field5 nvarchar(MAX) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @IsActive bit = NULL, @CreatedBy nvarchar(11) = NULL, @CreatedDate datetime = NULL, @ModifiedBy nvarchar(11) = NULL, @ModfiedDate datetime = NULL, @ReferenceID int output As Begin Insert Into Inv_ProductMaster ([Company_Id],[Brand_Id],[ProductCode],[PartNo],[ModelNo],[ModelName],[EProductName],[LProductName],[CountryID],[UnitId],[ItemType],[HScode],[HasBatchNo],[TypeOfBatchNo],[HasSerialNo],[ReorderQty],[CostPrice],[Description],[SalesPrice1],[SalesPrice2],[SalesPrice3],[ProductColor],[WSalePrice],[ReservedQty],[DamageQty],[ExpiredQty],[MaximumQty],[MinimumQty],[Profit],[Discount],[MaintainStock],[URL],[ActualWeight],[WeighUnitID],[DimLenth],[DimHieght],[DimDepth],[AlternateId1],[AlternateId2],[AlternateId3],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModfiedDate]) Values (@Company_Id,@Brand_Id,@ProductCode,@PartNo,@ModelNo,@ModelName,@EProductName,@LProductName,@CountryID,@UnitId,@ItemType,@HScode,@HasBatchNo,@TypeOfBatchNo,@HasSerialNo,@ReorderQty,@CostPrice,@Description,@SalesPrice1,@SalesPrice2,@SalesPrice3,@ProductColor,@WSalePrice,@ReservedQty,@DamageQty,@ExpiredQty,@MaximumQty,@MinimumQty,@Profit,@Discount,@MaintainStock,@URL,@VMWeight,@WeighUnitID,@DimLenth,@DimHieght,@DimDepth,@AlternateId1,@AlternateId2,@AlternateId3,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModfiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_Product_Suppliers_SelectRow] @Company_Id int, @Brand_Id int, @Product_Id int , @Supplier_Id int , @Optype Int As Begin if(@Optype=0) begin Select Inv_Product_Suppliers.[Company_Id], Inv_Product_Suppliers. [Brand_Id], Inv_Product_Suppliers. [Product_Id], Inv_Product_Suppliers.[Supplier_Id], Inv_Product_Suppliers.[ProductSupplierCode], Inv_Product_Suppliers. [Field1], Inv_Product_Suppliers.[Field2], Inv_Product_Suppliers.[Field3], Inv_Product_Suppliers.[Field4], Inv_Product_Suppliers. [Field5], Inv_Product_Suppliers.[Field6], Inv_Product_Suppliers.[Field7], Inv_Product_Suppliers.[IsActive], Inv_Product_Suppliers.[CreatedBy], Inv_Product_Suppliers. [CreatedDate], Inv_Product_Suppliers.[ModifiedBy], Inv_Product_Suppliers.[ModifiedDate] , Ems_ContactMaster.Name From Inv_Product_Suppliers inner join Ems_ContactMaster on Inv_Product_Suppliers.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_Product_Suppliers.Company_Id=@Company_Id and Inv_Product_Suppliers.Brand_Id=@Brand_Id and Inv_Product_Suppliers.Product_Id=@Product_Id end else If(@Optype=1) begin Select distinct Inv_Product_Suppliers. [Product_Id] From Inv_Product_Suppliers inner join Ems_ContactMaster on Inv_Product_Suppliers.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_Product_Suppliers.Company_Id=@Company_Id and Inv_Product_Suppliers.Brand_Id=@Brand_Id and Inv_Product_Suppliers.Supplier_Id=@Supplier_Id end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_Product_Suppliers_SelectRow] @Company_Id int, @Brand_Id int, @Product_Id int , @Supplier_Id int , @Optype Int As Begin if(@Optype=0) begin Select Inv_Product_Suppliers.[Company_Id], Inv_Product_Suppliers. [Brand_Id], Inv_Product_Suppliers. [Product_Id], Inv_Product_Suppliers.[Supplier_Id], Inv_Product_Suppliers.[ProductSupplierCode], Inv_Product_Suppliers. [Field1], Inv_Product_Suppliers.[Field2], Inv_Product_Suppliers.[Field3], Inv_Product_Suppliers.[Field4], Inv_Product_Suppliers. [Field5], Inv_Product_Suppliers.[Field6], Inv_Product_Suppliers.[Field7], Inv_Product_Suppliers.[IsActive], Inv_Product_Suppliers.[CreatedBy], Inv_Product_Suppliers. [CreatedDate], Inv_Product_Suppliers.[ModifiedBy], Inv_Product_Suppliers.[ModifiedDate] , Ems_ContactMaster.Name From Inv_Product_Suppliers inner join Ems_ContactMaster on Inv_Product_Suppliers.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_Product_Suppliers.Company_Id=@Company_Id and Inv_Product_Suppliers.Brand_Id=@Brand_Id and Inv_Product_Suppliers.Product_Id=@Product_Id end else If(@Optype=1) begin Select distinct Inv_Product_Suppliers. [Product_Id] From Inv_Product_Suppliers inner join Ems_ContactMaster on Inv_Product_Suppliers.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_Product_Suppliers.Company_Id=@Company_Id and Inv_Product_Suppliers.Brand_Id=@Brand_Id and Inv_Product_Suppliers.Supplier_Id=@Supplier_Id end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ems_ContactMaster_SelectRowForGrid] @Trans_Id int, @Code nvarchar(255), @Name nvarchar(MAX), @Status nvarchar(50), @GroupId int, @condition nvarchar(Max), @Optype int As Begin if(@Optype=1) begin Declare @SqlCmd nvarchar(max) set @SqlCmd ='select Trans_Id,Code,Name as ContactName,Field1,Field2,Status,Field3,Company_Id,Field6 from Ems_ContactMaster where ' + @condition + ' Order By Name Asc' print(@SqlCmd) exec sp_executesql @SqlCmd end if(@Optype=2) begin Declare @SqlCmd1 nvarchar(max) set @SqlCmd1 ='SELECT Trans_Id,Code,Name as ContactName,Status ,Field1,Field2,Field3,Field6 FROM Ems_ContactMaster WHERE Company_id in (Select Trans_Id From Ems_ContactMaster where ' + @condition +' and Status=''Company'') or Trans_Id in (Select Trans_Id From Ems_ContactMaster where ' + @condition +' and Status=''Company'') Order By Name Asc' exec sp_executesql @SqlCmd1 end if(@Optype=3) begin Declare @SqlCmd2 nvarchar(max) set @SqlCmd2 ='select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Code,Ems_ContactMaster.Name as ContactName,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.Status,Ems_ContactMaster.Field3,Ems_ContactMaster.Company_Id,Ems_ContactMaster.Field6 , case when Ems_ContactMaster.Company_Id=0 then null else (select CM.Name from Ems_ContactMaster as CM where CM.Trans_Id=Ems_ContactMaster.Company_Id) end as Contact_Company_Name, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)) end as CreatedEmployee , case when Ems_ContactMaster.Field4<>'''' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else '''' end as CountryName , Ems_ContactMaster.Remarks , (select PC.Name from Ems_ContactMaster as PC where PC.Trans_Id=ISNULL(Ems_ContactMaster.ParentContactId,0)) as ParentContactName, ISNULL(Ems_ContactMaster.ParentContactId,0) as ParentContactId from Ems_ContactMaster left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id where ' + @condition + ' and Ems_ContactMaster.IsActive=''True'' Order By Ems_ContactMaster.Name Asc' exec sp_executesql @SqlCmd2 end if(@Optype=4) begin select CM.Trans_Id,CM.Code,CM.Name as ContactName,CM.Field1,CM.Field6,CM.Field2,CM.Status,CM.Field3,CM.Company_Id, CM.Remarks, case when CM.Company_Id=0 then ' ' else (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=CM.CreatedBy)=0 then CM.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=CM.CreatedBy)) end as CreatedEmployee , case when CM.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=CM.Field4) else ' ' end as CountryName , (select PC.Name from Ems_ContactMaster as PC where PC.Trans_Id=ISNULL(CM.ParentContactId,0)) as ParentContactName, ISNULL(CM.ParentContactId,0) as ParentContactId from Ems_ContactMaster as CM where CM.IsActive='True' Order By CM.Trans_Id desc end if(@Optype=5) begin Select Trans_Id,Name as ContactName,Field1 from Ems_ContactMaster where Status='Company' end if(@Optype=6) begin Select Trans_Id,Name as ContactName,Field1 from Ems_ContactMaster where ParentContactId=@condition and Ems_ContactMaster.IsActive='True' end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ems_ContactMaster_SelectRowForGrid] @Trans_Id int, @Code nvarchar(255), @Name nvarchar(MAX), @Status nvarchar(50), @GroupId int, @condition nvarchar(Max), @Optype int As Begin if(@Optype=1) begin Declare @SqlCmd nvarchar(max) set @SqlCmd ='select Trans_Id,Code,Name as ContactName,Field1,Field2,Status,Field3,Company_Id,Field6 from Ems_ContactMaster where ' + @condition + ' Order By Name Asc' print(@SqlCmd) exec sp_executesql @SqlCmd end if(@Optype=2) begin Declare @SqlCmd1 nvarchar(max) set @SqlCmd1 ='SELECT Trans_Id,Code,Name as ContactName,Status ,Field1,Field2,Field3,Field6 FROM Ems_ContactMaster WHERE Company_id in (Select Trans_Id From Ems_ContactMaster where ' + @condition +' and Status=''Company'') or Trans_Id in (Select Trans_Id From Ems_ContactMaster where ' + @condition +' and Status=''Company'') Order By Name Asc' exec sp_executesql @SqlCmd1 end if(@Optype=3) begin Declare @SqlCmd2 nvarchar(max) set @SqlCmd2 ='select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Code,Ems_ContactMaster.Name as ContactName,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.Status,Ems_ContactMaster.Field3,Ems_ContactMaster.Company_Id,Ems_ContactMaster.Field6 , case when Ems_ContactMaster.Company_Id=0 then null else (select CM.Name from Ems_ContactMaster as CM where CM.Trans_Id=Ems_ContactMaster.Company_Id) end as Contact_Company_Name, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)) end as CreatedEmployee , case when Ems_ContactMaster.Field4<>'''' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else '''' end as CountryName , Ems_ContactMaster.Remarks , (select PC.Name from Ems_ContactMaster as PC where PC.Trans_Id=ISNULL(Ems_ContactMaster.ParentContactId,0)) as ParentContactName, ISNULL(Ems_ContactMaster.ParentContactId,0) as ParentContactId from Ems_ContactMaster left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id where ' + @condition + ' and Ems_ContactMaster.IsActive=''True'' Order By Ems_ContactMaster.Name Asc' exec sp_executesql @SqlCmd2 end if(@Optype=4) begin select CM.Trans_Id,CM.Code,CM.Name as ContactName,CM.Field1,CM.Field6,CM.Field2,CM.Status,CM.Field3,CM.Company_Id, CM.Remarks, case when CM.Company_Id=0 then ' ' else (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=CM.CreatedBy)=0 then CM.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=CM.CreatedBy)) end as CreatedEmployee , case when CM.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=CM.Field4) else ' ' end as CountryName , (select PC.Name from Ems_ContactMaster as PC where PC.Trans_Id=ISNULL(CM.ParentContactId,0)) as ParentContactName, ISNULL(CM.ParentContactId,0) as ParentContactId from Ems_ContactMaster as CM where CM.IsActive='True' Order By CM.Trans_Id desc end if(@Optype=5) begin Select Trans_Id,Name as ContactName,Field1 from Ems_ContactMaster where Status='Company' end if(@Optype=6) begin Select Trans_Id,Name as ContactName,Field1 from Ems_ContactMaster where ParentContactId=@condition and Ems_ContactMaster.IsActive='True' end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ems_ContactMaster_SelectRow] @Trans_Id int, @Name nvarchar(MAX), @Optype int As Begin if(@Optype=7) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id, (select Dep_Name from Set_DepartmentMaster where Dep_Id=CM.Dep_Id) as DepartmentName , (select Designation from Set_DesignationMaster where Designation_Id=CM.Designation_Id) as DesignationName , case when Ems_Contact_Group.Group_Id =1 then Ems_Contact_Group.Field1 end as Customercode, case when Ems_Contact_Group.Group_Id =2 then Ems_Contact_Group.Field1 end as suppliercode, case when CM.Company_Id<>0 then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , CM.Is_Reseller from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.status end if(@Optype=1) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id end if(@Optype=2) Begin Select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Dep_Id ,Ems_ContactMaster.Status,Ems_ContactMaster.Code,Ems_ContactMaster.Is_Reseller ,Ems_ContactMaster.Field3, Ems_ContactMaster.Name,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.company_id,Ems_ContactMaster.Field1 as EmailId,Ems_ContactMaster.Field2 as MobileNo, Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when Ems_ContactMaster.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else ' ' end as CountryName , Ems_ContactMaster.Field6 , (Ems_ContactMaster.Name+'/'+cast(Ems_ContactMaster.Trans_Id as nvarchar)+'/'+Ems_ContactMaster.Field1+'/'+Ems_ContactMaster.Field2) as Filtertext from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' order by Ems_ContactMaster.Name asc end if(@Optype=3) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_ContactMaster.Trans_Id = @Trans_Id end if(@Optype=4) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Ems_ContactMaster.CreatedBy) end as CreatedUser, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.ModifiedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Ems_ContactMaster.ModifiedBy) end as ModifiedUser from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='False' end if(@Optype=5) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.Trans_Id=@Trans_Id and Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.Name Asc end if(@Optype=6) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Rtrim(LTRIM(Ems_ContactMaster.Name)) = @Name end if(@Optype=8) begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion,Ems_Contact_Group.Group_Id , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_Contact_Group.Group_Id=@Trans_Id end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ems_ContactMaster_SelectRow] @Trans_Id int, @Name nvarchar(MAX), @Optype int As Begin if(@Optype=7) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id, (select Dep_Name from Set_DepartmentMaster where Dep_Id=CM.Dep_Id) as DepartmentName , (select Designation from Set_DesignationMaster where Designation_Id=CM.Designation_Id) as DesignationName , case when Ems_Contact_Group.Group_Id =1 then Ems_Contact_Group.Field1 end as Customercode, case when Ems_Contact_Group.Group_Id =2 then Ems_Contact_Group.Field1 end as suppliercode, case when CM.Company_Id<>0 then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , CM.Is_Reseller from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.status end if(@Optype=1) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id end if(@Optype=2) Begin Select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Dep_Id ,Ems_ContactMaster.Status,Ems_ContactMaster.Code,Ems_ContactMaster.Is_Reseller ,Ems_ContactMaster.Field3, Ems_ContactMaster.Name,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.company_id,Ems_ContactMaster.Field1 as EmailId,Ems_ContactMaster.Field2 as MobileNo, Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when Ems_ContactMaster.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else ' ' end as CountryName , Ems_ContactMaster.Field6 , (Ems_ContactMaster.Name+'/'+cast(Ems_ContactMaster.Trans_Id as nvarchar)+'/'+Ems_ContactMaster.Field1+'/'+Ems_ContactMaster.Field2) as Filtertext from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' order by Ems_ContactMaster.Name asc end if(@Optype=3) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_ContactMaster.Trans_Id = @Trans_Id end if(@Optype=4) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Ems_ContactMaster.CreatedBy) end as CreatedUser, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.ModifiedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Ems_ContactMaster.ModifiedBy) end as ModifiedUser from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='False' end if(@Optype=5) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.Trans_Id=@Trans_Id and Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.Name Asc end if(@Optype=6) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Rtrim(LTRIM(Ems_ContactMaster.Name)) = @Name end if(@Optype=8) begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion,Ems_Contact_Group.Group_Id , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_Contact_Group.Group_Id=@Trans_Id end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create PROCEDURE [dbo].[Sp_Arc_File_Transaction_SelectRow] @Company_Id int, @Trans_Id int, @Document_id int, @Optype int AS BEGIN if(@Optype=1) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType,Arc_Directory_Creation.Field3 as DirectoryType_TransId,Arc_Directory_Creation.Field4 as DirectoryType_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id End ELSE IF (@Optype=2) Begin SELECT ArcDir.CreatedDate,ArcDir.Directory_Name,ArcDir.Field1 as DirectoryType,ArcDir.Field3 as DirectoryType_TransId,ArcDir.Field4 as DirectoryType_Name, Arc_Document_Master.Document_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate, case when ArcDir.Field4=' ' then ArcDir.Field3 when ArcDir.Field4='Employee' then (select Emp_Name from Set_EmployeeMaster where Emp_Id=ArcDir.Field3) end as Directory_For FROM Arc_Directory_Creation as ArcDir INNER JOIN Arc_File_Transaction ON ArcDir.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' End ELSE IF (@Optype=3) Begin SELECT ArcDir.CreatedDate,ArcDir.Directory_Name,ArcDir.Field1 as DirectoryType,ArcDir.Field3 as DirectoryType_TransId,ArcDir.Field4 as DirectoryType_Name, Arc_Document_Master.Document_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate, case when ArcDir.Field4=' ' then ArcDir.Field3 when ArcDir.Field4='Employee' then (select Emp_Name from Set_EmployeeMaster where Emp_Id=ArcDir.Field3) when ArcDir.Field4='Contact' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Customer' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Supplier' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Product' then (select EProductName from Inv_ProductMaster where ProductId= ArcDir.Field3) end as Directory_For FROM Arc_Directory_Creation as ArcDir INNER JOIN Arc_File_Transaction ON ArcDir.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='False' End ELSE IF (@Optype=4) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Data, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' and Arc_File_Transaction.[Trans_Id]=@Trans_Id End ELSE IF (@Optype=5) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Data, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id left JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' and Arc_File_Transaction.Directory_Id=@Document_id END ELSE IF (@Optype=6) Begin select Arc_File_Transaction.* , (select Arc_Document_Master.Document_Name from Arc_Document_Master where Arc_Document_Master.Id=Arc_File_Transaction.Document_Master_Id) as DocumentName from Arc_File_Transaction where Company_Id=@Company_Id and Directory_Id=@Document_id and File_Type_Id=@Trans_Id END END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter PROCEDURE [dbo].[Sp_Arc_File_Transaction_SelectRow] @Company_Id int, @Trans_Id int, @Document_id int, @Optype int AS BEGIN if(@Optype=1) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType,Arc_Directory_Creation.Field3 as DirectoryType_TransId,Arc_Directory_Creation.Field4 as DirectoryType_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id End ELSE IF (@Optype=2) Begin SELECT ArcDir.CreatedDate,ArcDir.Directory_Name,ArcDir.Field1 as DirectoryType,ArcDir.Field3 as DirectoryType_TransId,ArcDir.Field4 as DirectoryType_Name, Arc_Document_Master.Document_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate, case when ArcDir.Field4=' ' then ArcDir.Field3 when ArcDir.Field4='Employee' then (select Emp_Name from Set_EmployeeMaster where Emp_Id=ArcDir.Field3) end as Directory_For FROM Arc_Directory_Creation as ArcDir INNER JOIN Arc_File_Transaction ON ArcDir.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' End ELSE IF (@Optype=3) Begin SELECT ArcDir.CreatedDate,ArcDir.Directory_Name,ArcDir.Field1 as DirectoryType,ArcDir.Field3 as DirectoryType_TransId,ArcDir.Field4 as DirectoryType_Name, Arc_Document_Master.Document_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate, case when ArcDir.Field4=' ' then ArcDir.Field3 when ArcDir.Field4='Employee' then (select Emp_Name from Set_EmployeeMaster where Emp_Id=ArcDir.Field3) when ArcDir.Field4='Contact' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Customer' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Supplier' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Product' then (select EProductName from Inv_ProductMaster where ProductId= ArcDir.Field3) end as Directory_For FROM Arc_Directory_Creation as ArcDir INNER JOIN Arc_File_Transaction ON ArcDir.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='False' End ELSE IF (@Optype=4) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Data, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' and Arc_File_Transaction.[Trans_Id]=@Trans_Id End ELSE IF (@Optype=5) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Data, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id left JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' and Arc_File_Transaction.Directory_Id=@Document_id END ELSE IF (@Optype=6) Begin select Arc_File_Transaction.* , (select Arc_Document_Master.Document_Name from Arc_Document_Master where Arc_Document_Master.Id=Arc_File_Transaction.Document_Master_Id) as DocumentName from Arc_File_Transaction where Company_Id=@Company_Id and Directory_Id=@Document_id and File_Type_Id=@Trans_Id END END";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Sys_CountryMaster_SelectRow] @Country_Id int, @Country_Name nvarchar(255) , @Optype int As Begin if(@Optype=1) Begin Select *, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.ModifiedBy)) as Modified_User From Sys_CountryMaster where IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=2) Begin Select * From Sys_CountryMaster Where Country_Id = @Country_Id and IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=3) Begin Select *, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.ModifiedBy)) as Modified_User From Sys_CountryMaster Where IsActive='false' order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select * From Sys_CountryMaster Where IsActive='True' and Country_Name=@Country_Name order by CreatedDate desc End ELSE IF (@Optype=5) Begin select ('+'+Sys_CountryMaster.Country_Code+' ('+Sys_CurrencyMaster.Currency_Code+')') as CountryCodeName,('+'+Sys_CountryMaster.Country_Code) as CountryCodeValue from Sys_CountryMaster inner join Sys_Country_Currency on Sys_Country_Currency.Country_Id=Sys_CountryMaster.Country_Id inner join Sys_CurrencyMaster on Sys_Country_Currency.Currency_Id=Sys_CurrencyMaster.Currency_ID where Sys_CurrencyMaster.IsActive='True' and Sys_CountryMaster.IsActive='True' order by sys_countrymaster.CreatedDate desc End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Sys_CountryMaster_SelectRow] @Country_Id int, @Country_Name nvarchar(255) , @Optype int As Begin if(@Optype=1) Begin Select *, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.ModifiedBy)) as Modified_User From Sys_CountryMaster where IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=2) Begin Select * From Sys_CountryMaster Where Country_Id = @Country_Id and IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=3) Begin Select *, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.ModifiedBy)) as Modified_User From Sys_CountryMaster Where IsActive='false' order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select * From Sys_CountryMaster Where IsActive='True' and Country_Name=@Country_Name order by CreatedDate desc End ELSE IF (@Optype=5) Begin select ('+'+Sys_CountryMaster.Country_Code+' ('+Sys_CurrencyMaster.Currency_Code+')') as CountryCodeName,('+'+Sys_CountryMaster.Country_Code) as CountryCodeValue from Sys_CountryMaster inner join Sys_Country_Currency on Sys_Country_Currency.Country_Id=Sys_CountryMaster.Country_Id inner join Sys_CurrencyMaster on Sys_Country_Currency.Currency_Id=Sys_CurrencyMaster.Currency_ID where Sys_CurrencyMaster.IsActive='True' and Sys_CountryMaster.IsActive='True' order by sys_countrymaster.CreatedDate desc End End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Set_UserPermission_SelectRow] @Company_Id int, @User_Id varchar(11), @Optype int As Begin if(@Optype=1) Begin Select * From Set_UserPermission End ELSE IF (@Optype=2) Begin Select * From Set_UserPermission Where IsActive='True' End ELSE IF (@Optype=3) Begin Select * From Set_UserPermission Where IsActive='false' End ELSE IF (@Optype=4) Begin SELECT Set_UserPermission.TransId, Set_UserPermission.User_Id, Set_UserPermission.Module_Id, Set_UserPermission.Object_Id, Set_UserPermission.IsActive, Set_UserPermission.CreatedBy, Set_UserPermission.CreatedDate, Set_UserPermission.ModifiedBy, Set_UserPermission.ModifiedDate, Set_UserOpPermission.* ,Set_UserPermission.Field1 as Role_Id FROM Set_UserPermission left outer join Set_UserOpPermission ON Set_UserPermission.TransId = Set_UserOpPermission.User_Record_Id where Set_UserPermission.User_Id = @User_Id and Set_UserPermission.Company_Id=@Company_Id and Set_UserPermission.IsActive='True' End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Set_UserPermission_SelectRow] @Company_Id int, @User_Id varchar(11), @Optype int As Begin if(@Optype=1) Begin Select * From Set_UserPermission End ELSE IF (@Optype=2) Begin Select * From Set_UserPermission Where IsActive='True' End ELSE IF (@Optype=3) Begin Select * From Set_UserPermission Where IsActive='false' End ELSE IF (@Optype=4) Begin SELECT Set_UserPermission.TransId, Set_UserPermission.User_Id, Set_UserPermission.Module_Id, Set_UserPermission.Object_Id, Set_UserPermission.IsActive, Set_UserPermission.CreatedBy, Set_UserPermission.CreatedDate, Set_UserPermission.ModifiedBy, Set_UserPermission.ModifiedDate, Set_UserOpPermission.* ,Set_UserPermission.Field1 as Role_Id FROM Set_UserPermission left outer join Set_UserOpPermission ON Set_UserPermission.TransId = Set_UserOpPermission.User_Record_Id where Set_UserPermission.User_Id = @User_Id and Set_UserPermission.Company_Id=@Company_Id and Set_UserPermission.IsActive='True' End End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Set_UserMaster_SelectRow] @User_Id nvarchar(11), @Password nvarchar(50), @Company_Id int, @Optype Int As Begin if(@Optype=1) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id and Password=@Password and IsActive='True' and Company_Id=@Company_Id end if(@Optype=2) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id end if(@Optype=3) begin Select Set_User.[User_Id], Set_User. [Company_Id], Set_User.[Emp_Id], Set_User. [Role_Id], (select Role_Name from Set_RoleMaster where Role_Id=Set_User.Role_Id) as Role_Name, Set_User.[Password], Set_User.[Is_Modified], Set_User.[Field1], Set_User.[Field2], Set_User.[Field3], Set_User.[Field4], Set_User.[Field5], Set_User.[Field6], Set_User.[Field7], Set_User.[IsActive], Set_User.[CreatedBy], Set_User.[CreatedDate], Set_User.[ModifiedBy], Set_User.[ModifiedDate] , (select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_User.Emp_Id) as Emp_Name From Set_UserMaster as Set_User where Set_User.IsActive='False' and Set_User.company_id=@Company_Id end if(@Optype=4) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, Set_EmployeeMaster_1.Emp_Name , Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' and Set_User.Company_Id=@Company_Id and Set_EmployeeMaster_1.Field2='False' order by Set_EmployeeMaster_1.Emp_Name end if(@Optype=5) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, (SELECT Emp_Name FROM Set_EmployeeMaster WHERE (Emp_Id = Set_User.Emp_Id)) AS Emp_Name, Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' and Set_User.Company_Id =@company_id and Set_EmployeeMaster_1.Field2='False' end if(@Optype=6) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id AND Company_Id = @Company_Id end if(@Optype=7) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster end if(@Optype=8) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, (SELECT Emp_Name FROM Set_EmployeeMaster WHERE (Emp_Id = Set_User.Emp_Id)) AS Emp_Name, Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' end if(@Optype=9) begin SELECT dbo.Set_UserMaster.*, dbo.Set_RoleMaster.Role_Name, dbo.Set_EmployeeMaster.Emp_Name as EmpName, dbo.Set_EmployeeMaster.Field2 AS EmployeeField2, dbo.Set_EmployeeMaster.IsActive AS EmployeeIsActive FROM dbo.Set_UserMaster left JOIN dbo.Set_RoleMaster ON dbo.Set_UserMaster.Role_Id = dbo.Set_RoleMaster.Role_Id INNER JOIN dbo.Set_EmployeeMaster ON dbo.Set_UserMaster.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id where Set_UserMaster.User_Id=@User_Id and Set_UserMaster.Password=@Password and Set_UserMaster.IsActive='True' and Set_UserMaster.Company_Id=@Company_Id and Set_EmployeeMaster.IsActive='True' and Set_EmployeeMaster.Field2='False' end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Set_UserMaster_SelectRow] @User_Id nvarchar(11), @Password nvarchar(50), @Company_Id int, @Optype Int As Begin if(@Optype=1) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id and Password=@Password and IsActive='True' and Company_Id=@Company_Id end if(@Optype=2) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id end if(@Optype=3) begin Select Set_User.[User_Id], Set_User. [Company_Id], Set_User.[Emp_Id], Set_User. [Role_Id], (select Role_Name from Set_RoleMaster where Role_Id=Set_User.Role_Id) as Role_Name, Set_User.[Password], Set_User.[Is_Modified], Set_User.[Field1], Set_User.[Field2], Set_User.[Field3], Set_User.[Field4], Set_User.[Field5], Set_User.[Field6], Set_User.[Field7], Set_User.[IsActive], Set_User.[CreatedBy], Set_User.[CreatedDate], Set_User.[ModifiedBy], Set_User.[ModifiedDate] , (select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_User.Emp_Id) as Emp_Name From Set_UserMaster as Set_User where Set_User.IsActive='False' and Set_User.company_id=@Company_Id end if(@Optype=4) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, Set_EmployeeMaster_1.Emp_Name , Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' and Set_User.Company_Id=@Company_Id and Set_EmployeeMaster_1.Field2='False' order by Set_EmployeeMaster_1.Emp_Name end if(@Optype=5) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, (SELECT Emp_Name FROM Set_EmployeeMaster WHERE (Emp_Id = Set_User.Emp_Id)) AS Emp_Name, Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' and Set_User.Company_Id =@company_id and Set_EmployeeMaster_1.Field2='False' end if(@Optype=6) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id AND Company_Id = @Company_Id end if(@Optype=7) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster end if(@Optype=8) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, (SELECT Emp_Name FROM Set_EmployeeMaster WHERE (Emp_Id = Set_User.Emp_Id)) AS Emp_Name, Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' end if(@Optype=9) begin SELECT dbo.Set_UserMaster.*, dbo.Set_RoleMaster.Role_Name, dbo.Set_EmployeeMaster.Emp_Name as EmpName, dbo.Set_EmployeeMaster.Field2 AS EmployeeField2, dbo.Set_EmployeeMaster.IsActive AS EmployeeIsActive FROM dbo.Set_UserMaster left JOIN dbo.Set_RoleMaster ON dbo.Set_UserMaster.Role_Id = dbo.Set_RoleMaster.Role_Id INNER JOIN dbo.Set_EmployeeMaster ON dbo.Set_UserMaster.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id where Set_UserMaster.User_Id=@User_Id and Set_UserMaster.Password=@Password and Set_UserMaster.IsActive='True' and Set_UserMaster.Company_Id=@Company_Id and Set_EmployeeMaster.IsActive='True' and Set_EmployeeMaster.Field2='False' end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Set_EmployeeMaster_SelectRow] @Company_Id int, @Emp_Id nvarchar(max), @Emp_Name nvarchar(MAX), @Optype int As Begin if(@Optype=1) Begin Select Set_EmployeeMaster.* ,(select Account_No from Set_Bank_Info where Ref_Id=Set_EmployeeMaster.Emp_Id and Ref_Type='Employee') as Account_No From Set_EmployeeMaster Where [Company_Id] = @Company_Id End ELSE IF (@Optype=2) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=3) Begin Select * , (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation From Set_EmployeeMaster Where [Company_Id] = @Company_Id AND Field2 = 'True' End ELSE IF (@Optype=4) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, (select Account_No from Set_Bank_Info where Set_Bank_Info.Ref_Id=Set_EmployeeMaster.Emp_Id) as Account_No FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (Emp_Id = @Emp_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=5) Begin Select * From Set_EmployeeMaster Where [Company_Id] = @Company_Id and IsActive='True' and Emp_Name=@Emp_Name AND Field2 = 'False' End ELSE IF (@Optype=6) Begin Select Set_EmployeeMaster.*,(select Account_No from Set_Bank_Info where Ref_Id=Emp_Id and Ref_Type='Employee') as Account_No From Set_EmployeeMaster Where [Company_Id] = @Company_Id and Emp_Code = @Emp_Id and IsActive='True' AND Field2 = 'False' End ELSE IF (@Optype=7) Begin SELECT Set_EmployeeMaster.Company_Id, Set_EmployeeMaster.Brand_Id, Set_EmployeeMaster.Location_Id, Set_EmployeeMaster.Emp_Id AS Expr1, Set_EmployeeMaster.Emp_Code, Set_EmployeeMaster.Civil_Id, Set_EmployeeMaster.Emp_Name, Set_EmployeeMaster.Emp_Name_L, Set_EmployeeMaster.Emp_Image, Set_EmployeeMaster.Department_Id, Set_EmployeeMaster.Designation_Id, Set_EmployeeMaster.Religion_Id, Set_EmployeeMaster.Nationality_Id, Set_EmployeeMaster.Qualification_Id, Set_EmployeeMaster.DOB, Set_EmployeeMaster.DOJ, Set_EmployeeMaster.Emp_Type, Set_EmployeeMaster.Termination_Date, Set_EmployeeMaster.Gender, Set_EmployeeMaster.Email_Id, Set_EmployeeMaster.Phone_No, Set_EmployeeMaster.Field1, Set_EmployeeMaster.Field2, Set_EmployeeMaster.Field3, Set_EmployeeMaster.Field4, Set_EmployeeMaster.Field5, Set_EmployeeMaster.Field6, Set_EmployeeMaster.Field7, Set_EmployeeMaster.IsActive, Set_EmployeeMaster.CreatedBy, Set_EmployeeMaster.CreatedDate, Set_EmployeeMaster.ModifiedBy, Set_EmployeeMaster.ModifiedDate, Set_EmployeeInformation.* FROM Set_EmployeeMaster LEFT OUTER JOIN Set_EmployeeInformation ON Set_EmployeeMaster.Emp_Id = Set_EmployeeInformation.Emp_Id WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND Field2 = 'False' and IsActive='True' end ELSE IF (@Optype=8) Begin SELECT Set_EmployeeMaster.Company_Id AS Expr1, Set_EmployeeMaster.Brand_Id, Set_EmployeeMaster.Location_Id, Set_EmployeeMaster.Emp_Id AS Expr2, Set_EmployeeMaster.Emp_Code, Set_EmployeeMaster.Civil_Id, Set_EmployeeMaster.Emp_Name, Set_EmployeeMaster.Emp_Name_L, Set_EmployeeMaster.Emp_Image, Set_EmployeeMaster.Department_Id, Set_EmployeeMaster.Emp_Id, (SELECT Designation FROM Set_DesignationMaster WHERE (Designation_Id = Set_EmployeeMaster.Designation_Id)) AS Designation, Set_EmployeeMaster.Designation_Id, Set_EmployeeMaster.Religion_Id, Set_EmployeeMaster.Nationality_Id, Set_EmployeeMaster.Qualification_Id, Set_EmployeeMaster.DOB, Set_EmployeeMaster.DOJ, Set_EmployeeMaster.Emp_Type, Set_EmployeeMaster.Termination_Date, Set_EmployeeMaster.Gender, Set_EmployeeMaster.Email_Id, Set_EmployeeMaster.Phone_No, Set_EmployeeMaster.Field1 AS Expr3, Set_EmployeeMaster.Field2 AS Expr4, Set_EmployeeMaster.Field3 AS Expr5, Set_EmployeeMaster.Field4 AS Expr6, Set_EmployeeMaster.Field5 AS Expr7, Set_EmployeeMaster.Field6 AS Expr8, Set_EmployeeMaster.Field7 AS Expr9, Set_EmployeeMaster.IsActive AS Expr10, Set_EmployeeMaster.CreatedBy AS Expr11, Set_EmployeeMaster.CreatedDate AS Expr12, Set_EmployeeMaster.ModifiedBy AS Expr13, Set_EmployeeMaster.ModifiedDate AS Expr14, Ser_ReportMaster.Trans_Id, Ser_ReportMaster.Emp_Id AS Expr15, Ser_ReportMaster.Schedule_Days, Ser_ReportMaster.Last_Schedule_Date, Ser_ReportMaster.Field1, Ser_ReportMaster.Field2, Ser_ReportMaster.Field3, Ser_ReportMaster.Field4, Ser_ReportMaster.Field5, Ser_ReportMaster.Field6, Ser_ReportMaster.Field7, Ser_ReportMaster.IsActive, Ser_ReportMaster.CreatedBy, Ser_ReportMaster.CreatedDate, Ser_ReportMaster.ModifiedBy, Ser_ReportMaster.ModifiedDate FROM Set_EmployeeMaster LEFT OUTER JOIN Ser_ReportMaster ON Set_EmployeeMaster.Emp_Id = Ser_ReportMaster.Emp_Id WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND (Set_EmployeeMaster.IsActive = 'True') AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=9) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (SELECT Designation FROM Set_DesignationMaster WHERE (Designation_Id = Set_EmployeeMaster.Designation_Id)) AS Designation, (SELECT Dep_Name FROM Set_DepartmentMaster WHERE (Dep_Id = Set_EmployeeMaster.Department_Id)) AS Department, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND (Set_EmployeeMaster.IsActive = 'True') AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=10) Begin Select distinct Emp_Name,Brand_Id,Location_Id,Emp_Id From Set_EmployeeMaster Where [Company_Id] = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=11) Begin Select Emp_Name,Brand_Id,Location_Id From Set_EmployeeMaster Where Brand_Id = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF(@Optype = 12) BEGIN Select Emp_Name,Brand_Id,Location_Id From Set_EmployeeMaster Where Location_Id = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' END ELSE IF(@Optype = 13) BEGIN select Set_EmployeeMaster.*, Temp.Emp_Id as Payroll_Emp_Id, Temp.Worked_Min_Salary, Temp.Normal_OT_Min_Salary, Temp.Week_Off_OT_Min_Salary, Temp.Holiday_OT_Min_Salary, Temp.Leave_Days_Salary, Temp.Week_Off_Salary, Temp.Holidays_Salary, Temp.Absent_Salary, Temp.Late_Min_Penalty, Temp.Early_Min_Penalty, Temp.Patial_Violation_Penalty, Temp.Employee_PF, Temp.Employee_ESIC, Temp.Year, Temp.Employee_Penalty,Temp.Employee_Claim,Temp.Emlployee_Loan,Temp.Total_Allowance,Temp.Total_Deduction,Temp.Previous_Month_Balance, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select DateName( month , DateAdd( month ,Temp.Month , 0 ) - 1 )) as MonthName from Set_EmployeeMaster left outer join Set_Employee_Parameter on Set_EmployeeMaster.Emp_Id=Set_Employee_Parameter.Emp_Id left outer join Pay_Employe_Month_Temp as Temp on Set_EmployeeMaster.Emp_Id=Temp.Emp_Id where Set_EmployeeMaster.Company_Id=@Company_Id and Set_Employee_Parameter.Company_Id=@Company_Id and Set_EmployeeMaster.IsActive='True' and Set_Employee_Parameter.Field6='True' and set_employeemaster.Emp_Type='On Role' AND Set_EmployeeMaster.Field2 = 'False' END ELSE IF (@Optype=14) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, (select Account_No from Set_Bank_Info where Set_Bank_Info.Ref_Id=Set_EmployeeMaster.Emp_Id) as Account_No FROM Set_EmployeeMaster WHERE (Emp_Id = @Emp_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=15) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate , (Emp_Name+'/('+(select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id)+')/'+Emp_Code ) as EmpDetailInfo FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (IsActive = 'True') AND Field2 = 'False' and Emp_Type='On Role' End ELSE IF (@Optype=16) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) End ELSE IF (@Optype=17) Begin Select *, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation From Set_EmployeeMaster Where [Company_Id] = @Company_Id AND Field2='True' End end ";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Set_EmployeeMaster_SelectRow] @Company_Id int, @Emp_Id nvarchar(max), @Emp_Name nvarchar(MAX), @Optype int As Begin if(@Optype=1) Begin Select Set_EmployeeMaster.* ,(select Account_No from Set_Bank_Info where Ref_Id=Set_EmployeeMaster.Emp_Id and Ref_Type='Employee') as Account_No From Set_EmployeeMaster Where [Company_Id] = @Company_Id End ELSE IF (@Optype=2) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=3) Begin Select * , (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation From Set_EmployeeMaster Where [Company_Id] = @Company_Id AND Field2 = 'True' End ELSE IF (@Optype=4) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, (select Account_No from Set_Bank_Info where Set_Bank_Info.Ref_Id=Set_EmployeeMaster.Emp_Id) as Account_No FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (Emp_Id = @Emp_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=5) Begin Select * From Set_EmployeeMaster Where [Company_Id] = @Company_Id and IsActive='True' and Emp_Name=@Emp_Name AND Field2 = 'False' End ELSE IF (@Optype=6) Begin Select Set_EmployeeMaster.*,(select Account_No from Set_Bank_Info where Ref_Id=Emp_Id and Ref_Type='Employee') as Account_No From Set_EmployeeMaster Where [Company_Id] = @Company_Id and Emp_Code = @Emp_Id and IsActive='True' AND Field2 = 'False' End ELSE IF (@Optype=7) Begin SELECT Set_EmployeeMaster.Company_Id, Set_EmployeeMaster.Brand_Id, Set_EmployeeMaster.Location_Id, Set_EmployeeMaster.Emp_Id AS Expr1, Set_EmployeeMaster.Emp_Code, Set_EmployeeMaster.Civil_Id, Set_EmployeeMaster.Emp_Name, Set_EmployeeMaster.Emp_Name_L, Set_EmployeeMaster.Emp_Image, Set_EmployeeMaster.Department_Id, Set_EmployeeMaster.Designation_Id, Set_EmployeeMaster.Religion_Id, Set_EmployeeMaster.Nationality_Id, Set_EmployeeMaster.Qualification_Id, Set_EmployeeMaster.DOB, Set_EmployeeMaster.DOJ, Set_EmployeeMaster.Emp_Type, Set_EmployeeMaster.Termination_Date, Set_EmployeeMaster.Gender, Set_EmployeeMaster.Email_Id, Set_EmployeeMaster.Phone_No, Set_EmployeeMaster.Field1, Set_EmployeeMaster.Field2, Set_EmployeeMaster.Field3, Set_EmployeeMaster.Field4, Set_EmployeeMaster.Field5, Set_EmployeeMaster.Field6, Set_EmployeeMaster.Field7, Set_EmployeeMaster.IsActive, Set_EmployeeMaster.CreatedBy, Set_EmployeeMaster.CreatedDate, Set_EmployeeMaster.ModifiedBy, Set_EmployeeMaster.ModifiedDate, Set_EmployeeInformation.* FROM Set_EmployeeMaster LEFT OUTER JOIN Set_EmployeeInformation ON Set_EmployeeMaster.Emp_Id = Set_EmployeeInformation.Emp_Id WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND Field2 = 'False' and IsActive='True' end ELSE IF (@Optype=8) Begin SELECT Set_EmployeeMaster.Company_Id AS Expr1, Set_EmployeeMaster.Brand_Id, Set_EmployeeMaster.Location_Id, Set_EmployeeMaster.Emp_Id AS Expr2, Set_EmployeeMaster.Emp_Code, Set_EmployeeMaster.Civil_Id, Set_EmployeeMaster.Emp_Name, Set_EmployeeMaster.Emp_Name_L, Set_EmployeeMaster.Emp_Image, Set_EmployeeMaster.Department_Id, Set_EmployeeMaster.Emp_Id, (SELECT Designation FROM Set_DesignationMaster WHERE (Designation_Id = Set_EmployeeMaster.Designation_Id)) AS Designation, Set_EmployeeMaster.Designation_Id, Set_EmployeeMaster.Religion_Id, Set_EmployeeMaster.Nationality_Id, Set_EmployeeMaster.Qualification_Id, Set_EmployeeMaster.DOB, Set_EmployeeMaster.DOJ, Set_EmployeeMaster.Emp_Type, Set_EmployeeMaster.Termination_Date, Set_EmployeeMaster.Gender, Set_EmployeeMaster.Email_Id, Set_EmployeeMaster.Phone_No, Set_EmployeeMaster.Field1 AS Expr3, Set_EmployeeMaster.Field2 AS Expr4, Set_EmployeeMaster.Field3 AS Expr5, Set_EmployeeMaster.Field4 AS Expr6, Set_EmployeeMaster.Field5 AS Expr7, Set_EmployeeMaster.Field6 AS Expr8, Set_EmployeeMaster.Field7 AS Expr9, Set_EmployeeMaster.IsActive AS Expr10, Set_EmployeeMaster.CreatedBy AS Expr11, Set_EmployeeMaster.CreatedDate AS Expr12, Set_EmployeeMaster.ModifiedBy AS Expr13, Set_EmployeeMaster.ModifiedDate AS Expr14, Ser_ReportMaster.Trans_Id, Ser_ReportMaster.Emp_Id AS Expr15, Ser_ReportMaster.Schedule_Days, Ser_ReportMaster.Last_Schedule_Date, Ser_ReportMaster.Field1, Ser_ReportMaster.Field2, Ser_ReportMaster.Field3, Ser_ReportMaster.Field4, Ser_ReportMaster.Field5, Ser_ReportMaster.Field6, Ser_ReportMaster.Field7, Ser_ReportMaster.IsActive, Ser_ReportMaster.CreatedBy, Ser_ReportMaster.CreatedDate, Ser_ReportMaster.ModifiedBy, Ser_ReportMaster.ModifiedDate FROM Set_EmployeeMaster LEFT OUTER JOIN Ser_ReportMaster ON Set_EmployeeMaster.Emp_Id = Ser_ReportMaster.Emp_Id WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND (Set_EmployeeMaster.IsActive = 'True') AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=9) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (SELECT Designation FROM Set_DesignationMaster WHERE (Designation_Id = Set_EmployeeMaster.Designation_Id)) AS Designation, (SELECT Dep_Name FROM Set_DepartmentMaster WHERE (Dep_Id = Set_EmployeeMaster.Department_Id)) AS Department, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND (Set_EmployeeMaster.IsActive = 'True') AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=10) Begin Select distinct Emp_Name,Brand_Id,Location_Id,Emp_Id From Set_EmployeeMaster Where [Company_Id] = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=11) Begin Select Emp_Name,Brand_Id,Location_Id From Set_EmployeeMaster Where Brand_Id = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF(@Optype = 12) BEGIN Select Emp_Name,Brand_Id,Location_Id From Set_EmployeeMaster Where Location_Id = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' END ELSE IF(@Optype = 13) BEGIN select Set_EmployeeMaster.*, Temp.Emp_Id as Payroll_Emp_Id, Temp.Worked_Min_Salary, Temp.Normal_OT_Min_Salary, Temp.Week_Off_OT_Min_Salary, Temp.Holiday_OT_Min_Salary, Temp.Leave_Days_Salary, Temp.Week_Off_Salary, Temp.Holidays_Salary, Temp.Absent_Salary, Temp.Late_Min_Penalty, Temp.Early_Min_Penalty, Temp.Patial_Violation_Penalty, Temp.Employee_PF, Temp.Employee_ESIC, Temp.Year, Temp.Employee_Penalty,Temp.Employee_Claim,Temp.Emlployee_Loan,Temp.Total_Allowance,Temp.Total_Deduction,Temp.Previous_Month_Balance, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select DateName( month , DateAdd( month ,Temp.Month , 0 ) - 1 )) as MonthName from Set_EmployeeMaster left outer join Set_Employee_Parameter on Set_EmployeeMaster.Emp_Id=Set_Employee_Parameter.Emp_Id left outer join Pay_Employe_Month_Temp as Temp on Set_EmployeeMaster.Emp_Id=Temp.Emp_Id where Set_EmployeeMaster.Company_Id=@Company_Id and Set_Employee_Parameter.Company_Id=@Company_Id and Set_EmployeeMaster.IsActive='True' and Set_Employee_Parameter.Field6='True' and set_employeemaster.Emp_Type='On Role' AND Set_EmployeeMaster.Field2 = 'False' END ELSE IF (@Optype=14) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, (select Account_No from Set_Bank_Info where Set_Bank_Info.Ref_Id=Set_EmployeeMaster.Emp_Id) as Account_No FROM Set_EmployeeMaster WHERE (Emp_Id = @Emp_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=15) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate , (Emp_Name+'/('+(select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id)+')/'+Emp_Code ) as EmpDetailInfo FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (IsActive = 'True') AND Field2 = 'False' and Emp_Type='On Role' End ELSE IF (@Optype=16) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) End ELSE IF (@Optype=17) Begin Select *, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation From Set_EmployeeMaster Where [Company_Id] = @Company_Id AND Field2='True' End end ";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Set_DepartmentMaster_SelectRow] @Dep_Id int, @Dep_Name nvarchar(MAX), @Optype int As Begin if(@Optype=1) Begin Select * From Set_DepartmentMaster End ELSE IF (@Optype=2) Begin SELECT Set_DepartmentMaster.Dep_Id, Set_DepartmentMaster.Parent_Id, Set_DepartmentMaster.Dep_Code, Set_DepartmentMaster.Dep_Name, Set_DepartmentMaster.Dep_Name_L, Set_DepartmentMaster.Field1, Set_DepartmentMaster.Field2, Set_DepartmentMaster.Field3, Set_DepartmentMaster.Field4, Set_DepartmentMaster.Field5, Set_DepartmentMaster.Field6, Set_DepartmentMaster.Field7, Set_DepartmentMaster.IsActive, Set_DepartmentMaster.CreatedBy, Set_DepartmentMaster.CreatedDate, Set_DepartmentMaster.ModifiedBy, Set_DepartmentMaster.ModifiedDate, Set_DepartmentMaster_1.Dep_Name AS ParentDepartment, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.ModifiedBy)) as Modified_User FROM Set_DepartmentMaster LEFT OUTER JOIN Set_DepartmentMaster AS Set_DepartmentMaster_1 ON Set_DepartmentMaster.Parent_Id = Set_DepartmentMaster_1.Dep_Id WHERE (Set_DepartmentMaster.IsActive = 'True') order by CreatedDate desc End ELSE IF (@Optype=3) Begin SELECT Set_DepartmentMaster.Dep_Id, Set_DepartmentMaster.Parent_Id, Set_DepartmentMaster.Dep_Code, Set_DepartmentMaster.Dep_Name, Set_DepartmentMaster.Dep_Name_L, Set_DepartmentMaster.Field1, Set_DepartmentMaster.Field2, Set_DepartmentMaster.Field3, Set_DepartmentMaster.Field4, Set_DepartmentMaster.Field5, Set_DepartmentMaster.Field6, Set_DepartmentMaster.Field7, Set_DepartmentMaster.IsActive, Set_DepartmentMaster.CreatedBy, Set_DepartmentMaster.CreatedDate, Set_DepartmentMaster.ModifiedBy, Set_DepartmentMaster.ModifiedDate, Set_DepartmentMaster_1.Dep_Name AS ParentDepartment, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.ModifiedBy)) as Modified_User FROM Set_DepartmentMaster left Outer JOIN Set_DepartmentMaster AS Set_DepartmentMaster_1 ON Set_DepartmentMaster.Parent_Id = Set_DepartmentMaster_1.Dep_Id WHERE (Set_DepartmentMaster.IsActive = 'False') order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select * From Set_DepartmentMaster Where [Dep_Id] = @Dep_Id and IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=5) Begin Select * From Set_DepartmentMaster Where IsActive='True' and Dep_Name=@Dep_Name End ELSE IF (@Optype=6) Begin select Set_DepartmentMaster.Dep_Id,Set_DepartmentMaster.Dep_Name from Set_DepartmentMaster where Set_DepartmentMaster.Parent_Id=@Dep_Id order by Set_DepartmentMaster.Dep_Name End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Set_DepartmentMaster_SelectRow] @Dep_Id int, @Dep_Name nvarchar(MAX), @Optype int As Begin if(@Optype=1) Begin Select * From Set_DepartmentMaster End ELSE IF (@Optype=2) Begin SELECT Set_DepartmentMaster.Dep_Id, Set_DepartmentMaster.Parent_Id, Set_DepartmentMaster.Dep_Code, Set_DepartmentMaster.Dep_Name, Set_DepartmentMaster.Dep_Name_L, Set_DepartmentMaster.Field1, Set_DepartmentMaster.Field2, Set_DepartmentMaster.Field3, Set_DepartmentMaster.Field4, Set_DepartmentMaster.Field5, Set_DepartmentMaster.Field6, Set_DepartmentMaster.Field7, Set_DepartmentMaster.IsActive, Set_DepartmentMaster.CreatedBy, Set_DepartmentMaster.CreatedDate, Set_DepartmentMaster.ModifiedBy, Set_DepartmentMaster.ModifiedDate, Set_DepartmentMaster_1.Dep_Name AS ParentDepartment, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.ModifiedBy)) as Modified_User FROM Set_DepartmentMaster LEFT OUTER JOIN Set_DepartmentMaster AS Set_DepartmentMaster_1 ON Set_DepartmentMaster.Parent_Id = Set_DepartmentMaster_1.Dep_Id WHERE (Set_DepartmentMaster.IsActive = 'True') order by CreatedDate desc End ELSE IF (@Optype=3) Begin SELECT Set_DepartmentMaster.Dep_Id, Set_DepartmentMaster.Parent_Id, Set_DepartmentMaster.Dep_Code, Set_DepartmentMaster.Dep_Name, Set_DepartmentMaster.Dep_Name_L, Set_DepartmentMaster.Field1, Set_DepartmentMaster.Field2, Set_DepartmentMaster.Field3, Set_DepartmentMaster.Field4, Set_DepartmentMaster.Field5, Set_DepartmentMaster.Field6, Set_DepartmentMaster.Field7, Set_DepartmentMaster.IsActive, Set_DepartmentMaster.CreatedBy, Set_DepartmentMaster.CreatedDate, Set_DepartmentMaster.ModifiedBy, Set_DepartmentMaster.ModifiedDate, Set_DepartmentMaster_1.Dep_Name AS ParentDepartment, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.ModifiedBy)) as Modified_User FROM Set_DepartmentMaster left Outer JOIN Set_DepartmentMaster AS Set_DepartmentMaster_1 ON Set_DepartmentMaster.Parent_Id = Set_DepartmentMaster_1.Dep_Id WHERE (Set_DepartmentMaster.IsActive = 'False') order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select * From Set_DepartmentMaster Where [Dep_Id] = @Dep_Id and IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=5) Begin Select * From Set_DepartmentMaster Where IsActive='True' and Dep_Name=@Dep_Name End ELSE IF (@Optype=6) Begin select Set_DepartmentMaster.Dep_Id,Set_DepartmentMaster.Dep_Name from Set_DepartmentMaster where Set_DepartmentMaster.Parent_Id=@Dep_Id order by Set_DepartmentMaster.Dep_Name End End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Set_DepartmentMaster_RowStatus] @Dep_Id int, @IsActive bit, @ModifiedBy nvarchar(11), @ModifiedDate datetime, @Optype Int, @ReferenceID int output As Begin if(@Optype=0) begin Update Set_DepartmentMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Dep_Id] = @Dep_Id end if(@Optype=1) begin Update Set_DepartmentMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Parent_Id] = @Dep_Id end select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Set_DepartmentMaster_RowStatus] @Dep_Id int, @IsActive bit, @ModifiedBy nvarchar(11), @ModifiedDate datetime, @Optype Int, @ReferenceID int output As Begin if(@Optype=0) begin Update Set_DepartmentMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Dep_Id] = @Dep_Id end if(@Optype=1) begin Update Set_DepartmentMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Parent_Id] = @Dep_Id end select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_IT_ModuleMaster_SelectRow] @Module_Id int, @Module_Name nvarchar(255), @Optype int As Begin if(@Optype=1) Begin Select * From IT_ModuleMaster End ELSE IF (@Optype=2) Begin SELECT IT_ModuleMaster.Module_Id, IT_ModuleMaster.Module_Name, IT_ModuleMaster.Module_Name_L, IT_ModuleMaster.Sequence_No, IT_ModuleMaster.Module_Image, IT_ModuleMaster.Module_Banner, IT_ModuleMaster.DashBoard_Url, IT_ModuleMaster.IsActive, IT_ModuleMaster.CreatedBy, IT_ModuleMaster.CreatedDate, IT_ModuleMaster.ModifiedBy, IT_ModuleMaster.ModifiedDate,IT_ModuleMaster.DashBoardIconUrl,IT_ModuleMaster.Field1,IT_ModuleMaster.Field2,IT_ModuleMaster.Field3,IT_ModuleMaster.Field4,IT_ModuleMaster.Field5 ,IT_ModuleMaster.Field6,IT_ModuleMaster.Field7, (select Application_Name from IT_ApplicationMaster where Application_Id in (Select Param_Value From Sys_Parameter Where Param_Name = 'Application_Id')) as Application_Name , case when IT_ModuleMaster.Field1='0' then IT_ModuleMaster.Module_Id else IT_ModuleMaster.Field1 end as ParentModuleId, case when IT_ModuleMaster.Field1='0' then IT_ModuleMaster.Module_Name else (select IM.Module_Name from IT_ModuleMaster as IM where IM.Module_Id=IT_ModuleMaster.Field1) end as ParentModuleName FROM IT_ModuleMaster where IT_ModuleMaster.IsActive='True' End ELSE IF (@Optype=3) Begin Select * From IT_ModuleMaster where IsActive='false' End ELSE IF (@Optype=4) Begin Select * From IT_ModuleMaster where [Module_Id] = @Module_Id and IsActive='True' End ELSE IF (@Optype=5) Begin Select * From IT_ModuleMaster Where IsActive='True' and Module_Name=@Module_Name End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_IT_ModuleMaster_SelectRow] @Module_Id int, @Module_Name nvarchar(255), @Optype int As Begin if(@Optype=1) Begin Select * From IT_ModuleMaster End ELSE IF (@Optype=2) Begin SELECT IT_ModuleMaster.Module_Id, IT_ModuleMaster.Module_Name, IT_ModuleMaster.Module_Name_L, IT_ModuleMaster.Sequence_No, IT_ModuleMaster.Module_Image, IT_ModuleMaster.Module_Banner, IT_ModuleMaster.DashBoard_Url, IT_ModuleMaster.IsActive, IT_ModuleMaster.CreatedBy, IT_ModuleMaster.CreatedDate, IT_ModuleMaster.ModifiedBy, IT_ModuleMaster.ModifiedDate,IT_ModuleMaster.DashBoardIconUrl,IT_ModuleMaster.Field1,IT_ModuleMaster.Field2,IT_ModuleMaster.Field3,IT_ModuleMaster.Field4,IT_ModuleMaster.Field5 ,IT_ModuleMaster.Field6,IT_ModuleMaster.Field7, (select Application_Name from IT_ApplicationMaster where Application_Id in (Select Param_Value From Sys_Parameter Where Param_Name = 'Application_Id')) as Application_Name , case when IT_ModuleMaster.Field1='0' then IT_ModuleMaster.Module_Id else IT_ModuleMaster.Field1 end as ParentModuleId, case when IT_ModuleMaster.Field1='0' then IT_ModuleMaster.Module_Name else (select IM.Module_Name from IT_ModuleMaster as IM where IM.Module_Id=IT_ModuleMaster.Field1) end as ParentModuleName FROM IT_ModuleMaster where IT_ModuleMaster.IsActive='True' End ELSE IF (@Optype=3) Begin Select * From IT_ModuleMaster where IsActive='false' End ELSE IF (@Optype=4) Begin Select * From IT_ModuleMaster where [Module_Id] = @Module_Id and IsActive='True' End ELSE IF (@Optype=5) Begin Select * From IT_ModuleMaster Where IsActive='True' and Module_Name=@Module_Name End End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_StockDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @optype int As Begin if(@optype=5) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id end if(@optype=1) begin Select [Company_Id], [Brand_Id], [Location_Id], [ProductId], [OpeningBalance], [RackID], [Quantity], [Minimum_Qty], [Maximum_Qty], [ReserveQty], [DamageQty], [BlockedQty], [OrderQty], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal From Inv_StockDetail end if(@optype=2) begin SELECT Set_LocationMaster.Location_Name, Inv_StockDetail.* , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail INNER JOIN Set_LocationMaster ON Inv_StockDetail.Location_Id = Set_LocationMaster.Location_Id where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.ProductId=@ProductId end if(@optype=3) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id end if(@optype=4) begin Select Inv_Product_CompanyBrand.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, ( Case when Inv_StockDetail.ProductId<>'' then 0 else 1 end )as InStock,Inv_StockDetail.Quantity as SysQty , Inv_StockDetail.OpeningBalance as Quantity ,Inv_StockDetail.Location_Id,Inv_StockDetail.Field1 as UnitPrice, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , Inv_ProductMaster.UnitId , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , case when Inv_StockDetail.Quantity is null then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyVisibleStatus, case when Inv_StockDetail.Quantity is null then CAST ('False' as Bit) else CAST ('True' as Bit) end as lblQtyVisibleStatus , case when Inv_StockDetail.Quantity is null And Inv_ProductMaster.MaintainStock='NM' then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyEnableStatus, case when Inv_StockDetail.Quantity is not null then CAST ('False' as Bit) when Inv_StockDetail.Quantity is null and Inv_ProductMaster.MaintainStock='NM' then CAST ('False' as Bit) else CAST ('True' as Bit) end as lnkserialbtnVisibleStatus , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal from Inv_Product_CompanyBrand inner join Inv_ProductMaster on Inv_Product_CompanyBrand.ProductId=Inv_ProductMaster.ProductId and Inv_ProductMaster.IsActive='True' left Join Inv_StockDetail on Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_Product_CompanyBrand.ProductId=Inv_StockDetail.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and Inv_ProductMaster.ItemType='S' and Inv_ProductMaster.Field1=' ' and Inv_ProductMaster.Field3='True' end if(@optype=6) begin Select Inv_StockDetail.Field2,Inv_StockDetail.Quantity from Inv_StockDetail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@optype=7) begin Select Inv_StockDetail.ProductId from Inv_StockDetail where ProductId=@ProductId end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_StockDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @optype int As Begin if(@optype=5) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id end if(@optype=1) begin Select [Company_Id], [Brand_Id], [Location_Id], [ProductId], [OpeningBalance], [RackID], [Quantity], [Minimum_Qty], [Maximum_Qty], [ReserveQty], [DamageQty], [BlockedQty], [OrderQty], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal From Inv_StockDetail end if(@optype=2) begin SELECT Set_LocationMaster.Location_Name, Inv_StockDetail.* , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail INNER JOIN Set_LocationMaster ON Inv_StockDetail.Location_Id = Set_LocationMaster.Location_Id where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.ProductId=@ProductId end if(@optype=3) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id end if(@optype=4) begin Select Inv_Product_CompanyBrand.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, ( Case when Inv_StockDetail.ProductId<>'' then 0 else 1 end )as InStock,Inv_StockDetail.Quantity as SysQty , Inv_StockDetail.OpeningBalance as Quantity ,Inv_StockDetail.Location_Id,Inv_StockDetail.Field1 as UnitPrice, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , Inv_ProductMaster.UnitId , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , case when Inv_StockDetail.Quantity is null then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyVisibleStatus, case when Inv_StockDetail.Quantity is null then CAST ('False' as Bit) else CAST ('True' as Bit) end as lblQtyVisibleStatus , case when Inv_StockDetail.Quantity is null And Inv_ProductMaster.MaintainStock='NM' then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyEnableStatus, case when Inv_StockDetail.Quantity is not null then CAST ('False' as Bit) when Inv_StockDetail.Quantity is null and Inv_ProductMaster.MaintainStock='NM' then CAST ('False' as Bit) else CAST ('True' as Bit) end as lnkserialbtnVisibleStatus , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal from Inv_Product_CompanyBrand inner join Inv_ProductMaster on Inv_Product_CompanyBrand.ProductId=Inv_ProductMaster.ProductId and Inv_ProductMaster.IsActive='True' left Join Inv_StockDetail on Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_Product_CompanyBrand.ProductId=Inv_StockDetail.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and Inv_ProductMaster.ItemType='S' and Inv_ProductMaster.Field1=' ' and Inv_ProductMaster.Field3='True' end if(@optype=6) begin Select Inv_StockDetail.Field2,Inv_StockDetail.Quantity from Inv_StockDetail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@optype=7) begin Select Inv_StockDetail.ProductId from Inv_StockDetail where ProductId=@ProductId end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_StockBatchMaster_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @SerialNo nvarchar(255), @TransType nvarchar(2), @TransTypeId int, @OpType int As Begin if (@OpType=0) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id end if(@OpType=1) begin select Inv_ProductMaster.ProductCode as ProductId,Inv_ProductMaster.EProductName as ProductName,Inv_UnitMaster.Unit_Name as Unit, case when Inv_StockBatchMaster.TransType='SI' THEN 'Sales Invoice' when Inv_StockBatchMaster.TransType='SR' THEN 'Sales Return' when Inv_StockBatchMaster.TransType='PR' THEN 'Purchase Return' when Inv_StockBatchMaster.TransType='TI' THEN 'Transfer IN' when Inv_StockBatchMaster.TransType='TO' THEN 'Transfer Out' when Inv_StockBatchMaster.TransType='PG' THEN 'Purchase Goods' when Inv_StockBatchMaster.TransType='SA' THEN 'Stock Adjustment' when Inv_StockBatchMaster.TransType='OP' THEN 'Opening Stock' when Inv_StockBatchMaster.TransType='FO' THEN 'Production Out' when Inv_StockBatchMaster.TransType='FI' THEN 'Production In' when Inv_StockBatchMaster.TransType='FR' THEN 'Production Return' when Inv_StockBatchMaster.TransType='DV' THEN 'Delivery Voucher' end as RefferenceType , Case When Inv_StockBatchMaster.TransType='SI' Then cast((Select Invoice_No From Inv_SalesInvoiceHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SR' Then Cast((Select Return_No From Inv_SalesReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='PR' Then Cast((Select PReturn_No From Inv_PurchaseReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TI' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TO' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SA' Then Cast((Select VoucherNo From Inv_AdjustHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='PG' THEN Cast((Select InvoiceNo From dbo.Inv_PurchaseInvoiceHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='FO' or Inv_StockBatchMaster.TransType='FI' or Inv_StockBatchMaster.TransType='FR' THEN Cast((Select Inv_Production_Process.Job_No From dbo.Inv_Production_Process where Inv_Production_Process.Id=Inv_StockBatchMaster. TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='DV' THEN Cast((Select Inv_SalesDeliveryVoucher_Header.Voucher_No From dbo.Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) end as RefferenceId , case when Inv_StockBatchMaster.InOut='o' THEN 'Out' ELSE 'In' end as Status, Inv_StockBatchMaster.Quantity , REPLACE(CONVERT(CHAR(11), Inv_StockBatchMaster.CreatedDate, 106), ' ', '-') as CreatedDate, Inv_StockBatchMaster.SerialNo from Inv_StockBatchMaster inner join Inv_ProductMaster on Inv_StockBatchMaster.ProductId=Inv_ProductMaster.ProductId inner join Inv_UnitMaster on Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId and Inv_StockBatchMaster.Company_Id=@Company_Id and Inv_StockBatchMaster.Brand_Id=@Brand_Id and Inv_StockBatchMaster.Location_Id=@Location_Id end if(@OpType=2) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , CONVERT(VARCHAR(11),Inv_StockBatchMaster.CreatedDate,106) as VoucherDate, (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName , case when Inv_StockBatchMaster.TransType='SI' THEN 'Sales Invoice' when Inv_StockBatchMaster.TransType='SR' THEN 'Sales Return' when Inv_StockBatchMaster.TransType='PR' THEN 'Purchase Return' when Inv_StockBatchMaster.TransType='TI' THEN 'Transfer IN' when Inv_StockBatchMaster.TransType='TO' THEN 'Transfer Out' when Inv_StockBatchMaster.TransType='PG' THEN 'Purchase Goods' when Inv_StockBatchMaster.TransType='SA' THEN 'Stock Adjustment' when Inv_StockBatchMaster.TransType='OP' THEN 'Opening Stock' when Inv_StockBatchMaster.TransType='FO' THEN 'Production Out' when Inv_StockBatchMaster.TransType='FI' THEN 'Production In' when Inv_StockBatchMaster.TransType='FR' THEN 'Production Return' when Inv_StockBatchMaster.TransType='DV' THEN 'Delivery Voucher' end as RefferenceType , Case When Inv_StockBatchMaster.TransType='SI' Then cast((Select Invoice_No From Inv_SalesInvoiceHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SR' Then Cast((Select Return_No From Inv_SalesReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='PR' Then Cast((Select PReturn_No From Inv_PurchaseReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TI' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TO' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SA' Then Cast((Select VoucherNo From Inv_AdjustHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='PG' THEN Cast((Select InvoiceNo From dbo.Inv_PurchaseInvoiceHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='FO' or Inv_StockBatchMaster.TransType='FI' or Inv_StockBatchMaster.TransType='FR' THEN Cast((Select Inv_Production_Process.Job_No From dbo.Inv_Production_Process where Inv_Production_Process.Id=Inv_StockBatchMaster. TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='DV' THEN Cast((Select Inv_SalesDeliveryVoucher_Header.Voucher_No From dbo.Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) end as RefferenceId , case when Inv_StockBatchMaster.InOut='o' THEN 'Out' ELSE 'In' end as Status, case when Inv_StockBatchMaster.InOut='I' THEN inv_stockbatchmaster.Quantity else 0 end as InQty, case when Inv_StockBatchMaster.InOut='O' THEN inv_stockbatchmaster.Quantity else 0 end as OutQty, ((select ISNULL( SUM( isnull(sb.Quantity,0)),0) from Inv_StockBatchMaster as SB where sb.Company_Id=Inv_StockBatchMaster.Company_Id and sb.Brand_Id=Inv_StockBatchMaster.Brand_Id and sb.Location_Id=Inv_StockBatchMaster.Location_Id and sb.ProductId=Inv_StockBatchMaster.ProductId and sb.InOut='I' and SB.Trans_Id<= Inv_StockBatchMaster.Trans_Id)-(select ISNULL( SUM(isnull(sb.Quantity,0)),0) from Inv_StockBatchMaster as SB where sb.Company_Id=Inv_StockBatchMaster.Company_Id and sb.Brand_Id=Inv_StockBatchMaster.Brand_Id and sb.Location_Id=Inv_StockBatchMaster.Location_Id and sb.ProductId=Inv_StockBatchMaster.ProductId and sb.InOut='O' and SB.Trans_Id<= Inv_StockBatchMaster.Trans_Id)) as BalanceQty, (select substring(Set_LocationMaster.Location_Name,0,15)+'..' from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockBatchMaster.Location_Id) as Location , case when(TransType='Dv') then (select Ems_ContactMaster.Name from Inv_SalesDeliveryVoucher_Header inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId ) when(TransType='SI' or TransType='SR') then (select Ems_ContactMaster.Name from Inv_SalesInvoiceHeader inner join Ems_ContactMaster on Inv_SalesInvoiceHeader.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_SalesInvoiceHeader.Trans_Id=Inv_StockBatchMaster.TransTypeId ) when(TransType='PG') then (select Ems_ContactMaster.Name from Inv_PurchaseInvoiceHeader inner join Ems_ContactMaster on Inv_PurchaseInvoiceHeader.SupplierId=Ems_ContactMaster.Trans_Id where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) when(TransType='FI' or TransType='FO') then (select Ems_ContactMaster.Name from Inv_Production_Process inner join Inv_ProductionRequestHeader on Inv_Production_Process.Ref_Production_Req_No=Inv_ProductionRequestHeader.Trans_Id inner join Ems_ContactMaster on Inv_ProductionRequestHeader.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_Production_Process.Id=Inv_StockBatchMaster.TransTypeId ) end as ContactName, case when(TransType='PG') then (select Inv_PurchaseInvoiceHeader.SupInvoiceNo from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) else '0' end as Supplier_Invoice_No , case when(TransType='PG') then (select CONVERT(VARCHAR(11),Inv_PurchaseInvoiceHeader.SupInvoiceDate,106) from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) else ' ' end as Supplier_Invoice_Date From Inv_StockBatchMaster where ProductId=@ProductId order by Inv_StockBatchMaster.Trans_Id end if(@OpType=3) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@OpType=4) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where ProductId=@ProductId and SerialNo=@SerialNo order by Trans_Id desc end if(@OpType=5) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and TransType=@TransType and TransTypeId=@TransTypeId end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_StockBatchMaster_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @SerialNo nvarchar(255), @TransType nvarchar(2), @TransTypeId int, @OpType int As Begin if (@OpType=0) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id end if(@OpType=1) begin select Inv_ProductMaster.ProductCode as ProductId,Inv_ProductMaster.EProductName as ProductName,Inv_UnitMaster.Unit_Name as Unit, case when Inv_StockBatchMaster.TransType='SI' THEN 'Sales Invoice' when Inv_StockBatchMaster.TransType='SR' THEN 'Sales Return' when Inv_StockBatchMaster.TransType='PR' THEN 'Purchase Return' when Inv_StockBatchMaster.TransType='TI' THEN 'Transfer IN' when Inv_StockBatchMaster.TransType='TO' THEN 'Transfer Out' when Inv_StockBatchMaster.TransType='PG' THEN 'Purchase Goods' when Inv_StockBatchMaster.TransType='SA' THEN 'Stock Adjustment' when Inv_StockBatchMaster.TransType='OP' THEN 'Opening Stock' when Inv_StockBatchMaster.TransType='FO' THEN 'Production Out' when Inv_StockBatchMaster.TransType='FI' THEN 'Production In' when Inv_StockBatchMaster.TransType='FR' THEN 'Production Return' when Inv_StockBatchMaster.TransType='DV' THEN 'Delivery Voucher' end as RefferenceType , Case When Inv_StockBatchMaster.TransType='SI' Then cast((Select Invoice_No From Inv_SalesInvoiceHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SR' Then Cast((Select Return_No From Inv_SalesReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='PR' Then Cast((Select PReturn_No From Inv_PurchaseReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TI' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TO' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SA' Then Cast((Select VoucherNo From Inv_AdjustHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='PG' THEN Cast((Select InvoiceNo From dbo.Inv_PurchaseInvoiceHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='FO' or Inv_StockBatchMaster.TransType='FI' or Inv_StockBatchMaster.TransType='FR' THEN Cast((Select Inv_Production_Process.Job_No From dbo.Inv_Production_Process where Inv_Production_Process.Id=Inv_StockBatchMaster. TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='DV' THEN Cast((Select Inv_SalesDeliveryVoucher_Header.Voucher_No From dbo.Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) end as RefferenceId , case when Inv_StockBatchMaster.InOut='o' THEN 'Out' ELSE 'In' end as Status, Inv_StockBatchMaster.Quantity , REPLACE(CONVERT(CHAR(11), Inv_StockBatchMaster.CreatedDate, 106), ' ', '-') as CreatedDate, Inv_StockBatchMaster.SerialNo from Inv_StockBatchMaster inner join Inv_ProductMaster on Inv_StockBatchMaster.ProductId=Inv_ProductMaster.ProductId inner join Inv_UnitMaster on Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId and Inv_StockBatchMaster.Company_Id=@Company_Id and Inv_StockBatchMaster.Brand_Id=@Brand_Id and Inv_StockBatchMaster.Location_Id=@Location_Id end if(@OpType=2) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , CONVERT(VARCHAR(11),Inv_StockBatchMaster.CreatedDate,106) as VoucherDate, (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName , case when Inv_StockBatchMaster.TransType='SI' THEN 'Sales Invoice' when Inv_StockBatchMaster.TransType='SR' THEN 'Sales Return' when Inv_StockBatchMaster.TransType='PR' THEN 'Purchase Return' when Inv_StockBatchMaster.TransType='TI' THEN 'Transfer IN' when Inv_StockBatchMaster.TransType='TO' THEN 'Transfer Out' when Inv_StockBatchMaster.TransType='PG' THEN 'Purchase Goods' when Inv_StockBatchMaster.TransType='SA' THEN 'Stock Adjustment' when Inv_StockBatchMaster.TransType='OP' THEN 'Opening Stock' when Inv_StockBatchMaster.TransType='FO' THEN 'Production Out' when Inv_StockBatchMaster.TransType='FI' THEN 'Production In' when Inv_StockBatchMaster.TransType='FR' THEN 'Production Return' when Inv_StockBatchMaster.TransType='DV' THEN 'Delivery Voucher' end as RefferenceType , Case When Inv_StockBatchMaster.TransType='SI' Then cast((Select Invoice_No From Inv_SalesInvoiceHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SR' Then Cast((Select Return_No From Inv_SalesReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='PR' Then Cast((Select PReturn_No From Inv_PurchaseReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TI' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TO' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SA' Then Cast((Select VoucherNo From Inv_AdjustHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='PG' THEN Cast((Select InvoiceNo From dbo.Inv_PurchaseInvoiceHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='FO' or Inv_StockBatchMaster.TransType='FI' or Inv_StockBatchMaster.TransType='FR' THEN Cast((Select Inv_Production_Process.Job_No From dbo.Inv_Production_Process where Inv_Production_Process.Id=Inv_StockBatchMaster. TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='DV' THEN Cast((Select Inv_SalesDeliveryVoucher_Header.Voucher_No From dbo.Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) end as RefferenceId , case when Inv_StockBatchMaster.InOut='o' THEN 'Out' ELSE 'In' end as Status, case when Inv_StockBatchMaster.InOut='I' THEN inv_stockbatchmaster.Quantity else 0 end as InQty, case when Inv_StockBatchMaster.InOut='O' THEN inv_stockbatchmaster.Quantity else 0 end as OutQty, ((select ISNULL( SUM( isnull(sb.Quantity,0)),0) from Inv_StockBatchMaster as SB where sb.Company_Id=Inv_StockBatchMaster.Company_Id and sb.Brand_Id=Inv_StockBatchMaster.Brand_Id and sb.Location_Id=Inv_StockBatchMaster.Location_Id and sb.ProductId=Inv_StockBatchMaster.ProductId and sb.InOut='I' and SB.Trans_Id<= Inv_StockBatchMaster.Trans_Id)-(select ISNULL( SUM(isnull(sb.Quantity,0)),0) from Inv_StockBatchMaster as SB where sb.Company_Id=Inv_StockBatchMaster.Company_Id and sb.Brand_Id=Inv_StockBatchMaster.Brand_Id and sb.Location_Id=Inv_StockBatchMaster.Location_Id and sb.ProductId=Inv_StockBatchMaster.ProductId and sb.InOut='O' and SB.Trans_Id<= Inv_StockBatchMaster.Trans_Id)) as BalanceQty, (select substring(Set_LocationMaster.Location_Name,0,15)+'..' from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockBatchMaster.Location_Id) as Location , case when(TransType='Dv') then (select Ems_ContactMaster.Name from Inv_SalesDeliveryVoucher_Header inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId ) when(TransType='SI' or TransType='SR') then (select Ems_ContactMaster.Name from Inv_SalesInvoiceHeader inner join Ems_ContactMaster on Inv_SalesInvoiceHeader.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_SalesInvoiceHeader.Trans_Id=Inv_StockBatchMaster.TransTypeId ) when(TransType='PG') then (select Ems_ContactMaster.Name from Inv_PurchaseInvoiceHeader inner join Ems_ContactMaster on Inv_PurchaseInvoiceHeader.SupplierId=Ems_ContactMaster.Trans_Id where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) when(TransType='FI' or TransType='FO') then (select Ems_ContactMaster.Name from Inv_Production_Process inner join Inv_ProductionRequestHeader on Inv_Production_Process.Ref_Production_Req_No=Inv_ProductionRequestHeader.Trans_Id inner join Ems_ContactMaster on Inv_ProductionRequestHeader.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_Production_Process.Id=Inv_StockBatchMaster.TransTypeId ) end as ContactName, case when(TransType='PG') then (select Inv_PurchaseInvoiceHeader.SupInvoiceNo from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) else '0' end as Supplier_Invoice_No , case when(TransType='PG') then (select CONVERT(VARCHAR(11),Inv_PurchaseInvoiceHeader.SupInvoiceDate,106) from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) else ' ' end as Supplier_Invoice_Date From Inv_StockBatchMaster where ProductId=@ProductId order by Inv_StockBatchMaster.Trans_Id end if(@OpType=3) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@OpType=4) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where ProductId=@ProductId and SerialNo=@SerialNo order by Trans_Id desc end if(@OpType=5) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and TransType=@TransType and TransTypeId=@TransTypeId end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_SalesReturnHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Optype int As Begin if(@Optype=1) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id end if(@Optype=2) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Ems_ContactMaster.Name as CustomerName ,Set_EmployeeMaster.Emp_Name as SalesPerson_Name ,case when SH.SIFromTransType='S' then 'By Sales Order' end as Transtype , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.ModifiedBy) as ModifiedUser FROM [dbo].[Inv_SalesReturnHeader] as SH inner join Ems_ContactMaster on SH.Customer_Id=Ems_ContactMaster.Trans_Id inner join Set_EmployeeMaster on SH.SalesPerson_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='True' end if(@Optype=3) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Ems_ContactMaster.Name as CustomerName ,Set_EmployeeMaster.Emp_Name as SalesPerson_Name ,case when SH.SIFromTransType='S' then 'By Sales Order' end as Transtype , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.ModifiedBy) as ModifiedUser FROM [dbo].[Inv_SalesReturnHeader] as SH inner join Ems_ContactMaster on SH.Customer_Id=Ems_ContactMaster.Trans_Id inner join Set_EmployeeMaster on SH.SalesPerson_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='False' end if(@Optype=4) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.Trans_Id=@Trans_Id end if(@Optype=5) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.Invoice_Id=@Trans_Id and SH.Post='False' and sh.IsActive='True' end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_SalesReturnHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Optype int As Begin if(@Optype=1) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id end if(@Optype=2) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Ems_ContactMaster.Name as CustomerName ,Set_EmployeeMaster.Emp_Name as SalesPerson_Name ,case when SH.SIFromTransType='S' then 'By Sales Order' end as Transtype , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.ModifiedBy) as ModifiedUser FROM [dbo].[Inv_SalesReturnHeader] as SH inner join Ems_ContactMaster on SH.Customer_Id=Ems_ContactMaster.Trans_Id inner join Set_EmployeeMaster on SH.SalesPerson_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='True' end if(@Optype=3) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Ems_ContactMaster.Name as CustomerName ,Set_EmployeeMaster.Emp_Name as SalesPerson_Name ,case when SH.SIFromTransType='S' then 'By Sales Order' end as Transtype , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.ModifiedBy) as ModifiedUser FROM [dbo].[Inv_SalesReturnHeader] as SH inner join Ems_ContactMaster on SH.Customer_Id=Ems_ContactMaster.Trans_Id inner join Set_EmployeeMaster on SH.SalesPerson_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='False' end if(@Optype=4) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.Trans_Id=@Trans_Id end if(@Optype=5) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.Invoice_Id=@Trans_Id and SH.Post='False' and sh.IsActive='True' end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ac_SubChartOfAccount_Update] @FinancialYearId int, @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @AccTransId int, @Other_Account_No int, @LDr_Amount numeric(18,6), @LCr_Amount numeric(18,6), @FDr_Amount numeric(18,6), @FCr_Amount numeric(18,6), @FCurrency_Id int, @CompanyCurrDebit numeric(18,6), @CompanyCurrCredit numeric(18,6), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy varchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Update Ac_SubChartOfAccount SET [LDr_Amount]=@LDr_Amount ,[LCr_Amount]=@LCr_Amount ,[FDr_Amount]=@FDr_Amount ,[FCr_Amount]=@FCr_Amount ,[FCurrency_Id]=@FCurrency_Id ,[CompanyCurrDebit]=@CompanyCurrDebit ,[CompanyCurrCredit]=@CompanyCurrCredit ,[Field1] = @Field1 ,[Field2] = @Field2 ,[Field3] = @Field3 ,[Field4] = @Field4 ,[Field5] = @Field5 ,[Field6] = @Field6 ,[Field7] = @Field7 ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate Where [FinancialYearId]=@FinancialYearId and [Company_Id] = @Company_Id and [Brand_Id]=@Brand_Id and [Location_Id]=@Location_Id and [AccTransId] = @AccTransId and [Trans_Id]=@Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_SubChartOfAccount_Update] @FinancialYearId int, @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @AccTransId int, @Other_Account_No int, @LDr_Amount numeric(18,6), @LCr_Amount numeric(18,6), @FDr_Amount numeric(18,6), @FCr_Amount numeric(18,6), @FCurrency_Id int, @CompanyCurrDebit numeric(18,6), @CompanyCurrCredit numeric(18,6), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy varchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Update Ac_SubChartOfAccount SET [LDr_Amount]=@LDr_Amount ,[LCr_Amount]=@LCr_Amount ,[FDr_Amount]=@FDr_Amount ,[FCr_Amount]=@FCr_Amount ,[FCurrency_Id]=@FCurrency_Id ,[CompanyCurrDebit]=@CompanyCurrDebit ,[CompanyCurrCredit]=@CompanyCurrCredit ,[Field1] = @Field1 ,[Field2] = @Field2 ,[Field3] = @Field3 ,[Field4] = @Field4 ,[Field5] = @Field5 ,[Field6] = @Field6 ,[Field7] = @Field7 ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate Where [FinancialYearId]=@FinancialYearId and [Company_Id] = @Company_Id and [Brand_Id]=@Brand_Id and [Location_Id]=@Location_Id and [AccTransId] = @AccTransId and [Trans_Id]=@Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ac_SubChartOfAccount_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @AccTrans_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT [FinancialYearId] ,[Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[AccTransId] ,[Other_Account_No] ,[LDr_Amount] ,[LCr_Amount] ,[FDr_Amount] ,[FCr_Amount] ,[FCurrency_Id] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_SubChartOfAccount Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id asc End else if(@Optype=2) Begin SELECT [FinancialYearId] ,[Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[AccTransId] ,[Other_Account_No] ,[LDr_Amount] ,[LCr_Amount] ,[FDr_Amount] ,[FCr_Amount] ,[FCurrency_Id] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_SubChartOfAccount Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and IsActive='True' and AccTransId=@AccTrans_Id order by Trans_Id asc End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_SubChartOfAccount_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @AccTrans_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT [FinancialYearId] ,[Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[AccTransId] ,[Other_Account_No] ,[LDr_Amount] ,[LCr_Amount] ,[FDr_Amount] ,[FCr_Amount] ,[FCurrency_Id] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_SubChartOfAccount Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id asc End else if(@Optype=2) Begin SELECT [FinancialYearId] ,[Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[AccTransId] ,[Other_Account_No] ,[LDr_Amount] ,[LCr_Amount] ,[FDr_Amount] ,[FCr_Amount] ,[FCurrency_Id] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_SubChartOfAccount Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and IsActive='True' and AccTransId=@AccTrans_Id order by Trans_Id asc End End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ac_SubChartOfAccount_Insert] @FinancialYearId int, @Company_Id int, @Brand_Id int, @Location_Id int, @AccTransId int, @Other_Account_No int, @LDr_Amount numeric(18,6), @LCr_Amount numeric(18,6), @FDr_Amount numeric(18,6), @FCr_Amount numeric(18,6), @FCurrency_Id int, @CompanyCurrDebit numeric(18,6), @CompanyCurrCredit numeric(18,6), @Field1 nvarchar(max), @Field2 nvarchar(max), @Field3 nvarchar(max), @Field4 nvarchar(max), @Field5 nvarchar(max), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Ac_SubChartOfAccount ([FinancialYearId],[Company_Id],[Brand_Id],[Location_Id],[AccTransId],[Other_Account_No],[LDr_Amount],[LCr_Amount],[FDr_Amount],[FCr_Amount],[FCurrency_Id],[CompanyCurrDebit],[CompanyCurrCredit],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@FinancialYearId,@Company_Id,@Brand_Id,@Location_Id,@AccTransId,@Other_Account_No,@LDr_Amount,@LCr_Amount,@FDr_Amount,@FCr_Amount,@FCurrency_Id,@CompanyCurrDebit,@CompanyCurrCredit, @Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_SubChartOfAccount_Insert] @FinancialYearId int, @Company_Id int, @Brand_Id int, @Location_Id int, @AccTransId int, @Other_Account_No int, @LDr_Amount numeric(18,6), @LCr_Amount numeric(18,6), @FDr_Amount numeric(18,6), @FCr_Amount numeric(18,6), @FCurrency_Id int, @CompanyCurrDebit numeric(18,6), @CompanyCurrCredit numeric(18,6), @Field1 nvarchar(max), @Field2 nvarchar(max), @Field3 nvarchar(max), @Field4 nvarchar(max), @Field5 nvarchar(max), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Ac_SubChartOfAccount ([FinancialYearId],[Company_Id],[Brand_Id],[Location_Id],[AccTransId],[Other_Account_No],[LDr_Amount],[LCr_Amount],[FDr_Amount],[FCr_Amount],[FCurrency_Id],[CompanyCurrDebit],[CompanyCurrCredit],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@FinancialYearId,@Company_Id,@Brand_Id,@Location_Id,@AccTransId,@Other_Account_No,@LDr_Amount,@LCr_Amount,@FDr_Amount,@FCr_Amount,@FCurrency_Id,@CompanyCurrDebit,@CompanyCurrCredit, @Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ac_Ageing_Detail_SelectRow]    @Company_Id int,   @Brand_Id int,   @Location_Id nvarchar(max),   @Trans_Id int,   @Ref_Id int,   @Ref_Type nvarchar(max),  @Other_Account_No int, @AgeingType nvarchar(max), @VoucherId nvarchar(max), @Optype int  As  Begin    if(@Optype=1)  Begin    SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]            ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and VoucherId=@VoucherId order by Trans_Id desc    End     ELSE IF (@Optype=2)  Begin   SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]         ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True'    End      ELSE IF (@Optype=3)  Begin   SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]         ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc      End ELSE IF (@Optype=4)  Begin   select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount)else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType     End ELSE IF(@Optype=5)  Begin  select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-31,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))   and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType      End ELSE IF(@Optype=6)  Begin  select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-61,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType        End ELSE IF(@Optype=7)  Begin   select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-180,getdate()) and Invoice_Date<DATEADD(day,-91,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType    End ELSE IF(@Optype=8)  Begin   select  (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-365,getdate()) and Invoice_Date<DATEADD(day,-181,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and  Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType End ELSE IF(@Optype=9)   Begin   select  (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-366,getdate())and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType     End ELSE IF(@Optype=10)   Begin SELECT dbo.Ac_Ageing_Detail.*, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date FROM   dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Ageing_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Ageing_Detail.VoucherId Where Ac_Ageing_Detail.Company_Id = @Company_Id and Ac_Ageing_Detail.Brand_Id=@Brand_Id and Ac_Ageing_Detail.Location_Id=@Location_Id and Ac_Ageing_Detail.IsActive='True'     End ELSE IF(@Optype=11)  Begin Select * from Ac_Ageing_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and IsActive='True' End End ";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Ac_Ageing_Detail_SelectRow]    @Company_Id int,   @Brand_Id int,   @Location_Id nvarchar(max),   @Trans_Id int,   @Ref_Id int,   @Ref_Type nvarchar(max),  @Other_Account_No int, @AgeingType nvarchar(max), @VoucherId nvarchar(max), @Optype int  As  Begin    if(@Optype=1)  Begin    SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]            ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and VoucherId=@VoucherId order by Trans_Id desc    End     ELSE IF (@Optype=2)  Begin   SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]         ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True'    End      ELSE IF (@Optype=3)  Begin   SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]         ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc      End ELSE IF (@Optype=4)  Begin   select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount)else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType     End ELSE IF(@Optype=5)  Begin  select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-31,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))   and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType      End ELSE IF(@Optype=6)  Begin  select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-61,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType        End ELSE IF(@Optype=7)  Begin   select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-180,getdate()) and Invoice_Date<DATEADD(day,-91,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType    End ELSE IF(@Optype=8)  Begin   select  (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-365,getdate()) and Invoice_Date<DATEADD(day,-181,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and  Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType End ELSE IF(@Optype=9)   Begin   select  (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-366,getdate())and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType     End ELSE IF(@Optype=10)   Begin SELECT dbo.Ac_Ageing_Detail.*, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date FROM   dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Ageing_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Ageing_Detail.VoucherId Where Ac_Ageing_Detail.Company_Id = @Company_Id and Ac_Ageing_Detail.Brand_Id=@Brand_Id and Ac_Ageing_Detail.Location_Id=@Location_Id and Ac_Ageing_Detail.IsActive='True'     End ELSE IF(@Optype=11)  Begin Select * from Ac_Ageing_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and IsActive='True' End End ";
    //        objDa.execute_Command(strsql);
    //    }
    //    try
    //    {
    //        strsql = "create procedure [dbo].[sp_Ac_VoucherDetailTotal] @Company_Id int, @Brand_Id int, @Optype int as begin if(@Optype=1) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id End ELSE IF (@Optype=2) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and SUM(Ac_Voucher_Detail.Credit_Amount)=SUM(Ac_Voucher_Detail.Debit_Amount) End ELSE IF (@Optype=3) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and SUM(Ac_Voucher_Detail.Credit_Amount)<>SUM(Ac_Voucher_Detail.Debit_Amount) End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter procedure [dbo].[sp_Ac_VoucherDetailTotal] @Company_Id int, @Brand_Id int, @Optype int as begin if(@Optype=1) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id End ELSE IF (@Optype=2) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and SUM(Ac_Voucher_Detail.Credit_Amount)=SUM(Ac_Voucher_Detail.Debit_Amount) End ELSE IF (@Optype=3) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and SUM(Ac_Voucher_Detail.Credit_Amount)<>SUM(Ac_Voucher_Detail.Debit_Amount) End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ac_Voucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No nvarchar(255), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' and Voucher_No=@Voucher_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT MAX(Trans_Id) FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End else if(@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ReconciledFromFinance='True' End else if(@Optype=7) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' End else if(@Optype=8) Begin SELECT Distinct dbo.Ac_Voucher_Header.*, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ems_ContactMaster.Name FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN dbo.Ems_ContactMaster ON dbo.Ac_Voucher_Detail.Other_Account_No = dbo.Ems_ContactMaster.Trans_Id Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' order by Ac_Voucher_Header.Voucher_Date desc End ELSE IF (@Optype=9) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=10) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=11) Begin SELECT top 1 Voucher_Date as Voucher_Date FROM Ac_Voucher_Header order by Voucher_Date End if(@Optype=12) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Voucher_Date DESC End if(@Optype=13) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Trans_Id, dbo.Ac_Voucher_Header.Finance_Code, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Header.Cancel, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Detail.Account_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No End if(@Optype=14) Begin Select * from Ac_Voucher_Header End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_Voucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No nvarchar(255), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' and Voucher_No=@Voucher_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT MAX(Trans_Id) FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End else if(@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ReconciledFromFinance='True' End else if(@Optype=7) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' End else if(@Optype=8) Begin SELECT Distinct dbo.Ac_Voucher_Header.*, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ems_ContactMaster.Name FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN dbo.Ems_ContactMaster ON dbo.Ac_Voucher_Detail.Other_Account_No = dbo.Ems_ContactMaster.Trans_Id Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' order by Ac_Voucher_Header.Voucher_Date desc End ELSE IF (@Optype=9) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=10) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=11) Begin SELECT top 1 Voucher_Date as Voucher_Date FROM Ac_Voucher_Header order by Voucher_Date End if(@Optype=12) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Voucher_Date DESC End if(@Optype=13) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Trans_Id, dbo.Ac_Voucher_Header.Finance_Code, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Header.Cancel, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Detail.Account_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No End if(@Optype=14) Begin Select * from Ac_Voucher_Header End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ac_Voucher_Detail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No int, @Optype int As Begin IF (@Optype=6) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id,dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount,Ac_Voucher_Detail.Field2 as BankReconcilation, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End else if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Voucher_No=@Voucher_No order by Trans_Id asc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail order by Trans_Id desc End else if(@Optype=8) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id End else if(@Optype=9) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id and dbo.Ac_Voucher_Detail.Field3='' and dbo.Ac_Voucher_Detail.Field4='' End else if(@Optype=10) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id and dbo.Ac_Voucher_Detail.Field3!='' and dbo.Ac_Voucher_Detail.Field4!='' End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Ac_Voucher_Detail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No int, @Optype int As Begin IF (@Optype=6) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id,dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount,Ac_Voucher_Detail.Field2 as BankReconcilation, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End else if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Voucher_No=@Voucher_No order by Trans_Id asc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail order by Trans_Id desc End else if(@Optype=8) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id End else if(@Optype=9) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id and dbo.Ac_Voucher_Detail.Field3='' and dbo.Ac_Voucher_Detail.Field4='' End else if(@Optype=10) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id and dbo.Ac_Voucher_Detail.Field3!='' and dbo.Ac_Voucher_Detail.Field4!='' End End";
    //        objDa.execute_Command(strsql);
    //    }


    //    //created on 02-11-2016

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ems_ContactMaster_SelectRow] @Trans_Id int, @Name nvarchar(MAX), @Optype int As Begin if(@Optype=7) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id, (select Dep_Name from Set_DepartmentMaster where Dep_Id=CM.Dep_Id) as DepartmentName , (select Designation from Set_DesignationMaster where Designation_Id=CM.Designation_Id) as DesignationName , case when Ems_Contact_Group.Group_Id =1 then Ems_Contact_Group.Field1 end as Customercode, case when Ems_Contact_Group.Group_Id =2 then Ems_Contact_Group.Field1 end as suppliercode, case when CM.Company_Id<>0 then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , CM.Is_Reseller from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.status end if(@Optype=1) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id end if(@Optype=2) Begin Select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Dep_Id ,Ems_ContactMaster.Status,Ems_ContactMaster.Code,Ems_ContactMaster.Is_Reseller ,Ems_ContactMaster.Field3, Ems_ContactMaster.Name,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.company_id,Ems_ContactMaster.Field1 as EmailId,Ems_ContactMaster.Field2 as MobileNo, Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when Ems_ContactMaster.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else ' ' end as CountryName , Ems_ContactMaster.Field6 , (Ems_ContactMaster.Name+'/'+cast(Ems_ContactMaster.Trans_Id as nvarchar)+'/'+Ems_ContactMaster.Field1+'/'+Ems_ContactMaster.Field2) as Filtertext from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' order by Ems_ContactMaster.Name asc end if(@Optype=3) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_ContactMaster.Trans_Id = @Trans_Id end if(@Optype=4) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id = (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id = (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.ModifiedBy)) as ModifiedUser from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.ModifiedDate desc end if(@Optype=5) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.Trans_Id=@Trans_Id and Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.Name Asc end if(@Optype=6) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Rtrim(LTRIM(Ems_ContactMaster.Name)) = @Name end if(@Optype=8) begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion,Ems_Contact_Group.Group_Id , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_Contact_Group.Group_Id=@Trans_Id end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Ems_ContactMaster_SelectRow] @Trans_Id int, @Name nvarchar(MAX), @Optype int As Begin if(@Optype=7) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id, (select Dep_Name from Set_DepartmentMaster where Dep_Id=CM.Dep_Id) as DepartmentName , (select Designation from Set_DesignationMaster where Designation_Id=CM.Designation_Id) as DesignationName , case when Ems_Contact_Group.Group_Id =1 then Ems_Contact_Group.Field1 end as Customercode, case when Ems_Contact_Group.Group_Id =2 then Ems_Contact_Group.Field1 end as suppliercode, case when CM.Company_Id<>0 then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , CM.Is_Reseller from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.status end if(@Optype=1) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id end if(@Optype=2) Begin Select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Dep_Id ,Ems_ContactMaster.Status,Ems_ContactMaster.Code,Ems_ContactMaster.Is_Reseller ,Ems_ContactMaster.Field3, Ems_ContactMaster.Name,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.company_id,Ems_ContactMaster.Field1 as EmailId,Ems_ContactMaster.Field2 as MobileNo, Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when Ems_ContactMaster.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else ' ' end as CountryName , Ems_ContactMaster.Field6 , (Ems_ContactMaster.Name+'/'+cast(Ems_ContactMaster.Trans_Id as nvarchar)+'/'+Ems_ContactMaster.Field1+'/'+Ems_ContactMaster.Field2) as Filtertext from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' order by Ems_ContactMaster.Name asc end if(@Optype=3) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_ContactMaster.Trans_Id = @Trans_Id end if(@Optype=4) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id = (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id = (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.ModifiedBy)) as ModifiedUser from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.ModifiedDate desc end if(@Optype=5) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.Trans_Id=@Trans_Id and Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.Name Asc end if(@Optype=6) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Rtrim(LTRIM(Ems_ContactMaster.Name)) = @Name end if(@Optype=8) begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion,Ems_Contact_Group.Group_Id , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_Contact_Group.Group_Id=@Trans_Id end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {

    //        strsql = "create Procedure [dbo].[sp_Ems_ContactMaster_RowStatus] @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @Optype int, @ReferenceID int output As Begin if(@Optype=0) begin Update Ems_ContactMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Trans_Id] = @Trans_Id select @ReferenceID=@@ROWCOUNT end if(@Optype=1) begin Update Ems_ContactMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [ParentContactId] = @Trans_Id select @ReferenceID=@@ROWCOUNT end return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Ems_ContactMaster_RowStatus] @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @Optype int, @ReferenceID int output As Begin if(@Optype=0) begin Update Ems_ContactMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Trans_Id] = @Trans_Id select @ReferenceID=@@ROWCOUNT end if(@Optype=1) begin Update Ems_ContactMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [ParentContactId] = @Trans_Id select @ReferenceID=@@ROWCOUNT end return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }

    //    //04-11-2016

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Ac_Voucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No nvarchar(255), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' and Voucher_No=@Voucher_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT MAX(Trans_Id) FROM Ac_Voucher_Header End else if(@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ReconciledFromFinance='True' End else if(@Optype=7) Begin SELECT dbo.Ac_Voucher_Header.*, (case when (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0)!=0 then (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0) else 0 end) as Other_Account FROM dbo.Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' End else if(@Optype=8) Begin SELECT Distinct dbo.Ac_Voucher_Header.*, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ems_ContactMaster.Name FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN dbo.Ems_ContactMaster ON dbo.Ac_Voucher_Detail.Other_Account_No = dbo.Ems_ContactMaster.Trans_Id Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' order by Ac_Voucher_Header.Voucher_Date desc End ELSE IF (@Optype=9) Begin SELECT dbo.Ac_Voucher_Header.*, (case when (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0)!=0 then (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0) else 0 end) as Other_Account FROM dbo.Ac_Voucher_Header Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=10) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=11) Begin SELECT top 1 Voucher_Date as Voucher_Date FROM Ac_Voucher_Header order by Voucher_Date End if(@Optype=12) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Voucher_Date DESC End if(@Optype=13) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Trans_Id, dbo.Ac_Voucher_Header.Finance_Code, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Header.Cancel, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Detail.Account_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No End if(@Optype=14) Begin Select * from Ac_Voucher_Header End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Ac_Voucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No nvarchar(255), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' and Voucher_No=@Voucher_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT MAX(Trans_Id) FROM Ac_Voucher_Header End else if(@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ReconciledFromFinance='True' End else if(@Optype=7) Begin SELECT dbo.Ac_Voucher_Header.*, (case when (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0)!=0 then (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0) else 0 end) as Other_Account FROM dbo.Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' End else if(@Optype=8) Begin SELECT Distinct dbo.Ac_Voucher_Header.*, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ems_ContactMaster.Name FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN dbo.Ems_ContactMaster ON dbo.Ac_Voucher_Detail.Other_Account_No = dbo.Ems_ContactMaster.Trans_Id Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' order by Ac_Voucher_Header.Voucher_Date desc End ELSE IF (@Optype=9) Begin SELECT dbo.Ac_Voucher_Header.*, (case when (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0)!=0 then (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0) else 0 end) as Other_Account FROM dbo.Ac_Voucher_Header Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=10) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=11) Begin SELECT top 1 Voucher_Date as Voucher_Date FROM Ac_Voucher_Header order by Voucher_Date End if(@Optype=12) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Voucher_Date DESC End if(@Optype=13) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Trans_Id, dbo.Ac_Voucher_Header.Finance_Code, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Header.Cancel, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Detail.Account_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No End if(@Optype=14) Begin Select * from Ac_Voucher_Header End End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_StockDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @optype int As Begin if(@optype=5) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id end if(@optype=1) begin Select [Company_Id], [Brand_Id], [Location_Id], [ProductId], [OpeningBalance], [RackID], [Quantity], [Minimum_Qty], [Maximum_Qty], [ReserveQty], [DamageQty], [BlockedQty], [OrderQty], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal From Inv_StockDetail end if(@optype=2) begin SELECT Set_LocationMaster.Location_Name, Inv_StockDetail.* , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail INNER JOIN Set_LocationMaster ON Inv_StockDetail.Location_Id = Set_LocationMaster.Location_Id where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.ProductId=@ProductId end if(@optype=3) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id end if(@optype=4) begin Select Inv_Product_CompanyBrand.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, ( Case when Inv_StockDetail.ProductId<>'' then 0 else 1 end )as InStock,Inv_StockDetail.Quantity as SysQty , Inv_StockDetail.OpeningBalance as Quantity ,Inv_StockDetail.Location_Id,Inv_StockDetail.Field1 as UnitPrice, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , Inv_ProductMaster.UnitId , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , case when Inv_StockDetail.Quantity is null then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyVisibleStatus, case when Inv_StockDetail.Quantity is null then CAST ('False' as Bit) else CAST ('True' as Bit) end as lblQtyVisibleStatus , case when Inv_StockDetail.Quantity is null And Inv_ProductMaster.Maintainstock='SNO' then CAST ('False' as Bit) else CAST ('True' as Bit) end as txtQtyEnableStatus, case when Inv_StockDetail.Quantity is not null then CAST ('False' as Bit) when Inv_StockDetail.Quantity is null and Inv_ProductMaster.MaintainStock='SNO' then CAST ('True' as Bit) else CAST ('False' as Bit) end as lnkserialbtnVisibleStatus , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal from Inv_Product_CompanyBrand inner join Inv_ProductMaster on Inv_Product_CompanyBrand.ProductId=Inv_ProductMaster.ProductId and Inv_ProductMaster.IsActive='True' left Join Inv_StockDetail on Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_Product_CompanyBrand.ProductId=Inv_StockDetail.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and Inv_ProductMaster.ItemType='S' and Inv_ProductMaster.Field1=' ' and Inv_ProductMaster.Field3='True' end if(@optype=6) begin Select Inv_StockDetail.Field2,Inv_StockDetail.Quantity from Inv_StockDetail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@optype=7) begin Select Inv_StockDetail.ProductId from Inv_StockDetail where ProductId=@ProductId end End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Inv_StockDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @optype int As Begin if(@optype=5) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id end if(@optype=1) begin Select [Company_Id], [Brand_Id], [Location_Id], [ProductId], [OpeningBalance], [RackID], [Quantity], [Minimum_Qty], [Maximum_Qty], [ReserveQty], [DamageQty], [BlockedQty], [OrderQty], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal From Inv_StockDetail end if(@optype=2) begin SELECT Set_LocationMaster.Location_Name, Inv_StockDetail.* , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail INNER JOIN Set_LocationMaster ON Inv_StockDetail.Location_Id = Set_LocationMaster.Location_Id where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.ProductId=@ProductId end if(@optype=3) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id end if(@optype=4) begin Select Inv_Product_CompanyBrand.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, ( Case when Inv_StockDetail.ProductId<>'' then 0 else 1 end )as InStock,Inv_StockDetail.Quantity as SysQty , Inv_StockDetail.OpeningBalance as Quantity ,Inv_StockDetail.Location_Id,Inv_StockDetail.Field1 as UnitPrice, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , Inv_ProductMaster.UnitId , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , case when Inv_StockDetail.Quantity is null then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyVisibleStatus, case when Inv_StockDetail.Quantity is null then CAST ('False' as Bit) else CAST ('True' as Bit) end as lblQtyVisibleStatus , case when Inv_StockDetail.Quantity is null And Inv_ProductMaster.Maintainstock='SNO' then CAST ('False' as Bit) else CAST ('True' as Bit) end as txtQtyEnableStatus, case when Inv_StockDetail.Quantity is not null then CAST ('False' as Bit) when Inv_StockDetail.Quantity is null and Inv_ProductMaster.MaintainStock='SNO' then CAST ('True' as Bit) else CAST ('False' as Bit) end as lnkserialbtnVisibleStatus , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal from Inv_Product_CompanyBrand inner join Inv_ProductMaster on Inv_Product_CompanyBrand.ProductId=Inv_ProductMaster.ProductId and Inv_ProductMaster.IsActive='True' left Join Inv_StockDetail on Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_Product_CompanyBrand.ProductId=Inv_StockDetail.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and Inv_ProductMaster.ItemType='S' and Inv_ProductMaster.Field1=' ' and Inv_ProductMaster.Field3='True' end if(@optype=6) begin Select Inv_StockDetail.Field2,Inv_StockDetail.Quantity from Inv_StockDetail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@optype=7) begin Select Inv_StockDetail.ProductId from Inv_StockDetail where ProductId=@ProductId end End";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "update IT_ObjectEntry set IsActive='False' where Object_Id='281'";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    //updated on 07-11-2016
    //    try
    //    {
    //        strsql = "update Inv_PurchaseQuoteDetail set Field4=(select inv_purchasequoteheader.Field1 from inv_purchasequoteheader where inv_purchasequoteheader.Trans_Id=Inv_PurchaseQuoteDetail.RPQ_No ),Field5=Amount  where Field4=' '";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_PurchaseInquiry_Supplier_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PI_No int, @Supplier_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Name FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Supplier_Id=@Supplier_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT Inv_PurchaseInquiry_Supplier.Supplier_Id, (select sum(cast(Field5 as Float)) from Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id and Supplier_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Amount , (select max(Field1) from Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id and Supplier_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Field1 FROM Inv_PurchaseInquiry_Supplier left JOIN Inv_PurchaseQuoteHeader ON Inv_PurchaseInquiry_Supplier.PI_No = Inv_PurchaseQuoteHeader.PI_No AND Inv_PurchaseInquiry_Supplier.Company_Id = Inv_PurchaseQuoteHeader.Company_Id AND Inv_PurchaseInquiry_Supplier.Brand_Id = Inv_PurchaseQuoteHeader.Brand_Id where Inv_PurchaseInquiry_Supplier.Company_Id = @Company_Id and Inv_PurchaseInquiry_Supplier.Brand_Id=@Brand_Id and Inv_PurchaseInquiry_Supplier.Location_Id=@Location_Id and Inv_PurchaseInquiry_Supplier.PI_No=@PI_No order by Inv_PurchaseInquiry_Supplier.Trans_Id desc End End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Inv_PurchaseInquiry_Supplier_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PI_No int, @Supplier_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Name FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Supplier_Id=@Supplier_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT Inv_PurchaseInquiry_Supplier.Supplier_Id, (select sum(cast(Field5 as Float)) from Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id and Supplier_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Amount , (select max(Field1) from Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id and Supplier_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Field1 FROM Inv_PurchaseInquiry_Supplier left JOIN Inv_PurchaseQuoteHeader ON Inv_PurchaseInquiry_Supplier.PI_No = Inv_PurchaseQuoteHeader.PI_No AND Inv_PurchaseInquiry_Supplier.Company_Id = Inv_PurchaseQuoteHeader.Company_Id AND Inv_PurchaseInquiry_Supplier.Brand_Id = Inv_PurchaseQuoteHeader.Brand_Id where Inv_PurchaseInquiry_Supplier.Company_Id = @Company_Id and Inv_PurchaseInquiry_Supplier.Brand_Id=@Brand_Id and Inv_PurchaseInquiry_Supplier.Location_Id=@Location_Id and Inv_PurchaseInquiry_Supplier.PI_No=@PI_No order by Inv_PurchaseInquiry_Supplier.Trans_Id desc End End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "create PROCEDURE [dbo].[sp_Ac_AllCustomer_Balance] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @CustomerAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @currency_type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT company_id, brand_id, Customer_Id, name, (CASE WHEN @currency_type = 1 THEN opening_balance ELSE cmp_ob END) AS opening_final, (CASE WHEN @currency_type = 1 THEN debit_amount ELSE cmp_dr END) AS Debit_final, (CASE WHEN @currency_type = 1 THEN credit_Amount ELSE cmp_cr END) AS Credit_final, (CASE WHEN @currency_type = 1 THEN closing_balance ELSE cmp_cb END) AS closing_final, opening_balance, debit_amount, credit_Amount, closing_balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, cmp_ob, cmp_dr, cmp_cr, (CASE WHEN @currency_type = 1 THEN Start30 ELSE Comp_Start30 END) AS start30_final, (CASE WHEN @currency_type = 1 THEN second60 ELSE comp_second60 END) AS second60_final, (CASE WHEN @currency_type = 1 THEN third90 ELSE Comp_third90 END) AS third90_final, (CASE WHEN @currency_type = 1 THEN fourth90above ELSE Comp_fourth90above END) AS fourth90above_final, (CASE WHEN @currency_type = 1 THEN ageingBalance ELSE Comp_ageingBalance END) AS AgeingBalance_final, Start30, second60, third90, fourth90above, ageingBalance, Comp_Start30, comp_second60, Comp_third90, Comp_fourth90above, Comp_ageingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS cmp_ob, ISNULL(trans.cmp_dr, 0) AS cmp_dr, ISNULL(trans.cmp_cr, 0) AS cmp_cr, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS cmp_cb, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id FROM set_CustomerMaster WHERE set_CustomerMaster.Account_No = @CustomerAccount_no AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND set_CustomerMaster.IsActive = 'True') set_CustomerMaster LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_CustomerMaster.Customer_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_CustomerMaster.Customer_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN set_CustomerMaster ON set_CustomerMaster.Customer_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = set_CustomerMaster.Customer_Id) final ORDER BY name END END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER PROCEDURE [dbo].[sp_Ac_AllCustomer_Balance] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @CustomerAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @currency_type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT company_id, brand_id, Customer_Id, name, (CASE WHEN @currency_type = 1 THEN opening_balance ELSE cmp_ob END) AS opening_final, (CASE WHEN @currency_type = 1 THEN debit_amount ELSE cmp_dr END) AS Debit_final, (CASE WHEN @currency_type = 1 THEN credit_Amount ELSE cmp_cr END) AS Credit_final, (CASE WHEN @currency_type = 1 THEN closing_balance ELSE cmp_cb END) AS closing_final, opening_balance, debit_amount, credit_Amount, closing_balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, cmp_ob, cmp_dr, cmp_cr, (CASE WHEN @currency_type = 1 THEN Start30 ELSE Comp_Start30 END) AS start30_final, (CASE WHEN @currency_type = 1 THEN second60 ELSE comp_second60 END) AS second60_final, (CASE WHEN @currency_type = 1 THEN third90 ELSE Comp_third90 END) AS third90_final, (CASE WHEN @currency_type = 1 THEN fourth90above ELSE Comp_fourth90above END) AS fourth90above_final, (CASE WHEN @currency_type = 1 THEN ageingBalance ELSE Comp_ageingBalance END) AS AgeingBalance_final, Start30, second60, third90, fourth90above, ageingBalance, Comp_Start30, comp_second60, Comp_third90, Comp_fourth90above, Comp_ageingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS cmp_ob, ISNULL(trans.cmp_dr, 0) AS cmp_dr, ISNULL(trans.cmp_cr, 0) AS cmp_cr, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS cmp_cb, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id FROM set_CustomerMaster WHERE set_CustomerMaster.Account_No = @CustomerAccount_no AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND set_CustomerMaster.IsActive = 'True') set_CustomerMaster LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_CustomerMaster.Customer_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_CustomerMaster.Customer_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN set_CustomerMaster ON set_CustomerMaster.Customer_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = set_CustomerMaster.Customer_Id) final ORDER BY name END END";
    //        objDa.execute_Command(strsql);
    //    }



    //    try
    //    {
    //        strsql = "create PROCEDURE [dbo].[sp_Ac_AllSupplierDetail_SelectRow] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @SupplierAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @Currency_Type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT Company_Id, Brand_Id, Supplier_Id, Name, (CASE WHEN @Currency_Type = 1 THEN Opening_Balance ELSE Company_OpeningBalance END) AS Opening_Final, (CASE WHEN @Currency_Type = 1 THEN Debit_Amount ELSE Company_DebitAmount END) AS Debit_Final, (CASE WHEN @Currency_Type = 1 THEN Credit_Amount ELSE Company_CreditAmount END) AS Credit_Final, (CASE WHEN @Currency_Type = 1 THEN Closing_Balance ELSE Company_ClosingBalance END) AS Closing_Final, Opening_Balance, Debit_Amount, Credit_Amount, Closing_Balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, Company_OpeningBalance, Company_DebitAmount, Company_CreditAmount, Company_ClosingBalance, (CASE WHEN @Currency_Type = 1 THEN Start30 ELSE Comp_Start30 END) AS Start30_Final, (CASE WHEN @Currency_Type = 1 THEN Second60 ELSE comp_second60 END) AS Second60_Final, (CASE WHEN @Currency_Type = 1 THEN Third90 ELSE Comp_third90 END) AS Third90_Final, (CASE WHEN @Currency_Type = 1 THEN Fourth90Above ELSE Comp_fourth90above END) AS Fourth90above_Final, (CASE WHEN @Currency_Type = 1 THEN AgeingBalance ELSE Comp_AgeingBalance END) AS AgeingBalance_Final, Start30, Second60, Third90, Fourth90Above, AgeingBalance, Comp_Start30, Comp_Second60, Comp_Third90, Comp_Fourth90Above, Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS Company_OpeningBalance, ISNULL(trans.cmp_dr, 0) AS Company_DebitAmount, ISNULL(trans.cmp_cr, 0) AS Company_CreditAmount, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS Company_ClosingBalance, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id FROM Set_Suppliers WHERE Set_Suppliers.Account_No = @SupplierAccount_No AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND Set_Suppliers.IsActive = 'True') set_suppliers LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_suppliers.Supplier_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_suppliers.Supplier_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN Set_Suppliers ON Set_Suppliers.Supplier_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = Set_Suppliers.Supplier_Id) tbl_final ORDER BY Name END END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER PROCEDURE [dbo].[sp_Ac_AllSupplierDetail_SelectRow] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @SupplierAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @Currency_Type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT Company_Id, Brand_Id, Supplier_Id, Name, (CASE WHEN @Currency_Type = 1 THEN Opening_Balance ELSE Company_OpeningBalance END) AS Opening_Final, (CASE WHEN @Currency_Type = 1 THEN Debit_Amount ELSE Company_DebitAmount END) AS Debit_Final, (CASE WHEN @Currency_Type = 1 THEN Credit_Amount ELSE Company_CreditAmount END) AS Credit_Final, (CASE WHEN @Currency_Type = 1 THEN Closing_Balance ELSE Company_ClosingBalance END) AS Closing_Final, Opening_Balance, Debit_Amount, Credit_Amount, Closing_Balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, Company_OpeningBalance, Company_DebitAmount, Company_CreditAmount, Company_ClosingBalance, (CASE WHEN @Currency_Type = 1 THEN Start30 ELSE Comp_Start30 END) AS Start30_Final, (CASE WHEN @Currency_Type = 1 THEN Second60 ELSE comp_second60 END) AS Second60_Final, (CASE WHEN @Currency_Type = 1 THEN Third90 ELSE Comp_third90 END) AS Third90_Final, (CASE WHEN @Currency_Type = 1 THEN Fourth90Above ELSE Comp_fourth90above END) AS Fourth90above_Final, (CASE WHEN @Currency_Type = 1 THEN AgeingBalance ELSE Comp_AgeingBalance END) AS AgeingBalance_Final, Start30, Second60, Third90, Fourth90Above, AgeingBalance, Comp_Start30, Comp_Second60, Comp_Third90, Comp_Fourth90Above, Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS Company_OpeningBalance, ISNULL(trans.cmp_dr, 0) AS Company_DebitAmount, ISNULL(trans.cmp_cr, 0) AS Company_CreditAmount, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS Company_ClosingBalance, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id FROM Set_Suppliers WHERE Set_Suppliers.Account_No = @SupplierAccount_No AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND Set_Suppliers.IsActive = 'True') set_suppliers LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_suppliers.Supplier_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_suppliers.Supplier_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN Set_Suppliers ON Set_Suppliers.Supplier_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = Set_Suppliers.Supplier_Id) tbl_final ORDER BY Name END END";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_Insert] @Company_Id int, @Brand_Id int, @Location_ID int, @InvoiceNo nvarchar(255), @InvoiceDate datetime = NULL, @InvoiceType nvarchar(50), @SupInvoiceNo nvarchar(255) = NULL, @SupInvoiceDate datetime = NULL, @PaymentModeID int, @SupplierId int = NULL, @CurrencyID int, @ExchangeRate numeric(18,9) = NULL, @CostingRate numeric(18,6), @Remark nvarchar(255) = NULL, @OtherCharges numeric(18,6), @TotalQuantity numeric(18,6) = NULL, @TotalAmount numeric(18,6) = NULL, @NetTax numeric(18,6) = NULL, @NetTaxValue numeric(18,6) = NULL, @NetAmount numeric(18,6) = NULL, @NetDiscount numeric(18,6) = NULL, @NetDiscountValue numeric(18,6) = NULL, @GrandTotal numeric(18,6) = NULL, @Post bit = NULL, @Field1 nvarchar(255) = NULL, @Field2 nvarchar(255) = NULL, @Field3 nvarchar(255) = NULL, @Field4 nvarchar(255) = NULL, @Field5 nvarchar(255) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceId int Output As Begin Insert Into Inv_PurchaseInvoiceHeader ([Company_Id],[Brand_Id],[Location_ID],[InvoiceNo],[InvoiceDate],[InvoiceType],[SupInvoiceNo],[SupInvoiceDate],[PaymentModeID],[SupplierId],[CurrencyID],[ExchangeRate],[CostingRate],[Remark],[OtherCharges],[TotalQuantity],[TotalAmount],[NetTax],[NetTaxValue],[NetAmount],[NetDiscount],[NetDiscountValue],[GrandTotal],[Post],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Company_Id,@Brand_Id,@Location_ID,@InvoiceNo,@InvoiceDate,@InvoiceType,@SupInvoiceNo,@SupInvoiceDate,@PaymentModeID,@SupplierId,@CurrencyID,@ExchangeRate,@CostingRate,@Remark,@OtherCharges,@TotalQuantity,@TotalAmount,@NetTax,@NetTaxValue,@NetAmount,@NetDiscount,@NetDiscountValue,@GrandTotal,@Post,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = Scope_Identity() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_Insert] @Company_Id int, @Brand_Id int, @Location_ID int, @InvoiceNo nvarchar(255), @InvoiceDate datetime = NULL, @InvoiceType nvarchar(50), @SupInvoiceNo nvarchar(255) = NULL, @SupInvoiceDate datetime = NULL, @PaymentModeID int, @SupplierId int = NULL, @CurrencyID int, @ExchangeRate numeric(18,9) = NULL, @CostingRate numeric(18,6), @Remark nvarchar(255) = NULL, @OtherCharges numeric(18,6), @TotalQuantity numeric(18,6) = NULL, @TotalAmount numeric(18,6) = NULL, @NetTax numeric(18,6) = NULL, @NetTaxValue numeric(18,6) = NULL, @NetAmount numeric(18,6) = NULL, @NetDiscount numeric(18,6) = NULL, @NetDiscountValue numeric(18,6) = NULL, @GrandTotal numeric(18,6) = NULL, @Post bit = NULL, @Field1 nvarchar(255) = NULL, @Field2 nvarchar(255) = NULL, @Field3 nvarchar(255) = NULL, @Field4 nvarchar(255) = NULL, @Field5 nvarchar(255) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceId int Output As Begin Insert Into Inv_PurchaseInvoiceHeader ([Company_Id],[Brand_Id],[Location_ID],[InvoiceNo],[InvoiceDate],[InvoiceType],[SupInvoiceNo],[SupInvoiceDate],[PaymentModeID],[SupplierId],[CurrencyID],[ExchangeRate],[CostingRate],[Remark],[OtherCharges],[TotalQuantity],[TotalAmount],[NetTax],[NetTaxValue],[NetAmount],[NetDiscount],[NetDiscountValue],[GrandTotal],[Post],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Company_Id,@Brand_Id,@Location_ID,@InvoiceNo,@InvoiceDate,@InvoiceType,@SupInvoiceNo,@SupInvoiceDate,@PaymentModeID,@SupplierId,@CurrencyID,@ExchangeRate,@CostingRate,@Remark,@OtherCharges,@TotalQuantity,@TotalAmount,@NetTax,@NetTaxValue,@NetAmount,@NetDiscount,@NetDiscountValue,@GrandTotal,@Post,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = Scope_Identity() Return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "ALTER TABLE Inv_PurchaseInvoiceHeader ALTER COLUMN ExchangeRate numeric(18,9)";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {

    //    }

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_Update] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @InvoiceNo nvarchar(255), @InvoiceDate datetime, @InvoiceType nvarchar(50), @SupInvoiceNo nvarchar(255), @SupInvoiceDate datetime, @PaymentModeID int, @SupplierId int, @CurrencyID int, @ExchangeRate numeric(18,9), @CostingRate numeric(18,6), @Remark nvarchar(255), @OtherCharges numeric(18,6), @TotalQuantity numeric(18,6), @TotalAmount numeric(18,6), @NetTax numeric(18,6), @NetTaxValue numeric(18,6), @NetAmount numeric(18,6), @NetDiscount numeric(18,6), @NetDiscountValue numeric(18,6), @GrandTotal numeric(18,6), @Post bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferanceId int Output As Begin Update Inv_PurchaseInvoiceHeader Set [InvoiceDate] = @InvoiceDate, [InvoiceType] = @InvoiceType, [SupInvoiceNo] = @SupInvoiceNo, [SupInvoiceDate] = @SupInvoiceDate, [PaymentModeID] = @PaymentModeID, [SupplierId] = @SupplierId, [CurrencyID] = @CurrencyID, [ExchangeRate] = @ExchangeRate, [CostingRate] = @CostingRate, [Remark] = @Remark, [OtherCharges] = @OtherCharges, [TotalQuantity] = @TotalQuantity, [TotalAmount] = @TotalAmount, [NetTax] = @NetTax, [NetTaxValue] = @NetTaxValue, [NetAmount] = @NetAmount, [NetDiscount] = @NetDiscount, [NetDiscountValue] = @NetDiscountValue, [GrandTotal] = @GrandTotal, [Post] = @Post, [Field1] = @Field1, [Field2] = @Field2, [Field3] = @Field3, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_ID] = @Location_ID and [TransID] = @TransID and [InvoiceNo] = @InvoiceNo select @ReferanceId =@@ROWCOUNT return @ReferanceId End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "ALTER Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_Update] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @InvoiceNo nvarchar(255), @InvoiceDate datetime, @InvoiceType nvarchar(50), @SupInvoiceNo nvarchar(255), @SupInvoiceDate datetime, @PaymentModeID int, @SupplierId int, @CurrencyID int, @ExchangeRate numeric(18,9), @CostingRate numeric(18,6), @Remark nvarchar(255), @OtherCharges numeric(18,6), @TotalQuantity numeric(18,6), @TotalAmount numeric(18,6), @NetTax numeric(18,6), @NetTaxValue numeric(18,6), @NetAmount numeric(18,6), @NetDiscount numeric(18,6), @NetDiscountValue numeric(18,6), @GrandTotal numeric(18,6), @Post bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferanceId int Output As Begin Update Inv_PurchaseInvoiceHeader Set [InvoiceDate] = @InvoiceDate, [InvoiceType] = @InvoiceType, [SupInvoiceNo] = @SupInvoiceNo, [SupInvoiceDate] = @SupInvoiceDate, [PaymentModeID] = @PaymentModeID, [SupplierId] = @SupplierId, [CurrencyID] = @CurrencyID, [ExchangeRate] = @ExchangeRate, [CostingRate] = @CostingRate, [Remark] = @Remark, [OtherCharges] = @OtherCharges, [TotalQuantity] = @TotalQuantity, [TotalAmount] = @TotalAmount, [NetTax] = @NetTax, [NetTaxValue] = @NetTaxValue, [NetAmount] = @NetAmount, [NetDiscount] = @NetDiscount, [NetDiscountValue] = @NetDiscountValue, [GrandTotal] = @GrandTotal, [Post] = @Post, [Field1] = @Field1, [Field2] = @Field2, [Field3] = @Field3, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_ID] = @Location_ID and [TransID] = @TransID and [InvoiceNo] = @InvoiceNo select @ReferanceId =@@ROWCOUNT return @ReferanceId End";
    //        objDa.execute_Command(strsql);

    //    }


    //    //08-11-2016

    //    try
    //    {
    //        strsql = "create PROCEDURE [dbo].[sp_Ac_AllCustomer_Balance] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @CustomerAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @currency_type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT company_id, brand_id, Customer_Id, name, (CASE WHEN @currency_type = 1 THEN opening_balance ELSE cmp_ob END) AS opening_final, (CASE WHEN @currency_type = 1 THEN debit_amount ELSE cmp_dr END) AS Debit_final, (CASE WHEN @currency_type = 1 THEN credit_Amount ELSE cmp_cr END) AS Credit_final, (CASE WHEN @currency_type = 1 THEN closing_balance ELSE cmp_cb END) AS closing_final, opening_balance, debit_amount, credit_Amount, closing_balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, cmp_ob, cmp_dr, cmp_cr, (CASE WHEN @currency_type = 1 THEN Start30 ELSE Comp_Start30 END) AS start30_final, (CASE WHEN @currency_type = 1 THEN second60 ELSE comp_second60 END) AS second60_final, (CASE WHEN @currency_type = 1 THEN third90 ELSE Comp_third90 END) AS third90_final, (CASE WHEN @currency_type = 1 THEN fourth90above ELSE Comp_fourth90above END) AS fourth90above_final, (CASE WHEN @currency_type = 1 THEN ageingBalance ELSE Comp_ageingBalance END) AS AgeingBalance_final, Start30, second60, third90, fourth90above, ageingBalance, Comp_Start30, comp_second60, Comp_third90, Comp_fourth90above, Comp_ageingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS cmp_ob, ISNULL(trans.cmp_dr, 0) AS cmp_dr, ISNULL(trans.cmp_cr, 0) AS cmp_cr, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS cmp_cb, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id FROM set_CustomerMaster WHERE set_CustomerMaster.Account_No = @CustomerAccount_no AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND set_CustomerMaster.IsActive = 'True') set_CustomerMaster LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.AccTransId=@CustomerAccount_No AND Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_CustomerMaster.Customer_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_CustomerMaster.Customer_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN set_CustomerMaster ON set_CustomerMaster.Customer_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = set_CustomerMaster.Customer_Id) final ORDER BY name END END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter PROCEDURE [dbo].[sp_Ac_AllCustomer_Balance] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @CustomerAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @currency_type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT company_id, brand_id, Customer_Id, name, (CASE WHEN @currency_type = 1 THEN opening_balance ELSE cmp_ob END) AS opening_final, (CASE WHEN @currency_type = 1 THEN debit_amount ELSE cmp_dr END) AS Debit_final, (CASE WHEN @currency_type = 1 THEN credit_Amount ELSE cmp_cr END) AS Credit_final, (CASE WHEN @currency_type = 1 THEN closing_balance ELSE cmp_cb END) AS closing_final, opening_balance, debit_amount, credit_Amount, closing_balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, cmp_ob, cmp_dr, cmp_cr, (CASE WHEN @currency_type = 1 THEN Start30 ELSE Comp_Start30 END) AS start30_final, (CASE WHEN @currency_type = 1 THEN second60 ELSE comp_second60 END) AS second60_final, (CASE WHEN @currency_type = 1 THEN third90 ELSE Comp_third90 END) AS third90_final, (CASE WHEN @currency_type = 1 THEN fourth90above ELSE Comp_fourth90above END) AS fourth90above_final, (CASE WHEN @currency_type = 1 THEN ageingBalance ELSE Comp_ageingBalance END) AS AgeingBalance_final, Start30, second60, third90, fourth90above, ageingBalance, Comp_Start30, comp_second60, Comp_third90, Comp_fourth90above, Comp_ageingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS cmp_ob, ISNULL(trans.cmp_dr, 0) AS cmp_dr, ISNULL(trans.cmp_cr, 0) AS cmp_cr, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS cmp_cb, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id FROM set_CustomerMaster WHERE set_CustomerMaster.Account_No = @CustomerAccount_no AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND set_CustomerMaster.IsActive = 'True') set_CustomerMaster LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.AccTransId=@CustomerAccount_No AND Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_CustomerMaster.Customer_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_CustomerMaster.Customer_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN set_CustomerMaster ON set_CustomerMaster.Customer_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = set_CustomerMaster.Customer_Id) final ORDER BY name END END";
    //        objDa.execute_Command(strsql);
    //    }

    //    try
    //    {
    //        strsql = "create PROCEDURE [dbo].[sp_Ac_AllSupplierDetail_SelectRow] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @SupplierAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @Currency_Type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT Company_Id, Brand_Id, Supplier_Id, Name, (CASE WHEN @Currency_Type = 1 THEN Opening_Balance ELSE Company_OpeningBalance END) AS Opening_Final, (CASE WHEN @Currency_Type = 1 THEN Debit_Amount ELSE Company_DebitAmount END) AS Debit_Final, (CASE WHEN @Currency_Type = 1 THEN Credit_Amount ELSE Company_CreditAmount END) AS Credit_Final, (CASE WHEN @Currency_Type = 1 THEN Closing_Balance ELSE Company_ClosingBalance END) AS Closing_Final, Opening_Balance, Debit_Amount, Credit_Amount, Closing_Balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, Company_OpeningBalance, Company_DebitAmount, Company_CreditAmount, Company_ClosingBalance, (CASE WHEN @Currency_Type = 1 THEN Start30 ELSE Comp_Start30 END) AS Start30_Final, (CASE WHEN @Currency_Type = 1 THEN Second60 ELSE comp_second60 END) AS Second60_Final, (CASE WHEN @Currency_Type = 1 THEN Third90 ELSE Comp_third90 END) AS Third90_Final, (CASE WHEN @Currency_Type = 1 THEN Fourth90Above ELSE Comp_fourth90above END) AS Fourth90above_Final, (CASE WHEN @Currency_Type = 1 THEN AgeingBalance ELSE Comp_AgeingBalance END) AS AgeingBalance_Final, Start30, Second60, Third90, Fourth90Above, AgeingBalance, Comp_Start30, Comp_Second60, Comp_Third90, Comp_Fourth90Above, Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS Company_OpeningBalance, ISNULL(trans.cmp_dr, 0) AS Company_DebitAmount, ISNULL(trans.cmp_cr, 0) AS Company_CreditAmount, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS Company_ClosingBalance, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id FROM Set_Suppliers WHERE Set_Suppliers.Account_No = @SupplierAccount_No AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND Set_Suppliers.IsActive = 'True') set_suppliers LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.AccTransId=@SupplierAccount_No AND Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_suppliers.Supplier_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_suppliers.Supplier_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN Set_Suppliers ON Set_Suppliers.Supplier_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = Set_Suppliers.Supplier_Id) tbl_final ORDER BY Name END END";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter PROCEDURE [dbo].[sp_Ac_AllSupplierDetail_SelectRow] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @SupplierAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @Currency_Type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT Company_Id, Brand_Id, Supplier_Id, Name, (CASE WHEN @Currency_Type = 1 THEN Opening_Balance ELSE Company_OpeningBalance END) AS Opening_Final, (CASE WHEN @Currency_Type = 1 THEN Debit_Amount ELSE Company_DebitAmount END) AS Debit_Final, (CASE WHEN @Currency_Type = 1 THEN Credit_Amount ELSE Company_CreditAmount END) AS Credit_Final, (CASE WHEN @Currency_Type = 1 THEN Closing_Balance ELSE Company_ClosingBalance END) AS Closing_Final, Opening_Balance, Debit_Amount, Credit_Amount, Closing_Balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, Company_OpeningBalance, Company_DebitAmount, Company_CreditAmount, Company_ClosingBalance, (CASE WHEN @Currency_Type = 1 THEN Start30 ELSE Comp_Start30 END) AS Start30_Final, (CASE WHEN @Currency_Type = 1 THEN Second60 ELSE comp_second60 END) AS Second60_Final, (CASE WHEN @Currency_Type = 1 THEN Third90 ELSE Comp_third90 END) AS Third90_Final, (CASE WHEN @Currency_Type = 1 THEN Fourth90Above ELSE Comp_fourth90above END) AS Fourth90above_Final, (CASE WHEN @Currency_Type = 1 THEN AgeingBalance ELSE Comp_AgeingBalance END) AS AgeingBalance_Final, Start30, Second60, Third90, Fourth90Above, AgeingBalance, Comp_Start30, Comp_Second60, Comp_Third90, Comp_Fourth90Above, Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS Company_OpeningBalance, ISNULL(trans.cmp_dr, 0) AS Company_DebitAmount, ISNULL(trans.cmp_cr, 0) AS Company_CreditAmount, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS Company_ClosingBalance, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id FROM Set_Suppliers WHERE Set_Suppliers.Account_No = @SupplierAccount_No AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND Set_Suppliers.IsActive = 'True') set_suppliers LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.AccTransId=@SupplierAccount_No AND Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_suppliers.Supplier_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_suppliers.Supplier_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN Set_Suppliers ON Set_Suppliers.Supplier_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = Set_Suppliers.Supplier_Id) tbl_final ORDER BY Name END END";
    //        objDa.execute_Command(strsql);
    //    }

    //    //09-111-2016

    //    try
    //    {
    //        strsql = "create Procedure [dbo].[sp_Inv_PhysicalHeader_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @AccountNo nvarchar(max), @VoucherNo nvarchar(20), @Vdate datetime, @Remark nvarchar(max), @NetAmount numeric(18,6), @Post bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ReferenceID int output As Begin insert into Inv_PhysicalHeader ( Company_Id, Brand_Id, Location_Id, AccountNo, VoucherNo, Vdate, Remark, NetAmount, Post, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate ) values ( @Company_Id, @Brand_Id, @Location_Id, @AccountNo, @VoucherNo, @Vdate, @Remark, @NetAmount, @Post, @Field1, @Field2, @Field3, @Field4, @Field5, @Field6, @Field7, @IsActive, @CreatedBy, @CreatedDate ) select @ReferenceID =SCOPE_IDENTITY() return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }
    //    catch
    //    {
    //        strsql = "alter Procedure [dbo].[sp_Inv_PhysicalHeader_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @AccountNo nvarchar(max), @VoucherNo nvarchar(20), @Vdate datetime, @Remark nvarchar(max), @NetAmount numeric(18,6), @Post bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ReferenceID int output As Begin insert into Inv_PhysicalHeader ( Company_Id, Brand_Id, Location_Id, AccountNo, VoucherNo, Vdate, Remark, NetAmount, Post, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate ) values ( @Company_Id, @Brand_Id, @Location_Id, @AccountNo, @VoucherNo, @Vdate, @Remark, @NetAmount, @Post, @Field1, @Field2, @Field3, @Field4, @Field5, @Field6, @Field7, @IsActive, @CreatedBy, @CreatedDate ) select @ReferenceID =SCOPE_IDENTITY() return @ReferenceID End";
    //        objDa.execute_Command(strsql);
    //    }


    //    try
    //    {
    //        strsql = "select * from inv_parametermaster where ParameterName='Is Sales Below Cost Price'";
    //        if (objDa.return_DataTable(strsql).Rows.Count == 0)
    //        {

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (1           ,1           ,1          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,1          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,2         ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);
    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,3         ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);
    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,4          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,3           ,5          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,6          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);

    //            strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,7          ,'Is Sales Below Cost Price'           ,'True'          ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
    //            objDa.execute_Command(strsql);



    //        }
    //    }
    //    catch
    //    {

    //    }


    //    DisplayMessage("Database updated Successfully");
    //    return;
    //}

    public void ExecuteSqlScript()
    {


        string strsql = string.Empty;


        try
        {
            strsql = "update Ac_SubChartOfAccount set FinancialYearId=2 where FinancialYearId is null or FinancialYearId=' '";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }


        try
        {
            strsql = "CREATE FUNCTION [dbo].[Ac_GetBalance] ( @Company_Id int, @Brand_Id int, @Location_Id Nvarchar(Max), @ToDate datetime, @group_id int, @Account_no int, @other_account_no int, @currency_type int ) RETURNS float AS BEGIN declare @FromDate datetime declare @ob float declare @transaction_balance float declare @cb float set @ob=(select (case when @currency_type=1 then SUM(isnull(Ac_SubChartOfAccount.LDr_Amount-Ac_SubChartOfAccount.LCr_Amount,0)) else SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float)-cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) end) from ac_subChartOfAccount left join Ac_ChartOfAccount on ac_subChartOfAccount.AccTransId = Ac_ChartOfAccount.Trans_Id left join Ac_Groups on ac_groups.Ac_Group_Id=Ac_ChartOfAccount.Acc_Group_Id where Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and (Case when @group_id>0 and @Account_no=0 and @other_account_no=0 then Ac_ChartOfAccount.Acc_Group_Id else 0 End=@group_id) and (Case when @Account_no>0 then Ac_SubChartOfAccount.AccTransId else 0 End=@Account_No) and (Case when @Other_account_no>0 then Ac_SubChartOfAccount.Other_Account_No else 0 End=@Other_account_no)) set @transaction_balance=(select sum((case when @currency_type=1 then VD.Debit_Amount-VD.Credit_Amount else vd.CompanyCurrDebit-vd.CompanyCurrCredit end)) from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No left join Ac_ChartOfAccount on vd.Account_No=Ac_ChartOfAccount.trans_id where vd.Company_Id=@Company_Id and vd.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive=1 and Ac_Voucher_Header.Voucher_Date <= @ToDate and Ac_Voucher_Header.ReconciledFromFinance=1 and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') and (Case when @group_id>0 and @Account_no=0 and @other_account_no=0 then Ac_ChartOfAccount.Acc_Group_Id else 0 End=@group_id) and (Case when @Account_no>0 then vd.Account_No else 0 End=@Account_No) and (Case when @Other_account_no>0 then vd.Other_Account_No else 0 End=@Other_account_no)) set @cb= isnull(@ob,0)+isnull(@transaction_balance,0) return @cb END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "Alter FUNCTION [dbo].[Ac_GetBalance] ( @Company_Id int, @Brand_Id int, @Location_Id Nvarchar(Max), @ToDate datetime, @group_id int, @Account_no int, @other_account_no int, @currency_type int ) RETURNS float AS BEGIN declare @FromDate datetime declare @ob float declare @transaction_balance float declare @cb float set @ob=(select (case when @currency_type=1 then SUM(isnull(Ac_SubChartOfAccount.LDr_Amount-Ac_SubChartOfAccount.LCr_Amount,0)) else SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float)-cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) end) from ac_subChartOfAccount left join Ac_ChartOfAccount on ac_subChartOfAccount.AccTransId = Ac_ChartOfAccount.Trans_Id left join Ac_Groups on ac_groups.Ac_Group_Id=Ac_ChartOfAccount.Acc_Group_Id where Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and (Case when @group_id>0 and @Account_no=0 and @other_account_no=0 then Ac_ChartOfAccount.Acc_Group_Id else 0 End=@group_id) and (Case when @Account_no>0 then Ac_SubChartOfAccount.AccTransId else 0 End=@Account_No) and (Case when @Other_account_no>0 then Ac_SubChartOfAccount.Other_Account_No else 0 End=@Other_account_no)) set @transaction_balance=(select sum((case when @currency_type=1 then VD.Debit_Amount-VD.Credit_Amount else vd.CompanyCurrDebit-vd.CompanyCurrCredit end)) from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No left join Ac_ChartOfAccount on vd.Account_No=Ac_ChartOfAccount.trans_id where vd.Company_Id=@Company_Id and vd.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive=1 and Ac_Voucher_Header.Voucher_Date <= @ToDate and Ac_Voucher_Header.ReconciledFromFinance=1 and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') and (Case when @group_id>0 and @Account_no=0 and @other_account_no=0 then Ac_ChartOfAccount.Acc_Group_Id else 0 End=@group_id) and (Case when @Account_no>0 then vd.Account_No else 0 End=@Account_No) and (Case when @Other_account_no>0 then vd.Other_Account_No else 0 End=@Other_account_no)) set @cb= isnull(@ob,0)+isnull(@transaction_balance,0) return @cb END";
            objDa.execute_Command(strsql);

        }

        try
        {
            strsql = "Create FUNCTION [dbo].[fn_Ac_allAccounts_Balance] ( @company_id int, @brand_id int, @location_id varchar, @nature_of_account nvarchar(50), @primary_group_id int, @To_date datetime, @currency_type int, @customer_account_no int, @supplier_account_no int, @depth int, @counter int, @cb_gt float ) RETURNS @tbl_balance TABLE ( _id int NULL, nature_of_account int NULL, group_id int NULL, parent_id int NULL, account_no int NULL, other_account_no int NULL, name nvarchar(50) NULL, name_l nvarchar(50) NULL, cb float DEFAULT 0 NULL, cb_type varchar(2) NULL ) AS BEGIN DECLARE @id int, @current_nature_of_account int, @Group_id int, @account_no int, @other_account_no int, @name nvarchar(50), @name_l nvarchar(50), @cb float, @cb_type varchar(2), @currency varchar(50), @counter_bookmark int, @group_id_bookmark int declare @nest_company_id int, @nest_brand_id int, @nest_location_id varchar, @nest_To_date datetime, @nest_currency_type int, @nest_customer_account_no int, @nest_supplier_account_no int, @nest_depth int, @nest_counter int, @nest_cb_gt float declare @nest_id int , @nest_nature_of_account int, @nest_group_id int, @nest_parent_id int, @nest_account_no int, @nest_other_account_no int, @nest_name nvarchar(50), @nest_name_l nvarchar(50), @nest_cb float, @nest_cb_type varchar(2) declare @parent_bookmark int set @parent_bookmark=@counter declare @rec_count int set @rec_count=0 DECLARE cur_ac_group CURSOR LOCAL FOR SELECT ac_group_id, Ac_GroupName, Ac_GroupNameL, N_Group_ID FROM Ac_Groups WHERE Company_Id = @company_id AND Brand_Id = @brand_id AND N_Group_ID in (SELECT CAST(Value AS INT) FROM F_Split(@nature_of_account, ',')) AND Parant_Ac_Group_Id = @primary_group_id ORDER BY N_Group_ID,Ac_GroupName OPEN cur_ac_group FETCH NEXT FROM cur_ac_group INTO @group_id, @name, @name_l,@current_nature_of_account WHILE @@FETCH_STATUS = 0 BEGIN set @cb=0 set @counter=@counter+1 set @name=SPACE(@depth*5)+@name SET @counter_bookmark = @counter SET @Group_id_bookmark = @Group_id INSERT INTO @tbl_balance VALUES (@counter, @current_nature_of_account, @group_id, @parent_bookmark, 0, 0, @name, @name_l, 0, 'DR') BEGIN DECLARE cur_nested_group CURSOR LOCAL FOR select * from dbo.fn_Ac_allAccounts_Balance(@company_id,@brand_id,@location_id,@current_nature_of_account, @group_id,@To_date,@currency_type,@customer_account_no,@supplier_account_no, @depth+1,@counter,@cb)ab OPEN cur_nested_group FETCH NEXT FROM cur_nested_group INTO @nest_id,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type WHILE @@FETCH_STATUS = 0 BEGIN SET @counter = @counter + 1 if (@nest_account_no>0) BEGIN set @cb_gt=@cb_gt+@nest_cb END INSERT INTO @tbl_balance VALUES (@counter,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type) FETCH NEXT FROM cur_nested_group INTO @nest_id,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type END CLOSE cur_nested_group DEALLOCATE cur_nested_group END update @tbl_balance set cb=@cb_gt,cb_type=(case when @cb_gt>0 then 'DR' else 'CR' end) where _id=@counter_bookmark set @cb_gt=0 FETCH NEXT FROM cur_ac_group INTO @group_id, @name, @name_l,@current_nature_of_account END CLOSE cur_ac_group DEALLOCATE cur_ac_group set @rec_count=(select COUNT(Trans_Id) FROM Ac_ChartOfAccount WHERE Company_Id = @company_id AND Acc_Group_Id = @primary_group_id) if @rec_count>0 BEGIN DECLARE cur_chart_of_account CURSOR LOCAL FOR SELECT Trans_Id, AccountName, AccountNameL,(select dbo.ac_getBalance(@company_id,@brand_id,@location_id,@To_date,0,ac_chartOfAccount.Trans_Id,0,@currency_type))as balance FROM Ac_ChartOfAccount WHERE Company_Id = @company_id AND Acc_Group_Id = @primary_group_id ORDER BY AccountName OPEN cur_chart_of_account FETCH NEXT FROM cur_chart_of_account INTO @Account_no, @name, @name_l, @cb WHILE @@FETCH_STATUS = 0 BEGIN SET @counter = @counter + 1 SET @name = space(@depth*5) + @name SET @name_l = space(@depth*5) + @name_l set @cb_gt=@cb_gt+@cb INSERT INTO @tbl_balance VALUES (@counter, @nature_of_account, @primary_group_id, @parent_bookmark, @account_no, 0, @name, @name_l, @cb, (Case when @cb>0 then 'DR' else 'CR' end)) FETCH NEXT FROM cur_chart_of_account INTO @Account_no, @name, @name_l, @cb END CLOSE cur_chart_of_account DEALLOCATE cur_chart_of_account END RETURN END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter FUNCTION [dbo].[fn_Ac_allAccounts_Balance] ( @company_id int, @brand_id int, @location_id varchar, @nature_of_account nvarchar(50), @primary_group_id int, @To_date datetime, @currency_type int, @customer_account_no int, @supplier_account_no int, @depth int, @counter int, @cb_gt float ) RETURNS @tbl_balance TABLE ( _id int NULL, nature_of_account int NULL, group_id int NULL, parent_id int NULL, account_no int NULL, other_account_no int NULL, name nvarchar(50) NULL, name_l nvarchar(50) NULL, cb float DEFAULT 0 NULL, cb_type varchar(2) NULL ) AS BEGIN DECLARE @id int, @current_nature_of_account int, @Group_id int, @account_no int, @other_account_no int, @name nvarchar(50), @name_l nvarchar(50), @cb float, @cb_type varchar(2), @currency varchar(50), @counter_bookmark int, @group_id_bookmark int declare @nest_company_id int, @nest_brand_id int, @nest_location_id varchar, @nest_To_date datetime, @nest_currency_type int, @nest_customer_account_no int, @nest_supplier_account_no int, @nest_depth int, @nest_counter int, @nest_cb_gt float declare @nest_id int , @nest_nature_of_account int, @nest_group_id int, @nest_parent_id int, @nest_account_no int, @nest_other_account_no int, @nest_name nvarchar(50), @nest_name_l nvarchar(50), @nest_cb float, @nest_cb_type varchar(2) declare @parent_bookmark int set @parent_bookmark=@counter declare @rec_count int set @rec_count=0 DECLARE cur_ac_group CURSOR LOCAL FOR SELECT ac_group_id, Ac_GroupName, Ac_GroupNameL, N_Group_ID FROM Ac_Groups WHERE Company_Id = @company_id AND Brand_Id = @brand_id AND N_Group_ID in (SELECT CAST(Value AS INT) FROM F_Split(@nature_of_account, ',')) AND Parant_Ac_Group_Id = @primary_group_id ORDER BY N_Group_ID,Ac_GroupName OPEN cur_ac_group FETCH NEXT FROM cur_ac_group INTO @group_id, @name, @name_l,@current_nature_of_account WHILE @@FETCH_STATUS = 0 BEGIN set @cb=0 set @counter=@counter+1 set @name=SPACE(@depth*5)+@name SET @counter_bookmark = @counter SET @Group_id_bookmark = @Group_id INSERT INTO @tbl_balance VALUES (@counter, @current_nature_of_account, @group_id, @parent_bookmark, 0, 0, @name, @name_l, 0, 'DR') BEGIN DECLARE cur_nested_group CURSOR LOCAL FOR select * from dbo.fn_Ac_allAccounts_Balance(@company_id,@brand_id,@location_id,@current_nature_of_account, @group_id,@To_date,@currency_type,@customer_account_no,@supplier_account_no, @depth+1,@counter,@cb)ab OPEN cur_nested_group FETCH NEXT FROM cur_nested_group INTO @nest_id,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type WHILE @@FETCH_STATUS = 0 BEGIN SET @counter = @counter + 1 if (@nest_account_no>0) BEGIN set @cb_gt=@cb_gt+@nest_cb END INSERT INTO @tbl_balance VALUES (@counter,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type) FETCH NEXT FROM cur_nested_group INTO @nest_id,@nest_nature_of_account,@nest_group_id, @nest_parent_id,@nest_account_no,@nest_other_account_no,@nest_name,@nest_name_l,@nest_cb, @nest_cb_type END CLOSE cur_nested_group DEALLOCATE cur_nested_group END update @tbl_balance set cb=@cb_gt,cb_type=(case when @cb_gt>0 then 'DR' else 'CR' end) where _id=@counter_bookmark set @cb_gt=0 FETCH NEXT FROM cur_ac_group INTO @group_id, @name, @name_l,@current_nature_of_account END CLOSE cur_ac_group DEALLOCATE cur_ac_group set @rec_count=(select COUNT(Trans_Id) FROM Ac_ChartOfAccount WHERE Company_Id = @company_id AND Acc_Group_Id = @primary_group_id) if @rec_count>0 BEGIN DECLARE cur_chart_of_account CURSOR LOCAL FOR SELECT Trans_Id, AccountName, AccountNameL,(select dbo.ac_getBalance(@company_id,@brand_id,@location_id,@To_date,0,ac_chartOfAccount.Trans_Id,0,@currency_type))as balance FROM Ac_ChartOfAccount WHERE Company_Id = @company_id AND Acc_Group_Id = @primary_group_id ORDER BY AccountName OPEN cur_chart_of_account FETCH NEXT FROM cur_chart_of_account INTO @Account_no, @name, @name_l, @cb WHILE @@FETCH_STATUS = 0 BEGIN SET @counter = @counter + 1 SET @name = space(@depth*5) + @name SET @name_l = space(@depth*5) + @name_l set @cb_gt=@cb_gt+@cb INSERT INTO @tbl_balance VALUES (@counter, @nature_of_account, @primary_group_id, @parent_bookmark, @account_no, 0, @name, @name_l, @cb, (Case when @cb>0 then 'DR' else 'CR' end)) FETCH NEXT FROM cur_chart_of_account INTO @Account_no, @name, @name_l, @cb END CLOSE cur_chart_of_account DEALLOCATE cur_chart_of_account END RETURN END";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE TABLE [dbo].[Ems_Contact_ProductCategory]( [Company_Id] [int] NOT NULL, [Brand_Id] [int] NOT NULL, [Contact_Id] [int] NOT NULL, [CategoryId] [int] NOT NULL, [Type] [nvarchar](1) NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NULL, [CreatedBy] [nvarchar](255) NULL, [CreatedDate] [datetime] NULL, [ModifiedBy] [nvarchar](255) NULL, [ModifiedDate] [datetime] NULL, [IsActive] [bit] NULL, CONSTRAINT [PK_Set_Contact_ProductCategory] PRIMARY KEY CLUSTERED ( [Company_Id] ASC, [Brand_Id] ASC, [Contact_Id] ASC, [CategoryId] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY]";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        try
        {
            strsql = "CREATE TABLE [dbo].[Inv_SalesCommissionConfiguration_Header]( [Company_Id] [int] NOT NULL, [Brand_Id] [int] NOT NULL, [Location_Id] [int] NOT NULL, [Trans_Id] [int] IDENTITY(1,1) NOT NULL, [Department_Id] [int] NULL, [Employee_Id] [int] NULL, [Parameter_Level] [nchar](50) NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NULL, [IsActive] [bit] NULL, [CreatedBy] [nvarchar](255) NULL, [CreatedDate] [datetime] NULL, [ModifiedBy] [nvarchar](255) NULL, [ModifiedDate] [datetime] NULL, CONSTRAINT [PK_Inv_SalesCommissionConfiguration_Header] PRIMARY KEY CLUSTERED ( [Company_Id] ASC, [Brand_Id] ASC, [Location_Id] ASC, [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY]";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        try
        {
            strsql = "CREATE TABLE [dbo].[Inv_SalesCommissionConfiguration_Detail]( [Company_Id] [int] NOT NULL, [Brand_Id] [int] NOT NULL, [Location_Id] [int] NOT NULL, [Trans_Id] [int] IDENTITY(1,1) NOT NULL, [Ref_Id] [int] NULL, [Category_Id] [int] NULL, [Sales_Quota] [numeric](18, 6) NULL, [Commission_Percentage] [numeric](18, 6) NULL, [Is_Allow] [bit] NULL, [Notes] [nvarchar](max) NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NULL, [IsActive] [bit] NULL, [CreatedBy] [nvarchar](255) NULL, [CreatedDate] [datetime] NULL, [ModifiedBy] [nvarchar](255) NULL, [ModifiedDate] [datetime] NULL, CONSTRAINT [PK_Inv_SalesCommissionConfiguration_Detail] PRIMARY KEY CLUSTERED ( [Company_Id] ASC, [Brand_Id] ASC, [Location_Id] ASC, [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY]";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        try
        {
            strsql = "CREATE TABLE [dbo].[Sys_LocationType_Master]( [Trans_Id] [int] IDENTITY(1,1) NOT NULL, [Location_Type_Name] [nvarchar](255) NULL, [Location_Type_Name_L] [nvarchar](255) NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NULL, [IsActive] [bit] NOT NULL, [CreatedBy] [varchar](11) NOT NULL, [CreatedDate] [datetime] NOT NULL, [ModifiedBy] [varchar](11) NOT NULL, [ModifiedDate] [datetime] NOT NULL, CONSTRAINT [PK_Sys_LocationType_Master] PRIMARY KEY CLUSTERED ( [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY]";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }
        try
        {
            strsql = "CREATE TABLE [dbo].[Inv_ReturnCommisison]( [Company_Id] [int] NOT NULL, [Brand_id] [int] NOT NULL, [Location_Id] [int] NOT NULL, [Trans_Id] [int] IDENTITY(1,1) NOT NULL, [Commision_Person] [int] NULL, [Voucher_Header_Id] [int] NULL, [Voucher_Detail_Id] [int] NULL, [Return_Voucher_Id] [int] NULL, [Return_Amount] [numeric](18, 6) NULL, [Is_Adjustable] [bit] NULL, [Field1] [nvarchar](255) NULL, [Field2] [nvarchar](255) NULL, [Field3] [nvarchar](255) NULL, [Field4] [nvarchar](255) NULL, [Field5] [nvarchar](255) NULL, [Field6] [bit] NULL, [Field7] [datetime] NOT NULL, [IsActive] [bit] NULL, [CreatedBy] [nvarchar](255) NULL, [CreatedDate] [datetime] NULL, [ModifiedBy] [nvarchar](255) NULL, [ModifiedDate] [datetime] NULL, CONSTRAINT [PK_Inv_ReturnCommisison] PRIMARY KEY CLUSTERED ( [Company_Id] ASC, [Brand_id] ASC, [Location_Id] ASC, [Trans_Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY]";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Ems_Contact_ProductCategory_Insert] @Company_Id int, @Brand_Id int, @Contact_Id int, @CategoryId int, @Type nvarchar(1), @Field1 nvarchar(255) = NULL, @Field2 nvarchar(255) = NULL, @Field3 nvarchar(255) = NULL, @Field4 nvarchar(255) = NULL, @Field5 nvarchar(255) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @CreatedBy nvarchar(255) = NULL, @CreatedDate datetime = NULL, @ModifiedBy nvarchar(255) = NULL, @ModifiedDate datetime = NULL, @IsActive bit = NULL, @ReferanceID int output As Begin Insert Into Ems_Contact_ProductCategory ([Company_Id],Brand_Id,[Contact_Id],[CategoryId],[Type],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate],[IsActive]) Values (@Company_Id,@Brand_Id,@Contact_Id,@CategoryId,@Type,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate,@IsActive) select @ReferanceID=@@ROWCOUNT return @ReferanceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ems_Contact_ProductCategory_Insert] @Company_Id int, @Brand_Id int, @Contact_Id int, @CategoryId int, @Type nvarchar(1), @Field1 nvarchar(255) = NULL, @Field2 nvarchar(255) = NULL, @Field3 nvarchar(255) = NULL, @Field4 nvarchar(255) = NULL, @Field5 nvarchar(255) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @CreatedBy nvarchar(255) = NULL, @CreatedDate datetime = NULL, @ModifiedBy nvarchar(255) = NULL, @ModifiedDate datetime = NULL, @IsActive bit = NULL, @ReferanceID int output As Begin Insert Into Ems_Contact_ProductCategory ([Company_Id],Brand_Id,[Contact_Id],[CategoryId],[Type],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate],[IsActive]) Values (@Company_Id,@Brand_Id,@Contact_Id,@CategoryId,@Type,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate,@IsActive) select @ReferanceID=@@ROWCOUNT return @ReferanceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Ems_Contact_ProductCategory_Delete] @Company_Id int, @Brand_Id int, @Contact_Id int, @Type nvarchar(1), @ReferanceId int output As Begin Delete Ems_Contact_ProductCategory Where [Company_Id] = @Company_Id and Brand_Id=@Brand_Id and [Contact_Id] = @Contact_Id and [Type]=@Type select @ReferanceId=@@ROWCOUNT return @ReferanceId End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ems_Contact_ProductCategory_Delete] @Company_Id int, @Brand_Id int, @Contact_Id int, @Type nvarchar(1), @ReferanceId int output As Begin Delete Ems_Contact_ProductCategory Where [Company_Id] = @Company_Id and Brand_Id=@Brand_Id and [Contact_Id] = @Contact_Id and [Type]=@Type select @ReferanceId=@@ROWCOUNT return @ReferanceId End";
            objDa.execute_Command(strsql);

        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_Insert] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @Category_Id int, @Sales_Quota numeric(18,6), @Commission_Percentage numeric(18,6), @Is_Allow bit, @Notes nvarchar(max), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin INSERT INTO [Inv_SalesCommissionConfiguration_Detail] ([Company_Id] ,[Brand_Id] ,[Location_Id] ,[Ref_Id] ,[Category_Id] ,[Sales_Quota] ,[Commission_Percentage] ,[Is_Allow] ,[Notes] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate]) VALUES (@Company_Id ,@Brand_Id ,@Location_Id ,@Ref_Id ,@Category_Id ,@Sales_Quota ,@Commission_Percentage ,@Is_Allow ,@notes ,@Field1 ,@Field2 ,@Field3 ,@Field4 ,@Field5 ,@Field6 ,@Field7 ,@IsActive ,@CreatedBy ,@CreatedDate ,@ModifiedBy ,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_Insert] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @Category_Id int, @Sales_Quota numeric(18,6), @Commission_Percentage numeric(18,6), @Is_Allow bit, @Notes nvarchar(max), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin INSERT INTO [Inv_SalesCommissionConfiguration_Detail] ([Company_Id] ,[Brand_Id] ,[Location_Id] ,[Ref_Id] ,[Category_Id] ,[Sales_Quota] ,[Commission_Percentage] ,[Is_Allow] ,[Notes] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate]) VALUES (@Company_Id ,@Brand_Id ,@Location_Id ,@Ref_Id ,@Category_Id ,@Sales_Quota ,@Commission_Percentage ,@Is_Allow ,@notes ,@Field1 ,@Field2 ,@Field3 ,@Field4 ,@Field5 ,@Field6 ,@Field7 ,@IsActive ,@CreatedBy ,@CreatedDate ,@ModifiedBy ,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_DeleteRow] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @ReferenceID int output As Begin delete from Inv_SalesCommissionConfiguration_Detail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Ref_Id=@Ref_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_DeleteRow] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @ReferenceID int output As Begin delete from Inv_SalesCommissionConfiguration_Detail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Ref_Id=@Ref_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);

        }


        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_ReturnCommisison_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @Commision_Person Int, @Voucher_Header_Id Int, @Voucher_Detail_Id Int, @Return_Voucher_Id int, @Return_Amount numeric(18,6), @Is_Adjustable bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Inv_ReturnCommisison ([Company_Id],[Brand_Id],[Location_Id],[Commision_Person],[Voucher_Header_Id],[Voucher_Detail_Id],[Return_Voucher_Id],[Return_Amount],[Is_Adjustable],[Field1],[Field2],[Field3],[Field4],[field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Company_Id,@Brand_Id,@Location_Id,@Commision_Person,@Voucher_Header_Id,@Voucher_Detail_Id,@Return_Voucher_Id,@Return_Amount,@Is_Adjustable,@Field1,@Field2,@Field3,@Field4,@field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy, @ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_ReturnCommisison_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @Commision_Person Int, @Voucher_Header_Id Int, @Voucher_Detail_Id Int, @Return_Voucher_Id int, @Return_Amount numeric(18,6), @Is_Adjustable bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Inv_ReturnCommisison ([Company_Id],[Brand_Id],[Location_Id],[Commision_Person],[Voucher_Header_Id],[Voucher_Detail_Id],[Return_Voucher_Id],[Return_Amount],[Is_Adjustable],[Field1],[Field2],[Field3],[Field4],[field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Company_Id,@Brand_Id,@Location_Id,@Commision_Person,@Voucher_Header_Id,@Voucher_Detail_Id,@Return_Voucher_Id,@Return_Amount,@Is_Adjustable,@Field1,@Field2,@Field3,@Field4,@field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy, @ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_ReturnCommisison_Update] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Is_Adjustable bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_ReturnCommisison set Is_Adjustable=@Is_Adjustable, ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id Select @ReferenceID = @@ROWCOUNT Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_ReturnCommisison_Update] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Is_Adjustable bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_ReturnCommisison set Is_Adjustable=@Is_Adjustable, ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id Select @ReferenceID = @@ROWCOUNT Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @Department_Id Int, @Employee_Id Int, @Parameter_Level nchar(50), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin INSERT INTO [Inv_SalesCommissionConfiguration_Header] ([Company_Id] ,[Brand_Id] ,[Location_Id] ,[Department_Id] ,[Employee_Id] ,[Parameter_Level] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate]) VALUES (@Company_Id ,@Brand_Id ,@Location_Id ,@Department_Id ,@Employee_Id ,@Parameter_Level ,@Field1 ,@Field2 ,@Field3 ,@Field4 ,@Field5 ,@Field6 ,@Field7 ,@IsActive ,@CreatedBy ,@CreatedDate ,@ModifiedBy ,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @Department_Id Int, @Employee_Id Int, @Parameter_Level nchar(50), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin INSERT INTO [Inv_SalesCommissionConfiguration_Header] ([Company_Id] ,[Brand_Id] ,[Location_Id] ,[Department_Id] ,[Employee_Id] ,[Parameter_Level] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate]) VALUES (@Company_Id ,@Brand_Id ,@Location_Id ,@Department_Id ,@Employee_Id ,@Parameter_Level ,@Field1 ,@Field2 ,@Field3 ,@Field4 ,@Field5 ,@Field6 ,@Field7 ,@IsActive ,@CreatedBy ,@CreatedDate ,@ModifiedBy ,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_DeleteRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesCommissionConfiguration_Header set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_DeleteRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesCommissionConfiguration_Header set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_Update] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Department_Id Int, @Employee_Id Int, @Parameter_Level nchar(50), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesCommissionConfiguration_Header set [Company_Id] = @Company_Id ,[Brand_Id] = @Brand_Id ,[Location_Id] = @Location_Id ,[Department_Id] = @Department_Id ,[Employee_Id] = @Employee_Id ,[Parameter_Level] = @Parameter_Level ,[Field1] = @Field1 ,[Field2] = @Field2 ,[Field3] = @Field3 ,[Field4] = @Field4 ,[Field5] = @Field5 ,[Field6] = @Field6 ,[Field7] = @Field7 ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id Select @ReferenceID = @@ROWCOUNT Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_Update] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Department_Id Int, @Employee_Id Int, @Parameter_Level nchar(50), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesCommissionConfiguration_Header set [Company_Id] = @Company_Id ,[Brand_Id] = @Brand_Id ,[Location_Id] = @Location_Id ,[Department_Id] = @Department_Id ,[Employee_Id] = @Employee_Id ,[Parameter_Level] = @Parameter_Level ,[Field1] = @Field1 ,[Field2] = @Field2 ,[Field3] = @Field3 ,[Field4] = @Field4 ,[Field5] = @Field5 ,[Field6] = @Field6 ,[Field7] = @Field7 ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id Select @ReferenceID = @@ROWCOUNT Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Sys_LocationType_Master_Update] @Trans_Id int, @Location_Type_Name nvarchar(255), @Location_Type_Name_L nvarchar(255), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Update Sys_LocationType_Master Set [Location_Type_Name] = @Location_Type_Name, [Location_Type_Name_L] = @Location_Type_Name_L, [Field1] = @Field1, [Field2] = @Field2, [Field3] = @Field3, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate Where [Trans_Id] = @Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Sys_LocationType_Master_Update] @Trans_Id int, @Location_Type_Name nvarchar(255), @Location_Type_Name_L nvarchar(255), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Update Sys_LocationType_Master Set [Location_Type_Name] = @Location_Type_Name, [Location_Type_Name_L] = @Location_Type_Name_L, [Field1] = @Field1, [Field2] = @Field2, [Field3] = @Field3, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate Where [Trans_Id] = @Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Sys_LocationType_Master_RowStatus] @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Update Sys_LocationType_Master Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Trans_Id] =@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Sys_LocationType_Master_RowStatus] @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Update Sys_LocationType_Master Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Trans_Id] =@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Sys_LocationType_Master_Insert] @Location_Type_Name nvarchar(255), @Location_Type_Name_L nvarchar(255), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy varchar(11), @CreatedDate datetime, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Sys_LocationType_Master (Location_Type_Name,Location_Type_Name_L,[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Location_Type_Name,@Location_Type_Name_L,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Sys_LocationType_Master_Insert] @Location_Type_Name nvarchar(255), @Location_Type_Name_L nvarchar(255), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy varchar(11), @CreatedDate datetime, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Sys_LocationType_Master (Location_Type_Name,Location_Type_Name_L,[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Location_Type_Name,@Location_Type_Name_L,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Ac_Ageing_Detail_RowStatus_ByInvoice] @Company_Id int, @Brand_Id int, @Location_Id int, @Ref_Id int, @Ref_Type nvarchar(max), @Invoice_No nvarchar(max) As Begin Delete from Ac_Ageing_Detail Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Ref_Id]=@Ref_Id and [Ref_Type]=@Ref_Type and [Invoice_No]=@Invoice_No End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_Ageing_Detail_RowStatus_ByInvoice] @Company_Id int, @Brand_Id int, @Location_Id int, @Ref_Id int, @Ref_Type nvarchar(max), @Invoice_No nvarchar(max) As Begin Delete from Ac_Ageing_Detail Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Ref_Id]=@Ref_Id and [Ref_Type]=@Ref_Type and [Invoice_No]=@Invoice_No End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE proc [dbo].[sp_Set_DepartmentMaster_UpdateParentDepId] @OldParentDepId int, @NewParentDepId int, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int Output As Begin update Set_DepartmentMaster set Parent_Id=@NewParentDepId, ModifiedBy=@ModifiedBy, ModifiedDate=@ModifiedDate where Parent_Id=@OldParentDepId select @ReferenceID=@@ROWCOUNT return @ReferenceID END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter proc [dbo].[sp_Set_DepartmentMaster_UpdateParentDepId] @OldParentDepId int, @NewParentDepId int, @ModifiedBy varchar(11), @ModifiedDate datetime, @ReferenceID int Output As Begin update Set_DepartmentMaster set Parent_Id=@NewParentDepId, ModifiedBy=@ModifiedBy, ModifiedDate=@ModifiedDate where Parent_Id=@OldParentDepId select @ReferenceID=@@ROWCOUNT return @ReferenceID END";
            objDa.execute_Command(strsql);
        }



        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Sys_LocationType_Master_SelectRow] @Trans_Id int, @Location_Type_Name nvarchar(255), @Optype int As Begin if(@Optype=1) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master End ELSE IF (@Optype=2) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.ModifiedBy)) as Modified_User From Sys_LocationType_Master Where IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=3) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.ModifiedBy)) as Modified_User From Sys_LocationType_Master Where IsActive='False' order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master Where [Trans_Id] = @Trans_Id and IsActive='True' Order by CreatedDate desc End ELSE IF (@Optype=5) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master Where Location_Type_Name=@Location_Type_Name End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Sys_LocationType_Master_SelectRow] @Trans_Id int, @Location_Type_Name nvarchar(255), @Optype int As Begin if(@Optype=1) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master End ELSE IF (@Optype=2) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.ModifiedBy)) as Modified_User From Sys_LocationType_Master Where IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=3) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_LocationType_Master.ModifiedBy)) as Modified_User From Sys_LocationType_Master Where IsActive='False' order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master Where [Trans_Id] = @Trans_Id and IsActive='True' Order by CreatedDate desc End ELSE IF (@Optype=5) Begin Select [Trans_Id], [Location_Type_Name], [Location_Type_Name_L], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Sys_LocationType_Master Where Location_Type_Name=@Location_Type_Name End End";
            objDa.execute_Command(strsql);
        }



        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Employee_Id Int, @Optype int As Begin if(@Optype=1) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id end if(@Optype=2) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and sh.Trans_Id=@Trans_Id end if(@Optype=3) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and sh.Employee_Id=@Employee_Id end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Employee_Id Int, @Optype int As Begin if(@Optype=1) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id end if(@Optype=2) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and sh.Trans_Id=@Trans_Id end if(@Optype=3) begin select SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Department_Id] ,SH.[Employee_Id] ,SH.[Parameter_Level] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Set_DepartmentMaster.Dep_Name, Set_EmployeeMaster.Emp_Name from Inv_SalesCommissionConfiguration_Header as SH left join Set_DepartmentMaster on sh.Department_Id=Set_DepartmentMaster.Dep_Id left join Set_EmployeeMaster on sh.Employee_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and sh.Employee_Id=@Employee_Id end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_SelectRow] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @Optype int As Begin if(@Optype=1) begin select sd.[Company_Id] , sd.[Brand_Id] , sd.[Location_Id] , sd.[Trans_Id] , sd.[Ref_Id] , sd.[Category_Id] , sd.[Sales_Quota] , sd.[Commission_Percentage] , sd.[Is_Allow] , sd.[Notes] , sd.[Field1] , sd.[Field2] , sd.[Field3] , sd.[Field4] , sd.[Field5] , sd.[Field6] , sd.[Field7] , sd.[IsActive] , sd.[CreatedBy] , sd.[CreatedDate] , sd.[ModifiedBy] , sd.[ModifiedDate] ,Inv_Product_CategoryMaster.Category_Name from Inv_SalesCommissionConfiguration_Detail as SD left join Inv_Product_CategoryMaster on sd.Category_Id=Inv_Product_CategoryMaster.Category_Id where SD.Company_Id=@Company_Id and sd.Brand_Id=@Brand_Id and sd.Location_Id=@Location_Id and SD.Ref_Id=@Ref_Id end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommissionConfiguration_Detail_SelectRow] @Company_Id int, @Brand_Id int , @Location_Id int , @Ref_Id int, @Optype int As Begin if(@Optype=1) begin select sd.[Company_Id] , sd.[Brand_Id] , sd.[Location_Id] , sd.[Trans_Id] , sd.[Ref_Id] , sd.[Category_Id] , sd.[Sales_Quota] , sd.[Commission_Percentage] , sd.[Is_Allow] , sd.[Notes] , sd.[Field1] , sd.[Field2] , sd.[Field3] , sd.[Field4] , sd.[Field5] , sd.[Field6] , sd.[Field7] , sd.[IsActive] , sd.[CreatedBy] , sd.[CreatedDate] , sd.[ModifiedBy] , sd.[ModifiedDate] ,Inv_Product_CategoryMaster.Category_Name from Inv_SalesCommissionConfiguration_Detail as SD left join Inv_Product_CategoryMaster on sd.Category_Id=Inv_Product_CategoryMaster.Category_Id where SD.Company_Id=@Company_Id and sd.Brand_Id=@Brand_Id and sd.Location_Id=@Location_Id and SD.Ref_Id=@Ref_Id end End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_ReturnCommisison_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Commision_Person Int, @Voucher_Header_Id Int, @Voucher_Detail_Id Int, @Return_Voucher_Id int, @Is_Adjustable bit, @Optype Int As Begin if(@Optype=1) begin select Inv_SalesCommission_Detail.field1 as CommisionType,Inv_ReturnCommisison.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id , Inv_ReturnCommisison.Return_Amount from Inv_ReturnCommisison inner join Inv_SalesCommission_Header on Inv_ReturnCommisison.Voucher_Header_Id=Inv_SalesCommission_Header.Trans_id inner join Inv_SalesCommission_Detail on Inv_ReturnCommisison.Voucher_Detail_Id=Inv_SalesCommission_Detail.Trans_Id inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commision_Person end if(@Optype=2) begin select Inv_SalesCommission_Detail.field1 as CommisionType,Inv_ReturnCommisison.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id ,Inv_ReturnCommisison.Return_Amount from Inv_ReturnCommisison inner join Inv_SalesCommission_Header on Inv_ReturnCommisison.Voucher_Header_Id=Inv_SalesCommission_Header.Trans_id inner join Inv_SalesCommission_Detail on Inv_ReturnCommisison.Voucher_Detail_Id=Inv_SalesCommission_Detail.Trans_Id inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_ReturnCommisison.Company_Id=@Company_Id and Inv_ReturnCommisison.Brand_Id=@Brand_Id and Inv_ReturnCommisison.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commision_Person and Inv_ReturnCommisison.Commision_Person=@Commision_Person and Inv_ReturnCommisison.Is_Adjustable=@Is_Adjustable end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_ReturnCommisison_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Commision_Person Int, @Voucher_Header_Id Int, @Voucher_Detail_Id Int, @Return_Voucher_Id int, @Is_Adjustable bit, @Optype Int As Begin if(@Optype=1) begin select Inv_SalesCommission_Detail.field1 as CommisionType,Inv_ReturnCommisison.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id , Inv_ReturnCommisison.Return_Amount from Inv_ReturnCommisison inner join Inv_SalesCommission_Header on Inv_ReturnCommisison.Voucher_Header_Id=Inv_SalesCommission_Header.Trans_id inner join Inv_SalesCommission_Detail on Inv_ReturnCommisison.Voucher_Detail_Id=Inv_SalesCommission_Detail.Trans_Id inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commision_Person end if(@Optype=2) begin select Inv_SalesCommission_Detail.field1 as CommisionType,Inv_ReturnCommisison.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id ,Inv_ReturnCommisison.Return_Amount from Inv_ReturnCommisison inner join Inv_SalesCommission_Header on Inv_ReturnCommisison.Voucher_Header_Id=Inv_SalesCommission_Header.Trans_id inner join Inv_SalesCommission_Detail on Inv_ReturnCommisison.Voucher_Detail_Id=Inv_SalesCommission_Detail.Trans_Id inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_ReturnCommisison.Company_Id=@Company_Id and Inv_ReturnCommisison.Brand_Id=@Brand_Id and Inv_ReturnCommisison.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commision_Person and Inv_ReturnCommisison.Commision_Person=@Commision_Person and Inv_ReturnCommisison.Is_Adjustable=@Is_Adjustable end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Ems_ContactMaster_SelectRow_Report] @Group_Id int, @Status Nvarchar(max), @Optype int As Begin if(@Optype=0) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) as Contact_Company_Name from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.Status,cm.Company_Id end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ems_ContactMaster_SelectRow_Report] @Group_Id int, @Status Nvarchar(max), @Optype int As Begin if(@Optype=0) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) as Contact_Company_Name from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.Status,cm.Company_Id end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Ems_Contact_ProductCategory_SelectRow] @Company_Id int, @Brand_Id int, @Contact_Id int, @CategoryId int, @Type nvarchar(1), @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_Id], [Contact_Id], [CategoryId], [Type], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [IsActive] , (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id=Ems_Contact_ProductCategory.CategoryId) as ProductCategoryName From Ems_Contact_ProductCategory where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Contact_Id=@Contact_Id and [Type]=@Type order by CategoryId desc end if(@Optype=2) begin Select [Company_Id], [Brand_Id], [Contact_Id], [CategoryId], [Type], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [IsActive] From Ems_Contact_ProductCategory where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Type=@Type order by CategoryId desc end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ems_Contact_ProductCategory_SelectRow] @Company_Id int, @Brand_Id int, @Contact_Id int, @CategoryId int, @Type nvarchar(1), @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_Id], [Contact_Id], [CategoryId], [Type], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [IsActive] , (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id=Ems_Contact_ProductCategory.CategoryId) as ProductCategoryName From Ems_Contact_ProductCategory where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Contact_Id=@Contact_Id and [Type]=@Type order by CategoryId desc end if(@Optype=2) begin Select [Company_Id], [Brand_Id], [Contact_Id], [CategoryId], [Type], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [IsActive] From Ems_Contact_ProductCategory where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Type=@Type order by CategoryId desc end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE PROCEDURE [dbo].[sp_Inv_SalesCommission_Summary_Report] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN with tb as( select Sh.Voucher_No,sh.Voucher_Date, case when sh.Field1='Agent' then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) end as Commission_Person, Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Cm.Name as CustomerName, Pm.ProductCode,EMP.Emp_Name as Salesperson,Inv_SalesCommission_Employee_Detail.Commission_Amount, Inv_SalesCommission_Employee_Detail.Is_Paid, Inv_SalesCommission_Detail.Is_Receive, Sh.From_Date, Sh.To_Date, case when Inv_SalesCommission_Employee_Detail.Is_Paid='True' then Inv_SalesCommission_Employee_Detail.Commission_Amount else 0 end as PaidAmount, case when Inv_SalesCommission_Employee_Detail.Is_Paid='True' then 0 else Inv_SalesCommission_Employee_Detail.Commission_Amount end as RemainAmount from Inv_SalesCommission_Header as Sh inner join Inv_SalesCommission_Detail on Sh.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Ems_ContactMaster as Cm on Inv_SalesCommission_Detail.Customer_Id=Cm.Trans_Id inner join Inv_ProductMaster as Pm on Inv_SalesCommission_Detail.Product_Id=Pm.ProductId inner join Inv_SalesInvoiceHeader on Inv_SalesCommission_Detail.Invoice_Id=Inv_SalesInvoiceHeader.Trans_Id inner join Set_EmployeeMaster as EMP on Inv_SalesInvoiceHeader.SalesPerson_Id=EMP.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id) select Commission_Person,DATENAME(MONTH,From_Date)+'-'+DATENAME(YEAR,From_Date) as MonthName, SUM(Commission_Amount) as Commission_Amount,SUM(PaidAmount) as PaidAmount,SUM(RemainAmount) as RemainAmount from tb group by Commission_Person,From_Date,To_Date END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter PROCEDURE [dbo].[sp_Inv_SalesCommission_Summary_Report] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN with tb as( select Sh.Voucher_No,sh.Voucher_Date, case when sh.Field1='Agent' then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) end as Commission_Person, Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Cm.Name as CustomerName, Pm.ProductCode,EMP.Emp_Name as Salesperson,Inv_SalesCommission_Employee_Detail.Commission_Amount, Inv_SalesCommission_Employee_Detail.Is_Paid, Inv_SalesCommission_Detail.Is_Receive, Sh.From_Date, Sh.To_Date, case when Inv_SalesCommission_Employee_Detail.Is_Paid='True' then Inv_SalesCommission_Employee_Detail.Commission_Amount else 0 end as PaidAmount, case when Inv_SalesCommission_Employee_Detail.Is_Paid='True' then 0 else Inv_SalesCommission_Employee_Detail.Commission_Amount end as RemainAmount from Inv_SalesCommission_Header as Sh inner join Inv_SalesCommission_Detail on Sh.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Ems_ContactMaster as Cm on Inv_SalesCommission_Detail.Customer_Id=Cm.Trans_Id inner join Inv_ProductMaster as Pm on Inv_SalesCommission_Detail.Product_Id=Pm.ProductId inner join Inv_SalesInvoiceHeader on Inv_SalesCommission_Detail.Invoice_Id=Inv_SalesInvoiceHeader.Trans_Id inner join Set_EmployeeMaster as EMP on Inv_SalesInvoiceHeader.SalesPerson_Id=EMP.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id) select Commission_Person,DATENAME(MONTH,From_Date)+'-'+DATENAME(YEAR,From_Date) as MonthName, SUM(Commission_Amount) as Commission_Amount,SUM(PaidAmount) as PaidAmount,SUM(RemainAmount) as RemainAmount from tb group by Commission_Person,From_Date,To_Date END";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE PROCEDURE [dbo].[sp_Inv_SalesCommission_Header_VoucherReport] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select SH.Voucher_No,SH.Voucher_Date,sh.From_Date,SH.To_Date,sh.Field1 as CommissionType ,Set_EmployeeMaster.Emp_Name as CommissionPerson,sh.Total_Sales_Amount,sh.Total_Comission_Amount,sh.Field3 as TotalReturnCommission,sh.Field4 as TotalActualCommission,sh.Total_Received_Amount,sh.Total_Paid_Amount,sh.Total_Remain_Amount,sh.Field2 as TotalUnpaidBalace from Inv_SalesCommission_Header as SH left join Set_EmployeeMaster on sh.Emp_Id=Set_EmployeeMaster.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter PROCEDURE [dbo].[sp_Inv_SalesCommission_Header_VoucherReport] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select SH.Voucher_No,SH.Voucher_Date,sh.From_Date,SH.To_Date,sh.Field1 as CommissionType ,Set_EmployeeMaster.Emp_Name as CommissionPerson,sh.Total_Sales_Amount,sh.Total_Comission_Amount,sh.Field3 as TotalReturnCommission,sh.Field4 as TotalActualCommission,sh.Total_Received_Amount,sh.Total_Paid_Amount,sh.Total_Remain_Amount,sh.Field2 as TotalUnpaidBalace from Inv_SalesCommission_Header as SH left join Set_EmployeeMaster on sh.Emp_Id=Set_EmployeeMaster.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id END";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE PROCEDURE [dbo].[sp_Inv_SalesCommission_Header_InvoiceReport] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select Invoice_No,Invoice_Date,MAX(CAST( Field2 as decimal(18,6))) as InvoiceAmount,SUM(Comission_Amount) as TotalCommission from Inv_SalesCommission_Detail group by Invoice_Id ,Invoice_No,Invoice_Date,Company_Id,Brand_Id,Location_Id having Inv_SalesCommission_Detail.Company_Id=@Company_Id and Inv_SalesCommission_Detail.Brand_Id=@Brand_id and Inv_SalesCommission_Detail.Location_Id=@Location_Id order by Invoice_Date END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter PROCEDURE [dbo].[sp_Inv_SalesCommission_Header_InvoiceReport] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select Invoice_No,Invoice_Date,MAX(CAST( Field2 as decimal(18,6))) as InvoiceAmount,SUM(Comission_Amount) as TotalCommission from Inv_SalesCommission_Detail group by Invoice_Id ,Invoice_No,Invoice_Date,Company_Id,Brand_Id,Location_Id having Inv_SalesCommission_Detail.Company_Id=@Company_Id and Inv_SalesCommission_Detail.Brand_Id=@Brand_id and Inv_SalesCommission_Detail.Location_Id=@Location_Id order by Invoice_Date END";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommission_Employee_Detail_Update] @Trans_Id int, @Is_Paid bit, @Paid_Date datetime, @ReferanceId int output As Begin update Inv_SalesCommission_Employee_Detail set Is_Paid=@Is_Paid,Paid_Date=@Paid_Date where Trans_Id=@Trans_Id select @ReferanceID=@@ROWCOUNT return @ReferanceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommission_Employee_Detail_Update] @Trans_Id int, @Is_Paid bit, @Paid_Date datetime, @ReferanceId int output As Begin update Inv_SalesCommission_Employee_Detail set Is_Paid=@Is_Paid,Paid_Date=@Paid_Date where Trans_Id=@Trans_Id select @ReferanceID=@@ROWCOUNT return @ReferanceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommission_Detail_Update] @Trans_Id int, @Is_Receive int , @Is_Return Nvarchar(255) , @ReferenceID int output As Begin update Inv_SalesCommission_Detail set Is_Receive=@Is_Receive,Field3=@Is_return where Trans_Id=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommission_Detail_Update] @Trans_Id int, @Is_Receive int , @Is_Return Nvarchar(255) , @ReferenceID int output As Begin update Inv_SalesCommission_Detail set Is_Receive=@Is_Receive,Field3=@Is_return where Trans_Id=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Inv_SalesCommission_Detail_SelectPendingCommission] @Company_Id int, @Brand_Id int , @Location_Id int , @FromDate datetime, @Todate datetime, @Commission_Person int, @Invoice_Id int, @Product_Id int, @Optype int As Begin if(@Optype=1) begin select Inv_SalesCommission_Employee_Detail.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Trans_Id as DetailTransId,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commission_Person and (Inv_SalesCommission_Detail.Is_Receive='False' or Inv_SalesCommission_Detail.Field3='False') and Inv_SalesCommission_Header.From_Date>=@FromDate and Inv_SalesCommission_Header.To_Date<=@Todate and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end if(@Optype=2) begin select Inv_SalesCommission_Employee_Detail.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Trans_Id as DetailTransId,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id,Inv_SalesCommission_Detail.field1 as CommisionType from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commission_Person and Inv_SalesCommission_Detail.Is_Receive='True' and Inv_SalesCommission_Employee_Detail.Is_Paid='False' and Inv_SalesCommission_Header.From_Date>=@FromDate and Inv_SalesCommission_Header.To_Date<=@Todate and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end if(@Optype=3) begin select Inv_SalesCommission_Header.Trans_Id as Voucher_header_Id,Inv_SalesCommission_Detail.Trans_Id as Detail_Voucher_Id, Inv_SalesCommission_Employee_Detail.Commission_Person,Inv_SalesCommission_Employee_Detail.Commission_Percentage from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Detail.Invoice_Id=@Invoice_Id and Inv_SalesCommission_Detail.Product_Id =@Product_Id and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesCommission_Detail_SelectPendingCommission] @Company_Id int, @Brand_Id int , @Location_Id int , @FromDate datetime, @Todate datetime, @Commission_Person int, @Invoice_Id int, @Product_Id int, @Optype int As Begin if(@Optype=1) begin select Inv_SalesCommission_Employee_Detail.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Trans_Id as DetailTransId,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commission_Person and (Inv_SalesCommission_Detail.Is_Receive='False' or Inv_SalesCommission_Detail.Field3='False') and Inv_SalesCommission_Header.From_Date>=@FromDate and Inv_SalesCommission_Header.To_Date<=@Todate and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end if(@Optype=2) begin select Inv_SalesCommission_Employee_Detail.Trans_Id,Inv_SalesCommission_Header.Voucher_No,Inv_SalesCommission_Header.Voucher_Date,Inv_SalesCommission_Detail.Trans_Id as DetailTransId,Inv_SalesCommission_Detail.Invoice_Id,Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Ems_ContactMaster.Name as CustomerName,Inv_SalesCommission_Detail.Field2 as InvoiceAmount,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName,Inv_SalesCommission_Employee_Detail.Commission_Percentage ,Inv_SalesCommission_Employee_Detail.Commission_Amount,Inv_SalesCommission_Detail.Is_Receive,Inv_SalesCommission_Detail.Field3 as IsReturn,Inv_SalesCommission_Detail.Product_Id,Inv_SalesCommission_Detail.field1 as CommisionType from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Employee_Detail.Commission_Person=@Commission_Person and Inv_SalesCommission_Detail.Is_Receive='True' and Inv_SalesCommission_Employee_Detail.Is_Paid='False' and Inv_SalesCommission_Header.From_Date>=@FromDate and Inv_SalesCommission_Header.To_Date<=@Todate and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end if(@Optype=3) begin select Inv_SalesCommission_Header.Trans_Id as Voucher_header_Id,Inv_SalesCommission_Detail.Trans_Id as Detail_Voucher_Id, Inv_SalesCommission_Employee_Detail.Commission_Person,Inv_SalesCommission_Employee_Detail.Commission_Percentage from Inv_SalesCommission_Header inner join Inv_SalesCommission_Detail on Inv_SalesCommission_Header.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Inv_ProductMaster on Inv_SalesCommission_Detail.Product_Id=Inv_ProductMaster.ProductId inner join Ems_ContactMaster on Inv_SalesCommission_Detail.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesCommission_Header.Company_Id=@Company_Id and Inv_SalesCommission_Header.Brand_Id=@Brand_Id and Inv_SalesCommission_Header.Location_Id=@Location_Id and Inv_SalesCommission_Detail.Invoice_Id=@Invoice_Id and Inv_SalesCommission_Detail.Product_Id =@Product_Id and Inv_SalesCommission_Header.Post='True' order by Inv_SalesCommission_Header.Voucher_Date end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE PROCEDURE [dbo].[sp_Inv_SalesCommission_Detail_Report] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select Sh.Voucher_No,sh.Voucher_Date, case when sh.Field1='Agent' then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) end as Commission_Person, Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Cm.Name as CustomerName, Pm.ProductCode,EMP.Emp_Name as Salesperson,Inv_SalesCommission_Employee_Detail.Commission_Amount, Inv_SalesCommission_Employee_Detail.Is_Paid, Inv_SalesCommission_Detail.Is_Receive from Inv_SalesCommission_Header as Sh inner join Inv_SalesCommission_Detail on Sh.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Ems_ContactMaster as Cm on Inv_SalesCommission_Detail.Customer_Id=Cm.Trans_Id inner join Inv_ProductMaster as Pm on Inv_SalesCommission_Detail.Product_Id=Pm.ProductId inner join Inv_SalesInvoiceHeader on Inv_SalesCommission_Detail.Invoice_Id=Inv_SalesInvoiceHeader.Trans_Id inner join Set_EmployeeMaster as EMP on Inv_SalesInvoiceHeader.SalesPerson_Id=EMP.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter PROCEDURE [dbo].[sp_Inv_SalesCommission_Detail_Report] @Company_Id int, @Brand_id int, @Location_Id Int AS BEGIN select Sh.Voucher_No,sh.Voucher_Date, case when sh.Field1='Agent' then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=Inv_SalesCommission_Employee_Detail.Commission_Person) end as Commission_Person, Inv_SalesCommission_Detail.Invoice_No,Inv_SalesCommission_Detail.Invoice_Date,Cm.Name as CustomerName, Pm.ProductCode,EMP.Emp_Name as Salesperson,Inv_SalesCommission_Employee_Detail.Commission_Amount, Inv_SalesCommission_Employee_Detail.Is_Paid, Inv_SalesCommission_Detail.Is_Receive from Inv_SalesCommission_Header as Sh inner join Inv_SalesCommission_Detail on Sh.Trans_Id=Inv_SalesCommission_Detail.Voucher_No inner join Inv_SalesCommission_Employee_Detail on Inv_SalesCommission_Detail.Trans_Id=Inv_SalesCommission_Employee_Detail.Voucher_No inner join Ems_ContactMaster as Cm on Inv_SalesCommission_Detail.Customer_Id=Cm.Trans_Id inner join Inv_ProductMaster as Pm on Inv_SalesCommission_Detail.Product_Id=Pm.ProductId inner join Inv_SalesInvoiceHeader on Inv_SalesCommission_Detail.Invoice_Id=Inv_SalesInvoiceHeader.Trans_Id inner join Set_EmployeeMaster as EMP on Inv_SalesInvoiceHeader.SalesPerson_Id=EMP.Emp_Id where sh.Company_Id=@Company_Id and sh.Brand_Id=@Brand_id and sh.Location_Id=@Location_Id END";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Ac_SubChartOfAccount_RowStatus_ByTransID] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int As Begin Delete from Ac_SubChartOfAccount Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_SubChartOfAccount_RowStatus_ByTransID] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int As Begin Delete from Ac_SubChartOfAccount Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Ac_Voucher_Detail_UpdateReconcileStatus] @Trans_Id int, @Field3 nvarchar(255), @Field4 nvarchar(255), @ReferenceID int output As Begin Update Ac_Voucher_Detail SET [Field3]=@Field3 ,[Field4]=@Field4 Where [Trans_Id] = @Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End ";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_Voucher_Detail_UpdateReconcileStatus] @Trans_Id int, @Field3 nvarchar(255), @Field4 nvarchar(255), @ReferenceID int output As Begin Update Ac_Voucher_Detail SET [Field3]=@Field3 ,[Field4]=@Field4 Where [Trans_Id] = @Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End ";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Ac_SupplierStatement_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Optype int As Begin IF (@Optype=1) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Currency_Id, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Top 1 Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Company_Id=Ac_Voucher_Detail.Other_Account_No) as ContactName, (Select Ems_ContactMaster.Code from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as ContactCode, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No, (Select Set_AddressMaster.Address From Set_AddressMaster where Set_AddressMaster.Trans_Id=(Select top 1 Set_AddressChild.Ref_Id from Set_AddressChild where Set_AddressChild.Add_Type='Contact' and Set_AddressChild.Add_Ref_Id=Ac_Voucher_Detail.Other_Account_No)) as CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_SupplierStatement_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Optype int As Begin IF (@Optype=1) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Currency_Id, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Top 1 Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Company_Id=Ac_Voucher_Detail.Other_Account_No) as ContactName, (Select Ems_ContactMaster.Code from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as ContactCode, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No, (Select Set_AddressMaster.Address From Set_AddressMaster where Set_AddressMaster.Trans_Id=(Select top 1 Set_AddressChild.Ref_Id from Set_AddressChild where Set_AddressChild.Add_Type='Contact' and Set_AddressChild.Add_Ref_Id=Ac_Voucher_Detail.Other_Account_No)) as CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Ac_AllSupplierDetail_SelectRow]       @Company_Id int, @Brand_Id int,    @Account_No nvarchar(max),  @SupplierAccount_No int, @Location_Id Nvarchar(Max), @FromDate datetime, @ToDate datetime,   @Currency_Type int,       @Optype int As      Begin      IF (@Optype=1)      Begin   select Company_Id,Brand_Id,Supplier_Id,Name,(case when @Currency_Type=1 then Opening_Balance else Company_OpeningBalance end) as Opening_Final,(case when @Currency_Type=1 then Debit_Amount else Company_DebitAmount end) as Debit_Final,(case when @Currency_Type=1 then Credit_Amount else Company_CreditAmount end) as Credit_Final,(case when @Currency_Type=1 then Closing_Balance else Company_ClosingBalance end) as Closing_Final,Opening_Balance,Debit_Amount,Credit_Amount,Closing_Balance,ForeignOpening_Balance,ForeignDebit_Amount,ForeignCredit_Amount,ForeignClosing_Balance,Company_OpeningBalance,Company_DebitAmount,Company_CreditAmount,Company_ClosingBalance,(case when @Currency_Type=1 then Start30 else Comp_Start30 end) as Start30_Final,(case when @Currency_Type=1 then Second60 else comp_second60 end) as Second60_Final,(case when @Currency_Type=1 then Third90 else Comp_third90 end) as Third90_Final,(case when @Currency_Type=1 then Fourth90Above else Comp_fourth90above end) as Fourth90above_Final,(case when @Currency_Type=1 then AgeingBalance else Comp_AgeingBalance end) as AgeingBalance_Final,Start30,Second60,Third90,Fourth90Above,AgeingBalance,Comp_Start30,Comp_Second60,Comp_Third90,Comp_Fourth90Above,Comp_AgeingBalance from(select Set_Suppliers.Company_Id,Set_Suppliers.Brand_Id,Set_Suppliers.Supplier_Id,ems_contactmaster.Name,((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0)))as Opening_Balance,          isnull(trans.dr,0)as Debit_Amount,isnull(trans.cr,0) as Credit_Amount,           (((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0)) as Closing_Balance,          ((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0)))as ForeignOpening_Balance,          isnull(trans.f_dr,0)as ForeignDebit_Amount,isnull(trans.f_cr,0) as ForeignCredit_Amount,          ((((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as ForeignClosing_Balance,                     ((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0)))as Company_OpeningBalance,          isnull(trans.cmp_dr,0)as Company_DebitAmount,isnull(trans.cmp_cr,0) as Company_CreditAmount,          ((((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as Company_ClosingBalance,                                        (select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Start30,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Second60,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Third90,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Fourth90Above,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as AgeingBalance,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Start30,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Second60,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Third90,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Fourth90Above,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_AgeingBalance                    from (select Set_Suppliers.Company_Id,Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id from Set_Suppliers where Set_Suppliers.Account_No=@SupplierAccount_No and Set_Suppliers.Company_Id=@Company_Id and Set_Suppliers.Brand_Id=@Brand_Id and Set_Suppliers.IsActive='True')set_suppliers           left join          (select Ac_SubChartOfAccount.Other_account_no, SUM(isnull(Ac_SubChartOfAccount.LCr_Amount,0)) as m_o_cr, SUM(isnull(Ac_SubChartOfAccount.LDr_Amount,0)) as m_o_dr, SUM(isnull(cast(Ac_SubChartOfAccount.FCr_Amount as float),0)) as m_f_o_cr,SUM(isnull(cast(Ac_SubChartOfAccount.FDr_Amount as float),0)) as m_f_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float),0)) as m_cmp_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) as m_cmp_o_cr from ac_subChartOfAccount where Ac_SubChartOfAccount.Other_Account_No=@SupplierAccount_No and Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) group by Ac_SubChartOfAccount.Company_Id,Ac_SubChartOfAccount.Brand_Id,Ac_SubChartOfAccount.other_account_no)m_ob on m_ob.other_account_no=set_suppliers.Supplier_Id          left join                              ems_contactmaster on ems_contactmaster.Trans_Id=set_suppliers.Supplier_Id left join          (select VD.Other_Account_No,VD.Company_Id,VD.Brand_Id,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Debit_Amount else 0 end))as dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.Foreign_Amount else 0 end))as f_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Credit_Amount else 0 end))as cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.Credit_Amount else 0 end))as f_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.Debit_Amount else 0 end))as dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.Debit_Amount else 0 end))as f_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.credit_Amount else 0 end))as cr,             sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.credit_Amount else 0 end))as f_cr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No     inner join Set_Suppliers on Set_Suppliers.Supplier_Id=VD.Other_Account_No      where VD.Account_No in (SELECT CAST(Value AS INT) FROM F_Split(@Account_No, ',')) and VD.Other_Account_No!=0 and Set_Suppliers.Company_Id=@Company_Id and Set_Suppliers.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive='True' and Ac_Voucher_Header.ReconciledFromFinance='True'     and Ac_Voucher_Header.Voucher_Date <=@ToDate and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved')    group by VD.Company_Id,VD.Brand_Id,VD.Other_Account_No)trans    on trans.Other_Account_No=Set_Suppliers.Supplier_Id)tbl_final order by Name      End end";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Ac_AllSupplierDetail_SelectRow]       @Company_Id int, @Brand_Id int,    @Account_No nvarchar(max),  @SupplierAccount_No int, @Location_Id Nvarchar(Max), @FromDate datetime, @ToDate datetime,   @Currency_Type int,       @Optype int As      Begin      IF (@Optype=1)      Begin   select Company_Id,Brand_Id,Supplier_Id,Name,(case when @Currency_Type=1 then Opening_Balance else Company_OpeningBalance end) as Opening_Final,(case when @Currency_Type=1 then Debit_Amount else Company_DebitAmount end) as Debit_Final,(case when @Currency_Type=1 then Credit_Amount else Company_CreditAmount end) as Credit_Final,(case when @Currency_Type=1 then Closing_Balance else Company_ClosingBalance end) as Closing_Final,Opening_Balance,Debit_Amount,Credit_Amount,Closing_Balance,ForeignOpening_Balance,ForeignDebit_Amount,ForeignCredit_Amount,ForeignClosing_Balance,Company_OpeningBalance,Company_DebitAmount,Company_CreditAmount,Company_ClosingBalance,(case when @Currency_Type=1 then Start30 else Comp_Start30 end) as Start30_Final,(case when @Currency_Type=1 then Second60 else comp_second60 end) as Second60_Final,(case when @Currency_Type=1 then Third90 else Comp_third90 end) as Third90_Final,(case when @Currency_Type=1 then Fourth90Above else Comp_fourth90above end) as Fourth90above_Final,(case when @Currency_Type=1 then AgeingBalance else Comp_AgeingBalance end) as AgeingBalance_Final,Start30,Second60,Third90,Fourth90Above,AgeingBalance,Comp_Start30,Comp_Second60,Comp_Third90,Comp_Fourth90Above,Comp_AgeingBalance from(select Set_Suppliers.Company_Id,Set_Suppliers.Brand_Id,Set_Suppliers.Supplier_Id,ems_contactmaster.Name,((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0)))as Opening_Balance,          isnull(trans.dr,0)as Debit_Amount,isnull(trans.cr,0) as Credit_Amount,           (((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0)) as Closing_Balance,          ((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0)))as ForeignOpening_Balance,          isnull(trans.f_dr,0)as ForeignDebit_Amount,isnull(trans.f_cr,0) as ForeignCredit_Amount,          ((((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as ForeignClosing_Balance,                     ((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0)))as Company_OpeningBalance,          isnull(trans.cmp_dr,0)as Company_DebitAmount,isnull(trans.cmp_cr,0) as Company_CreditAmount,          ((((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as Company_ClosingBalance,                                        (select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Start30,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Second60,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Third90,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Fourth90Above,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as AgeingBalance,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Start30,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Second60,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Third90,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_Fourth90Above,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_suppliers.Supplier_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_AgeingBalance                    from (select Set_Suppliers.Company_Id,Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id from Set_Suppliers where Set_Suppliers.Account_No=@SupplierAccount_No and Set_Suppliers.Company_Id=@Company_Id and Set_Suppliers.Brand_Id=@Brand_Id and Set_Suppliers.IsActive='True')set_suppliers           left join          (select Ac_SubChartOfAccount.Other_account_no, SUM(isnull(Ac_SubChartOfAccount.LCr_Amount,0)) as m_o_cr, SUM(isnull(Ac_SubChartOfAccount.LDr_Amount,0)) as m_o_dr, SUM(isnull(cast(Ac_SubChartOfAccount.FCr_Amount as float),0)) as m_f_o_cr,SUM(isnull(cast(Ac_SubChartOfAccount.FDr_Amount as float),0)) as m_f_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float),0)) as m_cmp_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) as m_cmp_o_cr from ac_subChartOfAccount where Ac_SubChartOfAccount.Other_Account_No=@SupplierAccount_No and Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) group by Ac_SubChartOfAccount.Company_Id,Ac_SubChartOfAccount.Brand_Id,Ac_SubChartOfAccount.other_account_no)m_ob on m_ob.other_account_no=set_suppliers.Supplier_Id          left join                              ems_contactmaster on ems_contactmaster.Trans_Id=set_suppliers.Supplier_Id left join          (select VD.Other_Account_No,VD.Company_Id,VD.Brand_Id,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Debit_Amount else 0 end))as dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.Foreign_Amount else 0 end))as f_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Credit_Amount else 0 end))as cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.Credit_Amount else 0 end))as f_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.Debit_Amount else 0 end))as dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.Debit_Amount else 0 end))as f_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.credit_Amount else 0 end))as cr,             sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.credit_Amount else 0 end))as f_cr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No     inner join Set_Suppliers on Set_Suppliers.Supplier_Id=VD.Other_Account_No      where VD.Account_No in (SELECT CAST(Value AS INT) FROM F_Split(@Account_No, ',')) and VD.Other_Account_No!=0 and Set_Suppliers.Company_Id=@Company_Id and Set_Suppliers.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive='True' and Ac_Voucher_Header.ReconciledFromFinance='True'     and Ac_Voucher_Header.Voucher_Date <=@ToDate and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved')    group by VD.Company_Id,VD.Brand_Id,VD.Other_Account_No)trans    on trans.Other_Account_No=Set_Suppliers.Supplier_Id)tbl_final order by Name      End end";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "CREATE Procedure [dbo].[sp_Ac_AllStatements_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id Nvarchar(Max), @Account_No int, @Other_Account_No int, @From_Date datetime, @To_Date datetime, @Currency_Type int As Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id,dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, (case when @Currency_Type=1 then dbo.Ac_Voucher_Detail.Debit_Amount else Ac_Voucher_Detail.CompanyCurrDebit end) as Debit_Amount , (case when @Currency_Type=1 then dbo.Ac_Voucher_Detail.Credit_Amount else Ac_Voucher_Detail.CompanyCurrCredit end) as Credit_Amount , dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount,Ac_Voucher_Detail.Field2 as BankReconcilation, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Top 1 Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Company_Id=Ac_Voucher_Detail.Other_Account_No) as ContactName, (Select Ems_ContactMaster.Code from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as ContactCode, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No, (Select Set_AddressMaster.Address From Set_AddressMaster where Set_AddressMaster.Trans_Id=(Select top 1 Set_AddressChild.Ref_Id from Set_AddressChild where Set_AddressChild.Add_Type='Contact' and Set_AddressChild.Add_Ref_Id=Ac_Voucher_Detail.Other_Account_No)) as CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Detail.Account_No=@Account_No and (Case when @Other_Account_No>0 then Ac_Voucher_Detail.Other_Account_No else 0 end) =@Other_Account_No and (Ac_Voucher_Header.Voucher_Date>=@From_Date and Ac_Voucher_Header.Voucher_Date<=@To_Date) and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_AllStatements_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id Nvarchar(Max), @Account_No int, @Other_Account_No int, @From_Date datetime, @To_Date datetime, @Currency_Type int As Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id,dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, (case when @Currency_Type=1 then dbo.Ac_Voucher_Detail.Debit_Amount else Ac_Voucher_Detail.CompanyCurrDebit end) as Debit_Amount , (case when @Currency_Type=1 then dbo.Ac_Voucher_Detail.Credit_Amount else Ac_Voucher_Detail.CompanyCurrCredit end) as Credit_Amount , dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount,Ac_Voucher_Detail.Field2 as BankReconcilation, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Top 1 Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Company_Id=Ac_Voucher_Detail.Other_Account_No) as ContactName, (Select Ems_ContactMaster.Code from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as ContactCode, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No, (Select Set_AddressMaster.Address From Set_AddressMaster where Set_AddressMaster.Trans_Id=(Select top 1 Set_AddressChild.Ref_Id from Set_AddressChild where Set_AddressChild.Add_Type='Contact' and Set_AddressChild.Add_Ref_Id=Ac_Voucher_Detail.Other_Account_No)) as CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Detail.Account_No=@Account_No and (Case when @Other_Account_No>0 then Ac_Voucher_Detail.Other_Account_No else 0 end) =@Other_Account_No and (Ac_Voucher_Header.Voucher_Date>=@From_Date and Ac_Voucher_Header.Voucher_Date<=@To_Date) and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Ac_AllCustomer_Balance]     @Company_Id int, @Brand_Id int,    @Account_No nvarchar(max),  @CustomerAccount_No int, @Location_Id Nvarchar(Max), @FromDate datetime, @ToDate datetime,  @currency_type int,         @Optype int As       Begin      IF (@Optype=1)      Begin   select company_id,brand_id,Customer_Id,name,(case when @currency_type=1 then opening_balance else cmp_ob end) as opening_final,(case when @currency_type=1 then debit_amount else cmp_dr end) as Debit_final,(case when @currency_type=1 then credit_Amount else cmp_cr end) as Credit_final,(case when @currency_type=1 then closing_balance else cmp_cb end) as closing_final,opening_balance,debit_amount,credit_Amount,closing_balance,ForeignOpening_Balance,ForeignDebit_Amount,ForeignCredit_Amount,ForeignClosing_Balance,cmp_ob,cmp_dr,cmp_cr,(case when @currency_type=1 then Start30 else Comp_Start30 end) as start30_final,(case when @currency_type=1 then second60 else comp_second60 end) as second60_final,(case when @currency_type=1 then third90 else Comp_third90 end) as third90_final,(case when @currency_type=1 then fourth90above else Comp_fourth90above end) as fourth90above_final,(case when @currency_type=1 then ageingBalance else Comp_ageingBalance end) as AgeingBalance_final,Start30,second60,third90,fourth90above,ageingBalance,Comp_Start30,comp_second60,Comp_third90,Comp_fourth90above,Comp_ageingBalance from (select set_CustomerMaster.Company_Id,set_CustomerMaster.Brand_Id,set_CustomerMaster.Customer_Id,ems_contactmaster.Name,((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0)))as Opening_Balance,          isnull(trans.dr,0)as Debit_Amount,isnull(trans.cr,0) as Credit_Amount,           (((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0)) as Closing_Balance,          ((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0)))as ForeignOpening_Balance,          isnull(trans.f_dr,0)as ForeignDebit_Amount,isnull(trans.f_cr,0) as ForeignCredit_Amount,          ((((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as ForeignClosing_Balance,                     ((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0)))as cmp_ob,          isnull(trans.cmp_dr,0)as cmp_dr,isnull(trans.cmp_cr,0) as cmp_cr,          ((((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as cmp_cb,                                        (select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Start30,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Second60,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Third90,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Fourth90Above,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as AgeingBalance,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Start30,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Second60,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Third90,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Fourth90Above,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_AgeingBalance                    from (select set_CustomerMaster.Company_Id,set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id from set_CustomerMaster where set_CustomerMaster.Account_No=@CustomerAccount_no and set_CustomerMaster.Company_Id=@Company_Id and set_CustomerMaster.Brand_Id=@Brand_Id and set_CustomerMaster.IsActive='True')set_CustomerMaster           left join          (select Ac_SubChartOfAccount.Other_account_no, SUM(isnull(Ac_SubChartOfAccount.LCr_Amount,0)) as m_o_cr, SUM(isnull(Ac_SubChartOfAccount.LDr_Amount,0)) as m_o_dr, SUM(isnull(cast(Ac_SubChartOfAccount.FCr_Amount as float),0)) as m_f_o_cr,SUM(isnull(cast(Ac_SubChartOfAccount.FDr_Amount as float),0)) as m_f_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float),0)) as m_cmp_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) as m_cmp_o_cr from ac_subChartOfAccount where Ac_SubChartOfAccount.Other_Account_No=@CustomerAccount_no and Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) group by Ac_SubChartOfAccount.Company_Id,Ac_SubChartOfAccount.Brand_Id,Ac_SubChartOfAccount.other_account_no)m_ob on m_ob.other_account_no=set_CustomerMaster.Customer_Id          left join                              ems_contactmaster on ems_contactmaster.Trans_Id=set_CustomerMaster.Customer_Id left join          (select VD.Other_Account_No,VD.Company_Id,VD.Brand_Id,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Debit_Amount else 0 end))as dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.Foreign_Amount else 0 end))as f_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Credit_Amount else 0 end))as cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.Credit_Amount else 0 end))as f_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.Debit_Amount else 0 end))as dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.Debit_Amount else 0 end))as f_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.credit_Amount else 0 end))as cr,             sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.credit_Amount else 0 end))as f_cr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No     inner join set_CustomerMaster on set_CustomerMaster.Customer_Id=VD.Other_Account_No      where VD.Account_No in (SELECT CAST(Value AS INT) FROM F_Split(@Account_No, ',')) and VD.Other_Account_No!=0 and set_CustomerMaster.Company_Id=@Company_Id and set_CustomerMaster.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive='True' and Ac_Voucher_Header.ReconciledFromFinance='True'     and Ac_Voucher_Header.Voucher_Date <=@ToDate     group by VD.Company_Id,VD.Brand_Id,VD.Other_Account_No)trans    on trans.Other_Account_No=set_CustomerMaster.Customer_Id)final order by name       End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Ac_AllCustomer_Balance]     @Company_Id int, @Brand_Id int,    @Account_No nvarchar(max),  @CustomerAccount_No int, @Location_Id Nvarchar(Max), @FromDate datetime, @ToDate datetime,  @currency_type int,         @Optype int As       Begin      IF (@Optype=1)      Begin   select company_id,brand_id,Customer_Id,name,(case when @currency_type=1 then opening_balance else cmp_ob end) as opening_final,(case when @currency_type=1 then debit_amount else cmp_dr end) as Debit_final,(case when @currency_type=1 then credit_Amount else cmp_cr end) as Credit_final,(case when @currency_type=1 then closing_balance else cmp_cb end) as closing_final,opening_balance,debit_amount,credit_Amount,closing_balance,ForeignOpening_Balance,ForeignDebit_Amount,ForeignCredit_Amount,ForeignClosing_Balance,cmp_ob,cmp_dr,cmp_cr,(case when @currency_type=1 then Start30 else Comp_Start30 end) as start30_final,(case when @currency_type=1 then second60 else comp_second60 end) as second60_final,(case when @currency_type=1 then third90 else Comp_third90 end) as third90_final,(case when @currency_type=1 then fourth90above else Comp_fourth90above end) as fourth90above_final,(case when @currency_type=1 then ageingBalance else Comp_ageingBalance end) as AgeingBalance_final,Start30,second60,third90,fourth90above,ageingBalance,Comp_Start30,comp_second60,Comp_third90,Comp_fourth90above,Comp_ageingBalance from (select set_CustomerMaster.Company_Id,set_CustomerMaster.Brand_Id,set_CustomerMaster.Customer_Id,ems_contactmaster.Name,((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0)))as Opening_Balance,          isnull(trans.dr,0)as Debit_Amount,isnull(trans.cr,0) as Credit_Amount,           (((isnull(trans.cr_opening,0)+isnull(m_ob.m_o_cr,0))-(isnull(trans.dr_opening,0)+isnull(m_ob.m_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0)) as Closing_Balance,          ((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0)))as ForeignOpening_Balance,          isnull(trans.f_dr,0)as ForeignDebit_Amount,isnull(trans.f_cr,0) as ForeignCredit_Amount,          ((((isnull(trans.f_cr_opening,0)+isnull(m_ob.m_f_o_cr,0))-(isnull(trans.f_dr_opening,0)+isnull(m_ob.m_f_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as ForeignClosing_Balance,                     ((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0)))as cmp_ob,          isnull(trans.cmp_dr,0)as cmp_dr,isnull(trans.cmp_cr,0) as cmp_cr,          ((((isnull(trans.cmp_cr_opening,0)+isnull(m_ob.m_cmp_o_cr,0))-(isnull(trans.cmp_dr_opening,0)+isnull(m_ob.m_cmp_o_dr,0))) - isnull(trans.dr,0) + isnull(trans.cr,0))) as cmp_cb,                                        (select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Start30,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Second60,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Third90,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Fourth90Above,(select isnull(sum(due_amount)-SUM(Paid_Receive_Amount),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as AgeingBalance,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Start30,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-30,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Second60,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Third90,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-91,getdate())and Invoice_Date<DATEADD(day,-60,getdate())and Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='RV') as Comp_Fourth90Above,(select isnull(sum(CompanyCurrDebit)-SUM(CompanyCurrCredit),0) from Ac_Ageing_Detail where Ac_Ageing_Detail.Other_Account_No=set_CustomerMaster.Customer_Id and Ac_Ageing_Detail.ageingtype='pv') as Comp_AgeingBalance                    from (select set_CustomerMaster.Company_Id,set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id from set_CustomerMaster where set_CustomerMaster.Account_No=@CustomerAccount_no and set_CustomerMaster.Company_Id=@Company_Id and set_CustomerMaster.Brand_Id=@Brand_Id and set_CustomerMaster.IsActive='True')set_CustomerMaster           left join          (select Ac_SubChartOfAccount.Other_account_no, SUM(isnull(Ac_SubChartOfAccount.LCr_Amount,0)) as m_o_cr, SUM(isnull(Ac_SubChartOfAccount.LDr_Amount,0)) as m_o_dr, SUM(isnull(cast(Ac_SubChartOfAccount.FCr_Amount as float),0)) as m_f_o_cr,SUM(isnull(cast(Ac_SubChartOfAccount.FDr_Amount as float),0)) as m_f_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrDebit as float),0)) as m_cmp_o_dr,SUM(isnull(cast(Ac_SubChartOfAccount.CompanyCurrCredit as float),0)) as m_cmp_o_cr from ac_subChartOfAccount where Ac_SubChartOfAccount.Other_Account_No=@CustomerAccount_no and Ac_SubChartOfAccount.Company_Id=@Company_Id and Ac_SubChartOfAccount.Brand_Id=@Brand_Id and Ac_SubChartOfAccount.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) group by Ac_SubChartOfAccount.Company_Id,Ac_SubChartOfAccount.Brand_Id,Ac_SubChartOfAccount.other_account_no)m_ob on m_ob.other_account_no=set_CustomerMaster.Customer_Id          left join                              ems_contactmaster on ems_contactmaster.Trans_Id=set_CustomerMaster.Customer_Id left join          (select VD.Other_Account_No,VD.Company_Id,VD.Brand_Id,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Debit_Amount else 0 end))as dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.Foreign_Amount else 0 end))as f_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate And VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr_opening,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate then VD.Credit_Amount else 0 end))as cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.Credit_Amount else 0 end))as f_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date<@FromDate and VD.Credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr_opening ,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.Debit_Amount else 0 end))as dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.Debit_Amount else 0 end))as f_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.Debit_Amount>0 then VD.CompanyCurrDebit else 0 end))as cmp_dr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate then VD.credit_Amount else 0 end))as cr,             sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.credit_Amount else 0 end))as f_cr,          sum((case when Ac_Voucher_Header.Voucher_Date>=@FromDate and Ac_Voucher_Header.Voucher_Date<=@ToDate and VD.credit_Amount>0 then VD.CompanyCurrCredit else 0 end))as cmp_cr from Ac_Voucher_Header inner join Ac_Voucher_Detail as VD on Ac_Voucher_Header.Trans_Id=VD.Voucher_No     inner join set_CustomerMaster on set_CustomerMaster.Customer_Id=VD.Other_Account_No      where VD.Account_No in (SELECT CAST(Value AS INT) FROM F_Split(@Account_No, ',')) and VD.Other_Account_No!=0 and set_CustomerMaster.Company_Id=@Company_Id and set_CustomerMaster.Brand_Id=@Brand_Id and VD.Location_Id in (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Ac_Voucher_Header.Isactive='True' and Ac_Voucher_Header.ReconciledFromFinance='True'     and Ac_Voucher_Header.Voucher_Date <=@ToDate     group by VD.Company_Id,VD.Brand_Id,VD.Other_Account_No)trans    on trans.Other_Account_No=set_CustomerMaster.Customer_Id)final order by name       End End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "select * from Set_OperationType where Op_Type='Is Pay  Commission ?'";
            if (objDa.return_DataTable(strsql).Rows.Count == 0)
            {

                strsql = "insert into Set_OperationType values(21,'Is Pay  Commission ?')";
                objDa.execute_Command(strsql);
            }
        }
        catch
        {

        }


        try
        {
            strsql = "update Inv_SalesReturnHeader set CreatedBy=(select Inv_SalesInvoiceHeader.CreatedBy from Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Trans_Id=Inv_SalesReturnHeader.Invoice_Id),ModifiedBy=(select Inv_SalesInvoiceHeader.ModifiedBy from Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Trans_Id=Inv_SalesReturnHeader.Invoice_Id)";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }


        try
        {
            strsql = "update IT_ObjectEntry  Set Page_Url='../VoucherEntries/AgeingSettlementNew.aspx' where OBJECT_ID='338'";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "update Set_UserPermission set Set_UserPermission.Field1=(select Set_UserMaster.Role_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_UserPermission.User_Id and Set_UserMaster.Company_Id=Set_UserPermission.Company_Id) where Set_UserPermission.Field1=' ' ";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "select * from it_objectentry where OBJECT_NAME='Location Type'";
            if (objDa.return_DataTable(strsql).Rows.Count == 0)
            {

                strsql = "INSERT INTO [IT_ObjectEntry]           ([Object_Name]           ,[Object_Name_L]           ,[Page_Url]           ,[Order_Appear]           ,[Form_Type]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])     VALUES           ('Location Type'           ,'Location Type'           ,'../SystemSetUp/LocationType.aspx'           ,'12'           ,'F'           ,'True'           ,'superadmin'           ,'" + DateTime.Now.ToString() + "'            ,'superadmin'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);
            }
        }
        catch
        {

        }



        try
        {
            strsql = "select * from IT_App_Mod_Object where OBJECT_ID=340 and application_id=0";
            if (objDa.return_DataTable(strsql).Rows.Count == 0)
            {

                strsql = "insert into IT_App_Mod_Object values(0,106,340)";
                objDa.execute_Command(strsql);
            }
        }
        catch
        {

        }


        try
        {
            strsql = "select * from IT_App_Mod_Object where OBJECT_ID=340 and application_id=3";
            if (objDa.return_DataTable(strsql).Rows.Count == 0)
            {

                strsql = "insert into IT_App_Mod_Object values(3,106,340)";
                objDa.execute_Command(strsql);
            }
        }
        catch
        {

        }

        try
        {
            strsql = "update Inv_SalesOrderDetail set Field2='4' where Field6='True' and Field2=' '";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        try
        {
            strsql = "update Inv_SalesOrderDetail set Field2='0' where Field6='False' and Field2=' '";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        try
        {
            strsql = "update Inv_SalesInvoiceDetail set Field3='0' where Field3=' '";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        try
        {
            strsql = "select * from inv_parametermaster where ParameterName='Commission Payment Allow(In Month)'";
            if (objDa.return_DataTable(strsql).Rows.Count == 0)
            {

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (1           ,1           ,1          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,1          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,2         ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);
                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,3         ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);
                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,4          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,3           ,5          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,6          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,7          ,'Commission Payment Allow(In Month)'           ,'2'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);



            }
        }
        catch
        {

        }


        try
        {
            strsql = "select * from inv_parametermaster where ParameterName='Is Sales Below Cost Price'";
            if (objDa.return_DataTable(strsql).Rows.Count == 0)
            {

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (1           ,1           ,1          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,1          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,2         ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);
                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,3         ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);
                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,4          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,3           ,5          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,6          ,'Is Sales Below Cost Price'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,7          ,'Is Sales Below Cost Price'           ,'True'          ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);



            }
        }
        catch
        {

        }


        try
        {
            strsql = "select * from inv_parametermaster where ParameterName='Is Serial on Sales Return'";
            if (objDa.return_DataTable(strsql).Rows.Count == 0)
            {

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (1           ,1           ,1          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,1          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,2         ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);
                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,3         ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);
                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,4          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,3           ,5          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,6          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);

                strsql = "INSERT INTO Inv_ParameterMaster       ([Company_Id]           ,[Brand_Id]           ,[Location_Id]           ,[ParameterName]           ,[ParameterValue]           ,[Field1]           ,[Field2]           ,[Field3]           ,[Field4]           ,[Field5]           ,[Field6]           ,[Field7]           ,[IsActive]           ,[CreatedBy]           ,[CreatedDate]           ,[ModifiedBy]           ,[ModifiedDate])    VALUES           (2           ,2           ,7          ,'Is Serial on Sales Return'           ,'True'           ,' '           ,' '           ,' '           ,' '           ,' '           ,'False'           ,'" + DateTime.Now.ToString() + "'          ,'True'           ,'3000'           ,'" + DateTime.Now.ToString() + "'           ,'3000'           ,'" + DateTime.Now.ToString() + "')";
                objDa.execute_Command(strsql);



            }
        }
        catch
        {

        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesReturnHeader_RowStatus] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesReturnHeader set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);

        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesReturnHeader_RowStatus] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesReturnHeader set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesQuotationHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @SQuotation_Id int, @SQuotation_No nvarchar(255), @SInquiry_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Amount] ,[Emp_Id] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by SQuotation_Id desc End ELSE IF (@Optype=2) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,dbo.Set_EmployeeMaster.Emp_Name as EmployeeName ,Ems_ContactMaster.Name as Customer_Name, Inv_SalesInquiryHeader.SInquiryNo as InquiryNo, Inv_SalesInquiryHeader.OrderCompletionDate as OrderCompletionDate, (SELECT STUFF((SELECT Distinct ',' + cast(Inv_ProductMaster.EProductName as char(14))+'...' FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as ShortProductList, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_ProductMaster.EProductName) FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as FullProductList , (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id =SI.Field5) as CategoryName FROM Inv_SalesQuotationHeader as SI left Join Set_EmployeeMaster ON SI.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id left join Inv_SalesInquiryHeader on SI.SInquiry_No=Inv_SalesInquiryHeader.SInquiryID left join Ems_ContactMaster on Ems_ContactMaster.Trans_Id=Inv_SalesInquiryHeader.Customer_Id Where SI.Company_Id = @Company_Id and SI.Brand_Id=@Brand_Id and SI.Location_Id=@Location_Id and SI.IsActive='True' order by SI.Field7 desc End ELSE IF (@Optype=3) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id =SI.Field5) as CategoryName , (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,dbo.Set_EmployeeMaster.Emp_Name as EmployeeName ,(Select name from Ems_ContactMaster where Trans_Id in (Select Customer_Id from Inv_SalesInquiryHeader where Inv_SalesInquiryHeader.SInquiryID=si.SInquiry_No) )as Customer_Name, (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=SI.SInquiry_No) as InquiryNo, (SELECT STUFF((SELECT Distinct ',' + cast(Inv_ProductMaster.EProductName as char(14))+'...' FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as ShortProductList, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_ProductMaster.EProductName) FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as FullProductList FROM Inv_SalesQuotationHeader as SI left Join Set_EmployeeMaster ON SI.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id Where SI.Company_Id = @Company_Id and SI.Brand_Id=@Brand_Id and SI.Location_Id=@Location_Id and SI.IsActive='False' order by SI.SQuotation_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,Agent_Id ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST(Inv_SalesQuotationHeader.row_lock_Id as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] ,(Select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id =Inv_SalesQuotationHeader.Agent_Id )as Agent_Name FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SQuotation_Id=@SQuotation_Id order by SQuotation_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SQuotation_No=@SQuotation_No order by SQuotation_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SInquiry_No=@SInquiry_No order by SQuotation_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(SQuotation_Id) FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,(Select name from Ems_ContactMaster where Trans_Id in (Select Customer_Id from Inv_SalesInquiryHeader where Inv_SalesInquiryHeader.SInquiryID=si.SInquiry_No) )as Customer_Name, (select Emp_Name from Set_EmployeeMaster where Emp_Id=SI.Emp_Id) as EmployeeName FROM Inv_SalesQuotationHeader as SI where SI.SQuotation_Id not in(select SOfromTransNo from Inv_SalesOrderHeader) and SI.IsActive='True' and SI.Company_Id=@Company_Id and SI.Brand_ID=@Brand_Id and SI.Location_Id=@Location_Id order by SQuotation_Id desc End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesQuotationHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @SQuotation_Id int, @SQuotation_No nvarchar(255), @SInquiry_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Amount] ,[Emp_Id] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by SQuotation_Id desc End ELSE IF (@Optype=2) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,dbo.Set_EmployeeMaster.Emp_Name as EmployeeName ,Ems_ContactMaster.Name as Customer_Name, Inv_SalesInquiryHeader.SInquiryNo as InquiryNo, Inv_SalesInquiryHeader.OrderCompletionDate as OrderCompletionDate, (SELECT STUFF((SELECT Distinct ',' + cast(Inv_ProductMaster.EProductName as char(14))+'...' FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as ShortProductList, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_ProductMaster.EProductName) FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as FullProductList , (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id =SI.Field5) as CategoryName FROM Inv_SalesQuotationHeader as SI left Join Set_EmployeeMaster ON SI.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id left join Inv_SalesInquiryHeader on SI.SInquiry_No=Inv_SalesInquiryHeader.SInquiryID left join Ems_ContactMaster on Ems_ContactMaster.Trans_Id=Inv_SalesInquiryHeader.Customer_Id Where SI.Company_Id = @Company_Id and SI.Brand_Id=@Brand_Id and SI.Location_Id=@Location_Id and SI.IsActive='True' order by SI.Field7 desc End ELSE IF (@Optype=3) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (select Inv_Product_CategoryMaster.Category_Name from Inv_Product_CategoryMaster where Inv_Product_CategoryMaster.Category_Id =SI.Field5) as CategoryName , (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,dbo.Set_EmployeeMaster.Emp_Name as EmployeeName ,(Select name from Ems_ContactMaster where Trans_Id in (Select Customer_Id from Inv_SalesInquiryHeader where Inv_SalesInquiryHeader.SInquiryID=si.SInquiry_No) )as Customer_Name, (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=SI.SInquiry_No) as InquiryNo, (SELECT STUFF((SELECT Distinct ',' + cast(Inv_ProductMaster.EProductName as char(14))+'...' FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as ShortProductList, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_ProductMaster.EProductName) FROM Inv_ProductMaster where Inv_ProductMaster.ProductId in (select Product_Id from dbo.Inv_SalesQuotationDetail where SQuotation_Id=SI.SQuotation_Id) FOR XML PATH('')),1,1,'') ) as FullProductList FROM Inv_SalesQuotationHeader as SI left Join Set_EmployeeMaster ON SI.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id Where SI.Company_Id = @Company_Id and SI.Brand_Id=@Brand_Id and SI.Location_Id=@Location_Id and SI.IsActive='False' order by SI.SQuotation_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,Agent_Id ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST(Inv_SalesQuotationHeader.row_lock_Id as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] ,(Select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id =Inv_SalesQuotationHeader.Agent_Id )as Agent_Name FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SQuotation_Id=@SQuotation_Id order by SQuotation_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SQuotation_No=@SQuotation_No order by SQuotation_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[SQuotation_Id] ,[SQuotation_No] ,[Quotation_Date] ,[SInquiry_No] ,[Currency_Id] ,[Emp_Id] ,[Amount] ,[TaxPercent] ,[TaxValue] ,[DiscountPercent] ,[DiscountValue] ,[Status] ,[Header] ,[Footer] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Post] ,[Reason] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SInquiry_No=@SInquiry_No order by SQuotation_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(SQuotation_Id) FROM Inv_SalesQuotationHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin SELECT SI.[Company_Id] ,SI.[Brand_Id] ,SI.[Location_Id] ,SI.[SQuotation_Id] ,SI.[SQuotation_No] ,SI.[Quotation_Date] ,SI.[SInquiry_No] ,SI.[Currency_Id] ,SI.[Amount] ,SI.[Emp_Id] ,SI.[TaxPercent] ,SI.[TaxValue] ,SI.[DiscountPercent] ,SI.[DiscountValue] ,SI.[Status] ,SI.[Header] ,SI.[Footer] ,SI.[Condition1] ,SI.[Condition2] ,SI.[Condition3] ,SI.[Condition4] ,SI.[Condition5] ,SI.[Post] ,SI.[Reason] ,SI.[Field1] ,SI.[Field2] ,SI.[Field3] ,SI.[Field4] ,SI.[Field5] ,SI.[Field6] ,SI.[Field7] ,SI.[CreatedBy] ,SI.[CreatedDate] ,SI.[ModifiedBy] ,SI.[ModifiedDate] ,SI.[IsActive], (SI.Amount+SI.TaxValue-SI.DiscountValue) as TotalAmount ,(Select name from Ems_ContactMaster where Trans_Id in (Select Customer_Id from Inv_SalesInquiryHeader where Inv_SalesInquiryHeader.SInquiryID=si.SInquiry_No) )as Customer_Name, (select Emp_Name from Set_EmployeeMaster where Emp_Id=SI.Emp_Id) as EmployeeName FROM Inv_SalesQuotationHeader as SI where SI.SQuotation_Id not in(select SOfromTransNo from Inv_SalesOrderHeader) and SI.IsActive='True' and SI.Company_Id=@Company_Id and SI.Brand_ID=@Brand_Id and SI.Location_Id=@Location_Id order by SQuotation_Id desc End End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesOrderHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @SalesOrderNo nvarchar(255), @SOfromTransType nvarchar(1), @SOfromTransNo int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , case when (select distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransType='S' And Inv_SalesInvoiceDetail.SIFromTransNo=Inv_SalesOrderHeader.Trans_Id) Is null then 'Pending' else 'Created' end as InvoiceStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by SalesOrderDate desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,IsdeliveryVoucher ,[IsInPO] ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,Agent_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST(Inv_SalesOrderHeader.row_lock_Id as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id =Inv_SalesOrderHeader.Agent_Id) as Agent_Name, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesOrderHeader.CreatedBy)) as Salespersonname, (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesOrderHeader.CreatedBy) as SalespersonID FROM Inv_SalesOrderHeader Where Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SalesOrderNo=@SalesOrderNo order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SOfromTransType=@SOfromTransType and SOfromTransNo=@SOfromTransNo order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id not in(select Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransType='S') and Inv_SalesOrderHeader.IsActive='True' and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=9) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_SalesOrderHeader.Location_Id) as From_Location_Name FROM Inv_SalesOrderHeader Where IsActive='True' and IsInPO='2' and Inv_SalesOrderHeader.Trans_Id not in (select Inv_ProductionRequestHeader.Field1 from Inv_ProductionRequestHeader) and Inv_SalesOrderHeader.Trans_Id in (select distinct Inv_SalesOrderDetail.SalesOrderNo from Inv_SalesOrderDetail where Inv_SalesOrderDetail.Field2=@Location_Id ) order by Trans_Id desc End ELSE IF (@Optype=11) begin select Inv_SalesOrderHeader.Trans_Id,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate, (Select Ems_ContactMaster.name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , Inv_SalesOrderHeader.NetAmount, Inv_productMaster.ProductCode, Inv_productMaster.EProductName, Inv_UnitMaster.Unit_Name, Inv_SalesOrderDetail.Quantity as OrderQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty , (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesOrderDetail.Product_Id) as sysQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId inner join Inv_UnitMaster on Inv_SalesOrderDetail.UnitId=Inv_UnitMaster.Unit_Id where Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True') and (Inv_SalesInvoiceDetail.OrderQty-Inv_SalesInvoiceDetail.Quantity)<=0 and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.IsActive='True' order by Inv_SalesOrderHeader.CreatedDate desc end ELSE IF (@Optype=12) begin select Inv_SalesOrderHeader.Trans_Id,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate, (Select Ems_ContactMaster.name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , Inv_SalesOrderHeader.NetAmount, Inv_productMaster.ProductCode, Inv_productMaster.EProductName, Inv_UnitMaster.Unit_Name, Inv_SalesOrderDetail.Quantity as OrderQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesDeliveryVoucher_Detail.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesDeliveryVoucher_Detail.Product_Id=Inv_SalesOrderDetail.Product_ID)) IS NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesDeliveryVoucher_Detail.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesDeliveryVoucher_Detail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty , (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesOrderDetail.Product_Id) as sysQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId inner join Inv_UnitMaster on Inv_UnitMaster.Unit_Id=Inv_SalesOrderDetail.UnitId where Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='True') and (Inv_SalesDeliveryVoucher_Detail.Order_Qty-Inv_SalesDeliveryVoucher_Detail.Delievered_Qty)<=0 and Inv_SalesDeliveryVoucher_Detail.Order_id =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='False') and (Inv_SalesDeliveryVoucher_Detail.Delievered_Qty)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='True') and (Inv_SalesDeliveryVoucher_Detail.Order_Qty- (Select sUM(SD.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail as SD where SD.Order_Id =Inv_SalesOrderHeader.Trans_Id and SD.Product_Id=Inv_SalesOrderDetail.Product_ID))=0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderHeader.IsActive='True' and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.IsdeliveryVoucher='True' order by Inv_SalesOrderHeader.CreatedDate desc end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesOrderHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @SalesOrderNo nvarchar(255), @SOfromTransType nvarchar(1), @SOfromTransNo int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , case when (select distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransType='S' And Inv_SalesInvoiceDetail.SIFromTransNo=Inv_SalesOrderHeader.Trans_Id) Is null then 'Pending' else 'Created' end as InvoiceStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by SalesOrderDate desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,IsdeliveryVoucher ,[IsInPO] ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,Agent_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST(Inv_SalesOrderHeader.row_lock_Id as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id =Inv_SalesOrderHeader.Agent_Id) as Agent_Name, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesOrderHeader.CreatedBy)) as Salespersonname, (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesOrderHeader.CreatedBy) as SalespersonID FROM Inv_SalesOrderHeader Where Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SalesOrderNo=@SalesOrderNo order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SOfromTransType=@SOfromTransType and SOfromTransNo=@SOfromTransNo order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_SalesOrderHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id not in(select Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransType='S') and Inv_SalesOrderHeader.IsActive='True' and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=9) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[SalesOrderNo] ,[SalesOrderDate] ,[PaymentModeId] ,[EstimateDeliveryDate] ,[SOfromTransType] ,[SOfromTransNo] ,[CustomerId] ,[ShipToAddressID] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[ShippingCharge] ,[Remark] ,[NetAmount] ,[Post] ,[IsInPO] ,IsdeliveryVoucher ,[Status] ,Currency_Id ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.Field2) as ShipCustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_SalesOrderHeader.Location_Id) as From_Location_Name FROM Inv_SalesOrderHeader Where IsActive='True' and IsInPO='2' and Inv_SalesOrderHeader.Trans_Id not in (select Inv_ProductionRequestHeader.Field1 from Inv_ProductionRequestHeader) and Inv_SalesOrderHeader.Trans_Id in (select distinct Inv_SalesOrderDetail.SalesOrderNo from Inv_SalesOrderDetail where Inv_SalesOrderDetail.Field2=@Location_Id ) order by Trans_Id desc End ELSE IF (@Optype=11) begin select Inv_SalesOrderHeader.Trans_Id,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate, (Select Ems_ContactMaster.name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , Inv_SalesOrderHeader.NetAmount, Inv_productMaster.ProductCode, Inv_productMaster.EProductName, Inv_UnitMaster.Unit_Name, Inv_SalesOrderDetail.Quantity as OrderQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty , (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesOrderDetail.Product_Id) as sysQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId inner join Inv_UnitMaster on Inv_SalesOrderDetail.UnitId=Inv_UnitMaster.Unit_Id where Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True') and (Inv_SalesInvoiceDetail.OrderQty-Inv_SalesInvoiceDetail.Quantity)<=0 and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.IsActive='True' order by Inv_SalesOrderHeader.CreatedDate desc end ELSE IF (@Optype=12) begin select Inv_SalesOrderHeader.Trans_Id,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate, (Select Ems_ContactMaster.name from Ems_ContactMaster where Trans_Id =Inv_SalesOrderHeader.CustomerId) as CustomerName, case when Inv_SalesOrderHeader.SOfromTransType='Q' then 'Sales Quotation' when Inv_SalesOrderHeader.SOfromTransType='D' then 'Direct' end as TransType, case when Inv_SalesOrderHeader.SOfromTransNo<>' ' and Inv_SalesOrderHeader.SOfromTransNo<>0 then (select Inv_SalesQuotationHeader.SQuotation_No from Inv_SalesQuotationHeader where Inv_SalesQuotationHeader.SQuotation_Id=Inv_SalesOrderHeader.SOfromTransNo) end as QauotationNo , Inv_SalesOrderHeader.NetAmount, Inv_productMaster.ProductCode, Inv_productMaster.EProductName, Inv_UnitMaster.Unit_Name, Inv_SalesOrderDetail.Quantity as OrderQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesDeliveryVoucher_Detail.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesDeliveryVoucher_Detail.Product_Id=Inv_SalesOrderDetail.Product_ID)) IS NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesDeliveryVoucher_Detail.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesDeliveryVoucher_Detail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty , (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesOrderDetail.Product_Id) as sysQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId inner join Inv_UnitMaster on Inv_UnitMaster.Unit_Id=Inv_SalesOrderDetail.UnitId where Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='True') and (Inv_SalesDeliveryVoucher_Detail.Order_Qty-Inv_SalesDeliveryVoucher_Detail.Delievered_Qty)<=0 and Inv_SalesDeliveryVoucher_Detail.Order_id =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='False') and (Inv_SalesDeliveryVoucher_Detail.Delievered_Qty)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesDeliveryVoucher_Detail.Product_Id from Inv_SalesDeliveryVoucher_Detail where Inv_SalesDeliveryVoucher_Detail.Voucher_No in (Select Inv_SalesDeliveryVoucher_Header.Trans_Id From Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Post='True') and (Inv_SalesDeliveryVoucher_Detail.Order_Qty- (Select sUM(SD.Delievered_Qty) from Inv_SalesDeliveryVoucher_Detail as SD where SD.Order_Id =Inv_SalesOrderHeader.Trans_Id and SD.Product_Id=Inv_SalesOrderDetail.Product_ID))=0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesDeliveryVoucher_Detail.Order_Id =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderHeader.IsActive='True' and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.IsdeliveryVoucher='True' order by Inv_SalesOrderHeader.CreatedDate desc end End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Proc [dbo].[sp_Inv_SalesOrderGetProductForInvoice] @Company_Id int, @Brand_Id int , @Location_ID int, @CustomerId int as begin Select case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as Quantity, case when (Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)is NULL then 0 else (Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID) end as SoldQty, (Select Inv_StockDetail.Quantity From Inv_StockDetail where Inv_StockDetail.ProductId = Inv_SalesOrderDetail.Product_Id and Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_ID=@Location_ID) as SysQty , Inv_SalesOrderHeader.Company_Id,Inv_SalesOrderHeader.Brand_Id,Inv_SalesOrderHeader.Location_Id,Inv_SalesOrderHeader.Field4 , Inv_SalesOrderDetail.Trans_Id,Inv_SalesOrderHeader.SalesOrderDate,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderDetail.Product_Id,Inv_SalesOrderDetail.UnitId,Inv_SalesOrderHeader.Trans_Id as SoID, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_SalesOrderDetail.UnitId) as Unit_Name,Inv_SalesOrderDetail.Serial_No, Inv_SalesOrderDetail.UnitPrice,Inv_SalesOrderDetail.FreeQty, Inv_SalesOrderDetail.Quantity as OrderQty, Inv_SalesOrderDetail.TaxP,Inv_SalesOrderDetail.TaxV,Inv_SalesOrderDetail.DiscountP,Inv_SalesOrderDetail.DiscountV, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Quantity) from Inv_SalesInvoiceDetail where SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) IS NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Quantity) from Inv_SalesInvoiceDetail where SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as InvRemainQty , 0 as InvoiceQty ,0 as RecQty ,Inv_productMaster.EProductName as ProductName,Inv_productMaster.ProductCode,Inv_ProductMaster.Description as ProductDescription From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId where Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False' and Inv_SalesInvoiceHeader.IsActive='True') and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.OrderQty-Inv_SalesInvoiceDetail.Quantity)<=0 and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderHeader.CustomerId=@CustomerId and Inv_SalesOrderHeader.IsActive='True' order by Inv_SalesOrderHeader.SalesOrderDate end";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Proc [dbo].[sp_Inv_SalesOrderGetProductForInvoice] @Company_Id int, @Brand_Id int , @Location_ID int, @CustomerId int as begin Select case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as RemainQty, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID))is NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as Quantity, case when (Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)is NULL then 0 else (Select sUM(Inv_SalesInvoiceDetail.Quantity) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID) end as SoldQty, (Select Inv_StockDetail.Quantity From Inv_StockDetail where Inv_StockDetail.ProductId = Inv_SalesOrderDetail.Product_Id and Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_ID=@Location_ID) as SysQty , Inv_SalesOrderHeader.Company_Id,Inv_SalesOrderHeader.Brand_Id,Inv_SalesOrderHeader.Location_Id,Inv_SalesOrderHeader.Field4 , Inv_SalesOrderDetail.Trans_Id,Inv_SalesOrderHeader.SalesOrderDate,Inv_SalesOrderHeader.SalesOrderNo,Inv_SalesOrderDetail.Product_Id,Inv_SalesOrderDetail.UnitId,Inv_SalesOrderHeader.Trans_Id as SoID, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_SalesOrderDetail.UnitId) as Unit_Name,Inv_SalesOrderDetail.Serial_No, Inv_SalesOrderDetail.UnitPrice,Inv_SalesOrderDetail.FreeQty, Inv_SalesOrderDetail.Quantity as OrderQty, Inv_SalesOrderDetail.TaxP,Inv_SalesOrderDetail.TaxV,Inv_SalesOrderDetail.DiscountP,Inv_SalesOrderDetail.DiscountV, case when (Inv_SalesOrderDetail.Quantity-(Select sUM(Quantity) from Inv_SalesInvoiceDetail where SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) IS NULL then Inv_SalesOrderDetail.Quantity else (Inv_SalesOrderDetail.Quantity-(Select sUM(Quantity) from Inv_SalesInvoiceDetail where SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo and Inv_SalesInvoiceDetail.Product_Id=Inv_SalesOrderDetail.Product_ID)) end as InvRemainQty , 0 as InvoiceQty ,0 as RecQty ,Inv_productMaster.EProductName as ProductName,Inv_productMaster.ProductCode,Inv_ProductMaster.Description as ProductDescription From Inv_SalesOrderHeader inner join Inv_SalesOrderDetail on Inv_SalesOrderHeader.Trans_Id=Inv_SalesOrderDetail.SalesOrderNo inner join Inv_productMaster on Inv_SalesOrderDetail.Product_ID=Inv_productMaster.ProductId where Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False' and Inv_SalesInvoiceHeader.IsActive='True') and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.OrderQty-Inv_SalesInvoiceDetail.Quantity)<=0 and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Post='False' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and Inv_SalesInvoiceDetail.SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo) and Product_ID not in( Select Inv_SalesInvoiceDetail.Product_Id from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No in (Select Inv_SalesInvoiceHeader.Trans_Id From Inv_SalesInvoiceHeader where Inv_SalesInvoiceHeader.Post='True' and Inv_SalesInvoiceHeader.IsActive='True') and (Inv_SalesInvoiceDetail.Quantity)>0 and Inv_SalesOrderHeader.Field6='False' and SIFromTransNo =Inv_SalesOrderDetail.SalesOrderNo ) and Inv_SalesOrderDetail.Field1=' ' and Inv_SalesOrderHeader.Company_Id=@Company_Id and Inv_SalesOrderHeader.Brand_Id=@Brand_Id and Inv_SalesOrderHeader.Location_ID=@Location_ID and Inv_SalesOrderHeader.CustomerId=@CustomerId and Inv_SalesOrderHeader.IsActive='True' order by Inv_SalesOrderHeader.SalesOrderDate end";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesInvoiceHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No nvarchar(255), @SIFromTransType nvarchar(100), @SIFromTransNo nvarchar(50), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] ,ReturnNo FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT ROW_NUMBER() OVER(ORDER BY Inv_SalesInvoiceHeader.Trans_Id asc) AS RowNumber, Set_EmployeeMaster.Emp_Name as EmployeeName , Inv_SalesInvoiceHeader.Company_Id, Inv_SalesInvoiceHeader.Brand_Id, Inv_SalesInvoiceHeader.Location_Id, Ems_ContactMaster.Name as CustomerName , Inv_SalesInvoiceHeader.Invoice_No, Inv_SalesInvoiceHeader.Invoice_Date, Inv_SalesInvoiceHeader.Field4, Inv_SalesInvoiceHeader.GrandTotal, (Inv_SalesInvoiceHeader.GrandTotal*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Inv_SalesInvoiceHeader.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalGrandTotal, (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_SalesInvoiceHeader.Location_Id) as LocationCurrency, Inv_SalesInvoiceHeader.Trans_Id, Inv_SalesInvoiceHeader.Post, Inv_SalesInvoiceHeader.Currency_Id, inv_salesinvoiceheader.Supplier_Id as Customer_Id , case when Inv_SalesInvoiceHeader.SIFromTransType='S' then 'By Sales Order' end as Transtype , Inv_SalesInvoiceHeader.ReturnNo , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesInvoiceHeader.CreatedBy)=0 then Inv_SalesInvoiceHeader.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesInvoiceHeader.CreatedBy)) end as InvoiceCreatedBy, case when ((select ParameterValue from Inv_ParameterMaster where Inv_ParameterMaster.Company_Id=@Company_Id and Inv_ParameterMaster.Brand_Id=@Brand_Id and Inv_ParameterMaster.Location_Id=@Location_Id and Inv_ParameterMaster.ParameterName='Is Delivery Voucher allow')='True') And (Inv_SalesInvoiceHeader.SIFromTransType='S') then Cast('True' As Bit) else CAST('False' as Bit) end as IsDeliveryPrint, Inv_SalesInvoiceHeader.Field7, (select top 1 Inv_SalesInvoiceDetail.Post from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) as ReturnPostStatus , (select sum((Inv_SalesInvoiceDetail.UnitPrice-Inv_SalesInvoiceDetail.DiscountV+Inv_SalesInvoiceDetail.TaxV)*Inv_SalesInvoiceDetail.ReturnQty) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id ) as ReturnAmount, Inv_SalesInvoiceHeader.return_Is_Active , (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_salesOrderHeader.SalesOrderNo) FROM Inv_salesOrderHeader where Inv_salesOrderHeader.Trans_id in (select Distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as OrderList , (select Set_Payment_Mode_Master.Field1 from Set_Payment_Mode_Master where Set_Payment_Mode_Master.Pay_Mode_Id=(select top 1 Inv_PaymentTrn.PaymentModeId from Inv_PaymentTrn where Inv_PaymentTrn.TypeTrans='SI' and Inv_PaymentTrn.TransNo=Inv_SalesInvoiceHeader.Trans_Id )) as PaymentType FROM Inv_SalesInvoiceHeader inner join Set_EmployeeMaster on Set_EmployeeMaster.emp_id=Inv_SalesInvoiceHeader.SalesPerson_Id left join Ems_ContactMaster on Ems_ContactMaster.Trans_Id=Inv_SalesInvoiceHeader.Supplier_Id inner join Set_LocationMaster on Inv_SalesInvoiceHeader.Location_Id=Set_LocationMaster.Location_Id Where Inv_SalesInvoiceHeader.Company_Id = @Company_Id and Inv_SalesInvoiceHeader.Brand_Id=@Brand_Id and Inv_SalesInvoiceHeader.Location_Id=@Location_Id and Inv_SalesInvoiceHeader.IsActive='True' order by Inv_SalesInvoiceHeader.Invoice_Date desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno, (select Emp_Name from Set_EmployeeMaster where Emp_Id=Inv_SalesInvoiceHeader.SalesPerson_Id) as EmployeeName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesInvoiceHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesInvoiceHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesInvoiceHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesInvoiceHeader.ModifiedBy) as ModifiedUser, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_salesOrderHeader.SalesOrderNo) FROM Inv_salesOrderHeader where Inv_salesOrderHeader.Trans_id in (select Distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as OrderList FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] , (select Set_Payment_Mode_Master.Field1 from Set_Payment_Mode_Master where Set_Payment_Mode_Master.Pay_Mode_Id=(select top 1 Inv_PaymentTrn.PaymentModeId from Inv_PaymentTrn where Inv_PaymentTrn.TypeTrans='SI' and Inv_PaymentTrn.TransNo= Inv_SalesInvoiceHeader.Trans_Id )) as PaymentType ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno, (select Emp_Name from Set_EmployeeMaster where Emp_Id=Inv_SalesInvoiceHeader.SalesPerson_Id) as EmployeeName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Field2) as ShipCustomerName FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] , returnno, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Invoice_No=@Invoice_No order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SIFromTransType=@SIFromTransType and SIFromTransNo=@SIFromTransNo order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin select SH.Trans_Id,SH.Invoice_No,SH.Invoice_Date,sh.Currency_Id,Sh.Supplier_Id,(select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=sh.Supplier_Id) as Name,PM.ProductId,PM.ProductCode,PM.EProductName, ((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity) as Amount, (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalAmount, case when @SIFromTransType='Sales' then PM.Field4 when @SIFromTransType='Technical' then PM.Field5 else 1 end as Comission_Percentage, case when @SIFromTransType='Sales' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field4 as decimal(18,6)))/100) when @SIFromTransType='Technical' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field5 as decimal(18,6)))/100) else (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *1)/100) end as Comission_Amount ,SH.SalesPerson_Id, (select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo) as AgentId, (select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=((select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo))) as Agent_name, (select distinct Inv_SalesOrderDetail.AgentCommission from Inv_SalesOrderDetail where Inv_SalesOrderDetail.SalesOrderNo=SD.SIFromTransNo and Inv_SalesOrderDetail.Product_Id=sd.Product_Id) as AgentCommission , case when sd.ReturnQty IS null then 'False' when sd.ReturnQty IS not null And SD.ReturnQty >0 then 'True' else 'False' end as Is_Return , Pm.Field5 as TechnicalCommission from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId inner join Set_LocationMaster on Set_LocationMaster.Location_Id=sh.Location_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.SIFromTransType='S' and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType) order by sh.Invoice_Date End ELSE IF (@Optype=9) Begin select distinct SH.Trans_Id,SH.Invoice_No from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType) end else if(@Optype=10) begin select SH.Trans_Id,SH.Invoice_No,SH.Invoice_Date,sh.Currency_Id,Sh.Supplier_Id,(select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=sh.Supplier_Id) as Name,PM.ProductId,PM.ProductCode,PM.EProductName, ((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity) as Amount, (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalAmount, case when @SIFromTransType='Sales' then PM.Field4 when @SIFromTransType='Technical' then PM.Field5 else 1 end as Comission_Percentage, case when @SIFromTransType='Sales' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field4 as decimal(18,6)))/100) when @SIFromTransType='Technical' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field5 as decimal(18,6)))/100) else (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *1)/100) end as Comission_Amount ,SH.SalesPerson_Id, (select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo) as AgentId, (select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=((select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo))) as Agent_name, (select distinct Inv_SalesOrderDetail.AgentCommission from Inv_SalesOrderDetail where Inv_SalesOrderDetail.SalesOrderNo=SD.SIFromTransNo and Inv_SalesOrderDetail.Product_Id=sd.Product_Id) as AgentCommission , case when sd.ReturnQty IS null then 'False' when sd.ReturnQty IS not null And SD.ReturnQty >0 then 'True' else 'False' end as Is_Return , Pm.Field5 as TechnicalCommission from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId inner join Set_LocationMaster on Set_LocationMaster.Location_Id=sh.Location_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.SIFromTransType='S' and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType and Inv_SalesCommission_Detail.Voucher_No<>@Trans_Id) order by sh.Invoice_Date end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesInvoiceHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No nvarchar(255), @SIFromTransType nvarchar(100), @SIFromTransNo nvarchar(50), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] ,ReturnNo FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT ROW_NUMBER() OVER(ORDER BY Inv_SalesInvoiceHeader.Trans_Id asc) AS RowNumber, Set_EmployeeMaster.Emp_Name as EmployeeName , Inv_SalesInvoiceHeader.Company_Id, Inv_SalesInvoiceHeader.Brand_Id, Inv_SalesInvoiceHeader.Location_Id, Ems_ContactMaster.Name as CustomerName , Inv_SalesInvoiceHeader.Invoice_No, Inv_SalesInvoiceHeader.Invoice_Date, Inv_SalesInvoiceHeader.Field4, Inv_SalesInvoiceHeader.GrandTotal, (Inv_SalesInvoiceHeader.GrandTotal*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Inv_SalesInvoiceHeader.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalGrandTotal, (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_SalesInvoiceHeader.Location_Id) as LocationCurrency, Inv_SalesInvoiceHeader.Trans_Id, Inv_SalesInvoiceHeader.Post, Inv_SalesInvoiceHeader.Currency_Id, inv_salesinvoiceheader.Supplier_Id as Customer_Id , case when Inv_SalesInvoiceHeader.SIFromTransType='S' then 'By Sales Order' end as Transtype , Inv_SalesInvoiceHeader.ReturnNo , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesInvoiceHeader.CreatedBy)=0 then Inv_SalesInvoiceHeader.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Inv_SalesInvoiceHeader.CreatedBy)) end as InvoiceCreatedBy, case when ((select ParameterValue from Inv_ParameterMaster where Inv_ParameterMaster.Company_Id=@Company_Id and Inv_ParameterMaster.Brand_Id=@Brand_Id and Inv_ParameterMaster.Location_Id=@Location_Id and Inv_ParameterMaster.ParameterName='Is Delivery Voucher allow')='True') And (Inv_SalesInvoiceHeader.SIFromTransType='S') then Cast('True' As Bit) else CAST('False' as Bit) end as IsDeliveryPrint, Inv_SalesInvoiceHeader.Field7, (select top 1 Inv_SalesInvoiceDetail.Post from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) as ReturnPostStatus , (select sum((Inv_SalesInvoiceDetail.UnitPrice-Inv_SalesInvoiceDetail.DiscountV+Inv_SalesInvoiceDetail.TaxV)*Inv_SalesInvoiceDetail.ReturnQty) from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id ) as ReturnAmount, Inv_SalesInvoiceHeader.return_Is_Active , (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_salesOrderHeader.SalesOrderNo) FROM Inv_salesOrderHeader where Inv_salesOrderHeader.Trans_id in (select Distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as OrderList , (select Set_Payment_Mode_Master.Field1 from Set_Payment_Mode_Master where Set_Payment_Mode_Master.Pay_Mode_Id=(select top 1 Inv_PaymentTrn.PaymentModeId from Inv_PaymentTrn where Inv_PaymentTrn.TypeTrans='SI' and Inv_PaymentTrn.TransNo=Inv_SalesInvoiceHeader.Trans_Id )) as PaymentType FROM Inv_SalesInvoiceHeader inner join Set_EmployeeMaster on Set_EmployeeMaster.emp_id=Inv_SalesInvoiceHeader.SalesPerson_Id left join Ems_ContactMaster on Ems_ContactMaster.Trans_Id=Inv_SalesInvoiceHeader.Supplier_Id inner join Set_LocationMaster on Inv_SalesInvoiceHeader.Location_Id=Set_LocationMaster.Location_Id Where Inv_SalesInvoiceHeader.Company_Id = @Company_Id and Inv_SalesInvoiceHeader.Brand_Id=@Brand_Id and Inv_SalesInvoiceHeader.Location_Id=@Location_Id and Inv_SalesInvoiceHeader.IsActive='True' order by Inv_SalesInvoiceHeader.Invoice_Date desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno, (select Emp_Name from Set_EmployeeMaster where Emp_Id=Inv_SalesInvoiceHeader.SalesPerson_Id) as EmployeeName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesInvoiceHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesInvoiceHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesInvoiceHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesInvoiceHeader.ModifiedBy) as ModifiedUser, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_salesOrderHeader.SalesOrderNo) FROM Inv_salesOrderHeader where Inv_salesOrderHeader.Trans_id in (select Distinct Inv_SalesInvoiceDetail.SIFromTransNo from Inv_SalesInvoiceDetail where Inv_SalesInvoiceDetail.Invoice_No=Inv_SalesInvoiceHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as OrderList FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] , (select Set_Payment_Mode_Master.Field1 from Set_Payment_Mode_Master where Set_Payment_Mode_Master.Pay_Mode_Id=(select top 1 Inv_PaymentTrn.PaymentModeId from Inv_PaymentTrn where Inv_PaymentTrn.TypeTrans='SI' and Inv_PaymentTrn.TransNo= Inv_SalesInvoiceHeader.Trans_Id )) as PaymentType ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno, (select Emp_Name from Set_EmployeeMaster where Emp_Id=Inv_SalesInvoiceHeader.SalesPerson_Id) as EmployeeName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Field2) as ShipCustomerName FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] , returnno, (Select name from Ems_ContactMaster where Trans_Id =Inv_SalesInvoiceHeader.Supplier_Id) as CustomerName FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Invoice_No=@Invoice_No order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Invoice_Date] ,[PaymentModeId] ,[Currency_Id] ,[SIFromTransType] ,[SIFromTransNo] ,[SalesPerson_Id] ,[PosNo] ,[Remark] ,[Account_No] ,[Invoice_Costing] ,[Shift] ,[Post] ,[Tender] ,[Amount] ,[TotalQuantity] ,[TotalAmount] ,[NetTaxP] ,[NetTaxV] ,[NetAmount] ,[NetDiscountP] ,[NetDiscountV] ,[GrandTotal] ,[Supplier_Id] ,[Invoice_Ref_No] ,[Invoice_Merchant_Id] ,[Ref_Order_Number] ,[Condition1] ,[Condition2] ,[Condition3] ,[Condition4] ,[Condition5] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], returnno FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and SIFromTransType=@SIFromTransType and SIFromTransNo=@SIFromTransNo order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_SalesInvoiceHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin select SH.Trans_Id,SH.Invoice_No,SH.Invoice_Date,sh.Currency_Id,Sh.Supplier_Id,(select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=sh.Supplier_Id) as Name,PM.ProductId,PM.ProductCode,PM.EProductName, ((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity) as Amount, (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalAmount, case when @SIFromTransType='Sales' then PM.Field4 when @SIFromTransType='Technical' then PM.Field5 else 1 end as Comission_Percentage, case when @SIFromTransType='Sales' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field4 as decimal(18,6)))/100) when @SIFromTransType='Technical' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field5 as decimal(18,6)))/100) else (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *1)/100) end as Comission_Amount ,SH.SalesPerson_Id, (select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo) as AgentId, (select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=((select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo))) as Agent_name, (select distinct Inv_SalesOrderDetail.AgentCommission from Inv_SalesOrderDetail where Inv_SalesOrderDetail.SalesOrderNo=SD.SIFromTransNo and Inv_SalesOrderDetail.Product_Id=sd.Product_Id) as AgentCommission , case when sd.ReturnQty IS null then 'False' when sd.ReturnQty IS not null And SD.ReturnQty >0 then 'True' else 'False' end as Is_Return , Pm.Field5 as TechnicalCommission from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId inner join Set_LocationMaster on Set_LocationMaster.Location_Id=sh.Location_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.SIFromTransType='S' and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType) order by sh.Invoice_Date End ELSE IF (@Optype=9) Begin select distinct SH.Trans_Id,SH.Invoice_No from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType) end else if(@Optype=10) begin select SH.Trans_Id,SH.Invoice_No,SH.Invoice_Date,sh.Currency_Id,Sh.Supplier_Id,(select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=sh.Supplier_Id) as Name,PM.ProductId,PM.ProductCode,PM.EProductName, ((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity) as Amount, (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) as LocalAmount, case when @SIFromTransType='Sales' then PM.Field4 when @SIFromTransType='Technical' then PM.Field5 else 1 end as Comission_Percentage, case when @SIFromTransType='Sales' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field4 as decimal(18,6)))/100) when @SIFromTransType='Technical' then (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *CAST(pm.Field5 as decimal(18,6)))/100) else (( (((sd.UnitPrice-sd.DiscountV+sd.TaxV)*sd.Quantity)*((1/cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=SH.Currency_Id) as decimal(18,6)))*cast((select Sys_CurrencyMaster.Currency_Value from Sys_CurrencyMaster where Sys_CurrencyMaster.Currency_ID=Set_LocationMaster.Field1) as decimal(18,6)))) *1)/100) end as Comission_Amount ,SH.SalesPerson_Id, (select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo) as AgentId, (select Ems_ContactMaster.name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=((select Inv_SalesOrderHeader.Agent_Id from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=sd.SIFromTransNo))) as Agent_name, (select distinct Inv_SalesOrderDetail.AgentCommission from Inv_SalesOrderDetail where Inv_SalesOrderDetail.SalesOrderNo=SD.SIFromTransNo and Inv_SalesOrderDetail.Product_Id=sd.Product_Id) as AgentCommission , case when sd.ReturnQty IS null then 'False' when sd.ReturnQty IS not null And SD.ReturnQty >0 then 'True' else 'False' end as Is_Return , Pm.Field5 as TechnicalCommission from Inv_SalesInvoiceHeader as SH inner join Inv_SalesInvoiceDetail as SD on SH.Trans_id=SD.Invoice_no inner join Inv_ProductMaster as PM on sd.Product_Id=PM.ProductId inner join Set_LocationMaster on Set_LocationMaster.Location_Id=sh.Location_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.SIFromTransType='S' and SH.IsActive='True' and sh.Post='True' and SH.Trans_Id not in (select distinct Inv_SalesCommission_Detail.Invoice_Id from Inv_SalesCommission_Detail where Inv_SalesCommission_Detail.Field1=@SIFromTransType and Inv_SalesCommission_Detail.Voucher_No<>@Trans_Id) order by sh.Invoice_Date end End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesInvoiceHeader_RowStatus] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesInvoiceHeader set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesInvoiceHeader_RowStatus] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin update Inv_SalesInvoiceHeader set IsActive=@IsActive,ModifiedBy=@ModifiedBy,ModifiedDate=@ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_Id]=@Location_Id and [Trans_Id]=@Trans_Id select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesInvoiceDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No int, @Serial_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT Company_Id, Brand_Id, Location_Id, Trans_Id, case when Inv_SalesInvoiceDetail.SIFromTransType='S' then (select Inv_SalesOrderHeader.SalesOrderNo from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=Inv_SalesInvoiceDetail.SIFromTransNo) else '0' end as SalesOrderNo, SIFromTransNo as SoID, Serial_No, Product_Id, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as ProductName, (select Inv_ProductMaster.Description from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as ProductDescription, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_SalesInvoiceDetail.Unit_Id) as Unit_Name, Inv_SalesInvoiceDetail.Unit_Id as UnitId, Inv_SalesInvoiceDetail.Unit_Id, UnitPrice, Inv_SalesInvoiceDetail.Field3 as FreeQty, OrderQty, case when Inv_SalesInvoiceDetail.SIFromTransType='D' and Inv_SalesInvoiceDetail.Field1='True' then Inv_SalesInvoiceDetail.Quantity when Inv_SalesInvoiceDetail.SIFromTransType='D' And Inv_SalesInvoiceDetail.Field1='False' then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')is NULL then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')is not NULL then (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True') end as SoldQty, case when Inv_SalesInvoiceDetail.SIFromTransType='D' then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And(Inv_SalesInvoiceDetail.OrderQty- (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True'))is NULL then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Inv_SalesInvoiceDetail.OrderQty-(Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True'))is not NULL then (Inv_SalesInvoiceDetail.OrderQty-(Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')) end as RemainQty, isnull(ReturnQty,0) as TotalReturnQty , (select Inv_ProductMaster.Field5 from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as TechnicalCommission, Quantity, (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesInvoiceDetail.Product_Id) as SysQty, DiscountP, DiscountV, TaxP, TaxV , ReturnQty ,[Invoice_No] ,[SIFromTransType] ,[SIFromTransNo] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], ((UnitPrice*Quantity)+TaxV-DiscountV) as LineTotal FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Invoice_No=@Invoice_No End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Serial_No=@Serial_No order by Trans_Id desc End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesInvoiceDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No int, @Serial_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT Company_Id, Brand_Id, Location_Id, Trans_Id, case when Inv_SalesInvoiceDetail.SIFromTransType='S' then (select Inv_SalesOrderHeader.SalesOrderNo from Inv_SalesOrderHeader where Inv_SalesOrderHeader.Trans_Id=Inv_SalesInvoiceDetail.SIFromTransNo) else '0' end as SalesOrderNo, SIFromTransNo as SoID, Serial_No, Product_Id, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as ProductName, (select Inv_ProductMaster.Description from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as ProductDescription, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_SalesInvoiceDetail.Unit_Id) as Unit_Name, Inv_SalesInvoiceDetail.Unit_Id as UnitId, Inv_SalesInvoiceDetail.Unit_Id, UnitPrice, Inv_SalesInvoiceDetail.Field3 as FreeQty, OrderQty, case when Inv_SalesInvoiceDetail.SIFromTransType='D' and Inv_SalesInvoiceDetail.Field1='True' then Inv_SalesInvoiceDetail.Quantity when Inv_SalesInvoiceDetail.SIFromTransType='D' And Inv_SalesInvoiceDetail.Field1='False' then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')is NULL then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')is not NULL then (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True') end as SoldQty, case when Inv_SalesInvoiceDetail.SIFromTransType='D' then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And(Inv_SalesInvoiceDetail.OrderQty- (Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True'))is NULL then '0' when Inv_SalesInvoiceDetail.SIFromTransType='S' And (Inv_SalesInvoiceDetail.OrderQty-(Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True'))is not NULL then (Inv_SalesInvoiceDetail.OrderQty-(Select sUM(SD.Quantity) from Inv_SalesInvoiceDetail as SD where SD.SIFromTransNo =Inv_SalesInvoiceDetail.SIFromTransNo and SD.Product_Id=Inv_SalesInvoiceDetail.Product_ID and SD.Field1='True')) end as RemainQty, isnull(ReturnQty,0) as TotalReturnQty , (select Inv_ProductMaster.Field5 from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_SalesInvoiceDetail.Product_Id) as TechnicalCommission, Quantity, (select Inv_StockDetail.Quantity from Inv_StockDetail where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_StockDetail.ProductId=Inv_SalesInvoiceDetail.Product_Id) as SysQty, DiscountP, DiscountV, TaxP, TaxV , ReturnQty ,[Invoice_No] ,[SIFromTransType] ,[SIFromTransNo] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], ((UnitPrice*Quantity)+TaxV-DiscountV) as LineTotal FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Invoice_No=@Invoice_No End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Invoice_No] ,[Serial_No] ,[PaymentModeId] ,[POSNo] ,[SIFromTransType] ,[SIFromTransNo] ,[Product_Id] ,[ProductDescription] ,[Unit_Id] ,[UnitPrice] ,[UnitCost] ,OrderQty ,[Quantity] ,[ReturnQty] ,[TaxP] ,[TaxV] ,[DiscountP] ,[DiscountV] ,[Post] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_SalesInvoiceDetail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Serial_No=@Serial_No order by Trans_Id desc End End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesInvoiceDetail_ReturnUpdate] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No int, @Product_Id int, @ReturnQty numeric(18,6), @Post bit, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Update Inv_SalesInvoiceDetail SET [ReturnQty]=@ReturnQty ,Post=@Post ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id]=@Brand_Id and [Location_Id]=@Location_Id and [Invoice_No] = @Invoice_No and [Product_Id]=@Product_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesInvoiceDetail_ReturnUpdate] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Invoice_No int, @Product_Id int, @ReturnQty numeric(18,6), @Post bit, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Update Inv_SalesInvoiceDetail SET [ReturnQty]=@ReturnQty ,Post=@Post ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id]=@Brand_Id and [Location_Id]=@Location_Id and [Invoice_No] = @Invoice_No and [Product_Id]=@Product_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesDeliveryVoucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @SalesOrder_Id int, @Optype int As Begin if(@Optype=1) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id end else if(@Optype=2) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.IsActive='False' end else if(@Optype=3) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id end else if(@Optype=4) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.Trans_Id=@Trans_Id end else if(@Optype=5) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=@SalesOrder_Id end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesDeliveryVoucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @SalesOrder_Id int, @Optype int As Begin if(@Optype=1) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id end else if(@Optype=2) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.IsActive='False' end else if(@Optype=3) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_SalesOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_SalesOrderHeader.ModifiedBy) as ModifiedUser from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id end else if(@Optype=4) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.Trans_Id=@Trans_Id end else if(@Optype=5) begin select Inv_SalesDeliveryVoucher_Header.Company_Id,Inv_SalesDeliveryVoucher_Header.Brand_Id,Inv_SalesDeliveryVoucher_Header.Location_Id,Inv_SalesDeliveryVoucher_Header.Trans_Id,Inv_SalesDeliveryVoucher_Header.Voucher_No,Inv_SalesDeliveryVoucher_Header.Voucher_Date,Inv_SalesDeliveryVoucher_Header.SalesOrder_Id,Inv_SalesDeliveryVoucher_Header.Customer_Id,Inv_SalesDeliveryVoucher_Header.Salesperson_Id,Inv_SalesDeliveryVoucher_Header.Post,Inv_SalesDeliveryVoucher_Header.Remarks,Inv_SalesDeliveryVoucher_Header.Field1,Inv_SalesDeliveryVoucher_Header.Field2,Inv_SalesDeliveryVoucher_Header.Field3,Inv_SalesDeliveryVoucher_Header.Field4,Inv_SalesDeliveryVoucher_Header.Field5,Inv_SalesDeliveryVoucher_Header.Field6,Inv_SalesDeliveryVoucher_Header.Field7,Inv_SalesDeliveryVoucher_Header.IsActive,Inv_SalesDeliveryVoucher_Header.CreatedBy,Inv_SalesDeliveryVoucher_Header.CreatedDate,Inv_SalesDeliveryVoucher_Header.ModifiedBy,Inv_SalesDeliveryVoucher_Header.ModifiedDate,Inv_SalesOrderHeader.SalesOrderNo as SalesOrderNo,Inv_SalesOrderHeader.SalesOrderDate as SalesOrderDate,Set_EmployeeMaster.Emp_Name as Emp_Name,Ems_ContactMaster.Name as CustomerName from Inv_SalesDeliveryVoucher_Header inner join Inv_SalesOrderHeader on Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=Inv_SalesOrderHeader.Trans_Id inner join Set_EmployeeMaster on Inv_SalesDeliveryVoucher_Header.Salesperson_Id=Set_EmployeeMaster.Emp_Id inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id= Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Company_Id=@Company_Id and Inv_SalesDeliveryVoucher_Header.Brand_Id=@Brand_Id and Inv_SalesDeliveryVoucher_Header.Location_Id=@Location_Id and Inv_SalesDeliveryVoucher_Header.SalesOrder_Id=@SalesOrder_Id end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_PurchaseReturnHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PReturn_No nvarchar(255), @Invoice_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id order by TransID desc End ELSE IF (@Optype=2) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo,Inv_PurchaseInvoiceHeader.InvoiceDate,dbo.Inv_PurchaseReturnHeader.Field1,Inv_PurchaseReturnHeader.Field2 as ReturnAmount, Inv_PurchaseReturnHeader.Field3 as CurrencyID , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseInvoiceHeader.SupplierId) as Supplier_Name, Inv_PurchaseInvoiceHeader.SupplierId, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.ModifiedBy) as ModifiedUser FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' order by TransID desc End ELSE IF (@Optype=3) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo ,Inv_PurchaseReturnHeader.Field2 as ReturnAmount,Inv_PurchaseReturnHeader.Field3 as CurrencyID , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.ModifiedBy) as ModifiedUser FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='False' order by TransID desc End ELSE IF (@Optype=4) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo,Inv_PurchaseReturnHeader.Field1 ,Inv_PurchaseReturnHeader.Field2 as ReturnAmount, Inv_PurchaseReturnHeader.Field3 as CurrencyID FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.Trans_Id=@Trans_Id order by TransID desc End ELSE IF (@Optype=5) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.PReturn_No=@PReturn_No order by TransID desc End ELSE IF (@Optype=6) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.Invoice_Id=@Invoice_Id order by TransID desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseReturnHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_PurchaseReturnHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PReturn_No nvarchar(255), @Invoice_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id order by TransID desc End ELSE IF (@Optype=2) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo,Inv_PurchaseInvoiceHeader.InvoiceDate,dbo.Inv_PurchaseReturnHeader.Field1,Inv_PurchaseReturnHeader.Field2 as ReturnAmount, Inv_PurchaseReturnHeader.Field3 as CurrencyID , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseInvoiceHeader.SupplierId) as Supplier_Name, Inv_PurchaseInvoiceHeader.SupplierId, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.ModifiedBy) as ModifiedUser FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' order by TransID desc End ELSE IF (@Optype=3) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo ,Inv_PurchaseReturnHeader.Field2 as ReturnAmount,Inv_PurchaseReturnHeader.Field3 as CurrencyID , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseReturnHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseReturnHeader.ModifiedBy) as ModifiedUser FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='False' order by TransID desc End ELSE IF (@Optype=4) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo,Inv_PurchaseReturnHeader.Field1 ,Inv_PurchaseReturnHeader.Field2 as ReturnAmount, Inv_PurchaseReturnHeader.Field3 as CurrencyID FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.Trans_Id=@Trans_Id order by TransID desc End ELSE IF (@Optype=5) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.PReturn_No=@PReturn_No order by TransID desc End ELSE IF (@Optype=6) Begin SELECT dbo.Inv_PurchaseReturnHeader.Trans_Id, dbo.Inv_PurchaseReturnHeader.PReturn_No, dbo.Inv_PurchaseReturnHeader.PRDate, dbo.Inv_PurchaseReturnHeader.Invoice_Id, dbo.Inv_PurchaseReturnHeader.PaymentModeID, dbo.Inv_PurchaseReturnHeader.InvoiceType, dbo.Inv_PurchaseReturnHeader.Remark, dbo.Inv_PurchaseInvoiceHeader.InvoiceNo FROM dbo.Inv_PurchaseReturnHeader INNER JOIN dbo.Inv_PurchaseInvoiceHeader ON dbo.Inv_PurchaseReturnHeader.Invoice_Id = dbo.Inv_PurchaseInvoiceHeader.TransID Where Inv_PurchaseReturnHeader.Company_Id = @Company_Id and Inv_PurchaseReturnHeader.Brand_Id=@Brand_Id and Inv_PurchaseReturnHeader.Location_Id=@Location_Id and Inv_PurchaseReturnHeader.IsActive='True' and Inv_PurchaseReturnHeader.Invoice_Id=@Invoice_Id order by TransID desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseReturnHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_PurchaseRequestHeader_SelectRow] @Company_Id int, @Brand_ID int, @Location_Id int, @Trans_Id int, @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id order by Trans_Id desc end if(@Optype=2) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID order by Trans_Id desc end if(@Optype=3) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id order by Trans_Id desc end if(@Optype=4) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and Trans_Id=@Trans_Id order by Trans_Id desc end if(@Optype=5) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from dbo.Set_DepartmentMaster where Dep_Id=(select Department_Id from dbo.Set_EmployeeMaster where Emp_Code=Inv_PurchaseRequestHeader.CreatedBy)) as Department_Name, (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName , (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc end if(@Optype=6) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from dbo.Set_DepartmentMaster where Dep_Id=(select Department_Id from dbo.Set_EmployeeMaster where Emp_Code=Inv_PurchaseRequestHeader.CreatedBy)) as Department_Name, (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName , (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc end if(@Optype=7) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], Field7, CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and Trans_Id=@Trans_Id and IsActive='True' order by Trans_Id desc end if(@Optype=8) begin Select *, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName from Inv_PurchaseRequestHeader where Inv_PurchaseRequestHeader.Trans_Id not in(select TransNo from Inv_PurchaseInquiryHeader where TransFrom='PR') and Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' and DepartmentApproval='True' and Inv_PurchaseRequestHeader.Field3<>'Reject' order by ModifiedDate desc end if(@Optype=9) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader order by Trans_Id desc end if(@Optype=10) begin Select * , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName from Inv_PurchaseRequestHeader where Inv_PurchaseRequestHeader.Trans_Id not in(select TransNo from Inv_PurchaseInquiryHeader where TransFrom='PR') and Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' and DepartmentApproval='True' and Inv_PurchaseRequestHeader.Field3<>'Reject' order by ModifiedDate desc end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_PurchaseRequestHeader_SelectRow] @Company_Id int, @Brand_ID int, @Location_Id int, @Trans_Id int, @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id order by Trans_Id desc end if(@Optype=2) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID order by Trans_Id desc end if(@Optype=3) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id order by Trans_Id desc end if(@Optype=4) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and Trans_Id=@Trans_Id order by Trans_Id desc end if(@Optype=5) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from dbo.Set_DepartmentMaster where Dep_Id=(select Department_Id from dbo.Set_EmployeeMaster where Emp_Code=Inv_PurchaseRequestHeader.CreatedBy)) as Department_Name, (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName , (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc end if(@Optype=6) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from dbo.Set_DepartmentMaster where Dep_Id=(select Department_Id from dbo.Set_EmployeeMaster where Emp_Code=Inv_PurchaseRequestHeader.CreatedBy)) as Department_Name, (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName , (select Emp_Name from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc end if(@Optype=7) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], Field7, CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName From Inv_PurchaseRequestHeader where Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and Trans_Id=@Trans_Id and IsActive='True' order by Trans_Id desc end if(@Optype=8) begin Select *, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName from Inv_PurchaseRequestHeader where Inv_PurchaseRequestHeader.Trans_Id not in(select TransNo from Inv_PurchaseInquiryHeader where TransFrom='PR') and Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' and DepartmentApproval='True' and Inv_PurchaseRequestHeader.Field3<>'Reject' order by ModifiedDate desc end if(@Optype=9) begin Select [Company_Id], [Brand_ID], [Location_Id], [Trans_Id], [RequestNo], replace(convert(NVARCHAR,RequestDate, 106), ' ', '-') AS RequestDate, [TermCondition], [Status], replace(convert(NVARCHAR,ExpDelDate, 106), ' ', '-') AS ExpDelDate, [DepartmentApproval], [ProcurementApproval], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseRequestHeader order by Trans_Id desc end if(@Optype=10) begin Select * , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.CreatedBy) as UserName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseRequestHeader.ModifiedBy) as Modified_User, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Inv_PurchaseRequestHeader.Field1) as DepartmentName from Inv_PurchaseRequestHeader where Inv_PurchaseRequestHeader.Trans_Id not in(select TransNo from Inv_PurchaseInquiryHeader where TransFrom='PR') and Company_Id=@Company_Id and Brand_ID=@Brand_ID and Location_Id=@Location_Id and IsActive='True' and DepartmentApproval='True' and Inv_PurchaseRequestHeader.Field3<>'Reject' order by ModifiedDate desc end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_PurchaseQuoteHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @RPQ_No nvarchar(255), @PI_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (select PI_No from Inv_PurchaseInquiryHeader where Trans_Id=Inv_PurchaseQuoteHeader.PI_No) as Pinq_No, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Ems_ContactMaster.Name) FROM Ems_ContactMaster where Ems_ContactMaster.Trans_Id in (select distinct(Supplier_Id) from dbo.Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as Supplier_Name , case when (select top 1 Inv_PurchaseOrderHeader.TransID from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.ReferenceVoucherType='PQ' and Inv_PurchaseOrderHeader.ReferenceID=Inv_PurchaseQuoteHeader.Trans_Id) Is null then 'Pending' else 'Created' end as QuotationStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.ModifiedBy) as ModifiedUser FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (select PI_No from Inv_PurchaseInquiryHeader where Trans_Id=Inv_PurchaseQuoteHeader.PI_No) as Pinq_No, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Ems_ContactMaster.Name) FROM Ems_ContactMaster where Ems_ContactMaster.Trans_Id in (select distinct(Supplier_Id) from dbo.Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as Supplier_Name, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.ModifiedBy) as ModifiedUser FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and RPQ_No=@RPQ_No order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_PurchaseQuoteHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @RPQ_No nvarchar(255), @PI_No int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (select PI_No from Inv_PurchaseInquiryHeader where Trans_Id=Inv_PurchaseQuoteHeader.PI_No) as Pinq_No, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Ems_ContactMaster.Name) FROM Ems_ContactMaster where Ems_ContactMaster.Trans_Id in (select distinct(Supplier_Id) from dbo.Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as Supplier_Name , case when (select top 1 Inv_PurchaseOrderHeader.TransID from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.ReferenceVoucherType='PQ' and Inv_PurchaseOrderHeader.ReferenceID=Inv_PurchaseQuoteHeader.Trans_Id) Is null then 'Pending' else 'Created' end as QuotationStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.ModifiedBy) as ModifiedUser FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive], (select PI_No from Inv_PurchaseInquiryHeader where Trans_Id=Inv_PurchaseQuoteHeader.PI_No) as Pinq_No, (SELECT STUFF((SELECT Distinct ',' + RTRIM(Ems_ContactMaster.Name) FROM Ems_ContactMaster where Ems_ContactMaster.Trans_Id in (select distinct(Supplier_Id) from dbo.Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id) FOR XML PATH('')),1,1,'') ) as Supplier_Name, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Inv_PurchaseQuoteHeader.ModifiedBy) as ModifiedUser FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and RPQ_No=@RPQ_No order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[RPQ_No] ,[RPQ_Date] ,[PI_No] ,[TotalAmount] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseQuoteHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "alter Procedure [dbo].[sp_Inv_PurchaseOrderHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @Optype int As if(@Optype=1) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id order by TransID desc End if(@Optype=2) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id order by TransID desc End if(@Optype=3) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID order by TransID desc End if(@Optype=4) Begin Select PO.[Company_Id], PO.[Brand_Id], PO.[Location_ID], PO.[TransID], PO.[PoNO], PO.[PaymentModeID], replace(convert(NVARCHAR,PO.PODate, 106), ' ', '-') AS PODate, PO.[ReferenceVoucherType], PO.[ReferenceID], PO.[SalesOrderID], replace(convert(NVARCHAR,PO.DeliveryDate, 106), ' ', '-') AS DeliveryDate, PO.[OrderType], PO.[SupplierId], PO.[CurrencyID], PO.[CurrencyRate], PO.[Remark], PO.[ShippingLine], PO.[ShipBy], PO.[ShipmentType], PO.[Freight_Status], PO.[ShipUnit], PO.[TotalWeight], PO.[UnitRate], replace(convert(NVARCHAR,PO.DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,PO.DateReceiving, 106), ' ', '-') AS DateReceiving, PO.[PartialShipment], PO.[Condition_1], PO.[Condition_2], PO.[Condition_3], PO.[Condition_4], PO.[Condition_5], Airway_Bill_No, Volumetric_weight, PO.[Field1], PO.[Field2], PO.[Field3], PO.[Field4], PO.[Field5], PO.[Field6], case when PO.[Field6]=0 then 'Pending' when PO.[Field6]=1 then 'Approved' end as ApprovalStatus, PO.[Field7], PO.[IsActive], PO.[CreatedBy], PO.[CreatedDate], PO.[ModifiedBy], PO.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.TransID=PO.TransID) )as Supplier_Name, case when PO.OrderType = 'D' then 'Direct' when po.OrderType='R' And po.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type, ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=PO.TransID)+CAST(PO.Field3 as numeric(18,6))) as PoAmount, case when (select distinct Inv_PurchaseInvoiceDetail.POId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.POId=PO.TransID) Is null then 'Pending' else 'Created' end as InvoiceStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader as PO where PO.Company_Id=@Company_Id and PO.Brand_Id=@Brand_Id and PO.Location_ID=@Location_ID and PO.IsActive='True' order by PO.TransID desc End if(@Optype=5) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=Inv_PurchaseOrderHeader.TransID)+CAST(Inv_PurchaseOrderHeader.Field3 as numeric(18,6))) as PoAmount , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseOrderHeader.Condition_2) as ShipToName, (select Set_AddressMaster.Address_Name from Set_AddressMaster where Set_AddressMaster.Trans_Id=Inv_PurchaseOrderHeader.Condition_3) as ShipToAddressName From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='True' and TransID=@TransID order by TransID desc End if(@Optype=6) Begin Select PO.[Company_Id], PO.[Brand_Id], PO.[Location_ID], PO.[TransID], PO.[PoNO], PO.[PaymentModeID], replace(convert(NVARCHAR,PO.PODate, 106), ' ', '-') AS PODate, PO.[ReferenceVoucherType], PO.[ReferenceID], PO.[SalesOrderID], replace(convert(NVARCHAR,PO.DeliveryDate, 106), ' ', '-') AS DeliveryDate, PO.[OrderType], PO.[SupplierId], PO.[CurrencyID], PO.[CurrencyRate], PO.[Remark], PO.[ShippingLine], PO.[ShipBy], PO.[ShipmentType], PO.[Freight_Status], PO.[ShipUnit], PO.[TotalWeight], PO.[UnitRate], replace(convert(NVARCHAR,PO.DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,PO.DateReceiving, 106), ' ', '-') AS DateReceiving, PO.[PartialShipment], PO.[Condition_1], PO.[Condition_2], PO.[Condition_3], PO.[Condition_4], PO.[Condition_5], Airway_Bill_No, Volumetric_weight, PO.[Field1], PO.[Field2], PO.[Field3], PO.[Field4], PO.[Field5], PO.[Field6], case when PO.[Field6]=0 then 'Pending' when PO.[Field6]=1 then 'Approved' end as ApprovalStatus, PO.[Field7], PO.[IsActive], PO.[CreatedBy], PO.[CreatedDate], PO.[ModifiedBy], PO.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.TransID=PO.TransID) )as Supplier_Name, case when PO.OrderType = 'D' then 'Direct' when po.OrderType='R' And po.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader as PO where PO.Company_Id=@Company_Id and PO.Brand_Id=@Brand_Id and PO.Location_ID=@Location_ID and PO.IsActive='False' order by PO.TransID desc End if(@Optype=7) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader order by TransID desc End if(@Optype=8) begin Select Inv_PurchaseOrderHeader.TransID, Inv_PurchaseOrderHeader.PoNO,Inv_PurchaseOrderHeader.PODate,Inv_PurchaseOrderHeader.DeliveryDate, (Select name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseOrderHeader.SupplierId) as Supplier_Name, case when Inv_PurchaseOrderHeader.OrderType = 'D' then 'Direct' when Inv_PurchaseOrderHeader.OrderType='R' And Inv_PurchaseOrderHeader.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type, Inv_PurchaseOrderHeader.Field4, ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=Inv_PurchaseOrderHeader.TransID)+CAST(Inv_PurchaseOrderHeader.Field3 as numeric(18,6))) as PoAmount, Inv_PurchaseOrderHeader.CurrencyID, Inv_productMaster.EProductName as ProductName,Inv_productMaster.ProductCode, Inv_PurchaseOrderDetail.OrderQty, case when (Inv_PurchaseOrderDetail.OrderQty-(Select sUM(RecQty) from Inv_PurchaseInvoiceDetail where POId =Inv_PurchaseOrderDetail.PoNO and ProductId=Inv_PurchaseOrderDetail.Product_ID))is NULL then Inv_PurchaseOrderDetail.OrderQty else (Inv_PurchaseOrderDetail.OrderQty-(Select sUM(RecQty) from Inv_PurchaseInvoiceDetail where POId =Inv_PurchaseOrderDetail.PoNO and ProductId=Inv_PurchaseOrderDetail.Product_ID)) end as RemainQty, Inv_PurchaseOrderDetail.UnitID , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseOrderHeader.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader inner join Inv_PurchaseOrderDetail on Inv_PurchaseOrderHeader.TransID=Inv_PurchaseOrderDetail.PoNO inner join Inv_productMaster on Inv_PurchaseOrderDetail.Product_ID=Inv_productMaster.ProductId where Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='False') and POId =Inv_PurchaseOrderDetail.PoNO) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='True') and (Inv_PurchaseInvoiceDetail.OrderQty-Inv_PurchaseInvoiceDetail.InvoiceQty)<=0 and POId =Inv_PurchaseOrderDetail.PoNO ) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='False') and (Inv_PurchaseInvoiceDetail.InvoiceQty)>0 and Inv_PurchaseOrderHeader.PartialShipment<>'Y' and POId =Inv_PurchaseOrderDetail.PoNO) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='True') and (Inv_PurchaseInvoiceDetail.InvoiceQty)>0 and Inv_PurchaseOrderHeader.PartialShipment<>'Y' and POId =Inv_PurchaseOrderDetail.PoNO ) and Inv_PurchaseOrderHeader.Company_Id=@Company_Id and Inv_PurchaseOrderHeader.Brand_Id=@Brand_Id and Inv_PurchaseOrderHeader.Location_ID=@Location_ID and Inv_PurchaseOrderHeader.IsActive='True' end";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_PurchaseOrderHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @Optype int As if(@Optype=1) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id order by TransID desc End if(@Optype=2) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id order by TransID desc End if(@Optype=3) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID order by TransID desc End if(@Optype=4) Begin Select PO.[Company_Id], PO.[Brand_Id], PO.[Location_ID], PO.[TransID], PO.[PoNO], PO.[PaymentModeID], replace(convert(NVARCHAR,PO.PODate, 106), ' ', '-') AS PODate, PO.[ReferenceVoucherType], PO.[ReferenceID], PO.[SalesOrderID], replace(convert(NVARCHAR,PO.DeliveryDate, 106), ' ', '-') AS DeliveryDate, PO.[OrderType], PO.[SupplierId], PO.[CurrencyID], PO.[CurrencyRate], PO.[Remark], PO.[ShippingLine], PO.[ShipBy], PO.[ShipmentType], PO.[Freight_Status], PO.[ShipUnit], PO.[TotalWeight], PO.[UnitRate], replace(convert(NVARCHAR,PO.DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,PO.DateReceiving, 106), ' ', '-') AS DateReceiving, PO.[PartialShipment], PO.[Condition_1], PO.[Condition_2], PO.[Condition_3], PO.[Condition_4], PO.[Condition_5], Airway_Bill_No, Volumetric_weight, PO.[Field1], PO.[Field2], PO.[Field3], PO.[Field4], PO.[Field5], PO.[Field6], case when PO.[Field6]=0 then 'Pending' when PO.[Field6]=1 then 'Approved' end as ApprovalStatus, PO.[Field7], PO.[IsActive], PO.[CreatedBy], PO.[CreatedDate], PO.[ModifiedBy], PO.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.TransID=PO.TransID) )as Supplier_Name, case when PO.OrderType = 'D' then 'Direct' when po.OrderType='R' And po.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type, ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=PO.TransID)+CAST(PO.Field3 as numeric(18,6))) as PoAmount, case when (select distinct Inv_PurchaseInvoiceDetail.POId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.POId=PO.TransID) Is null then 'Pending' else 'Created' end as InvoiceStatus , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader as PO where PO.Company_Id=@Company_Id and PO.Brand_Id=@Brand_Id and PO.Location_ID=@Location_ID and PO.IsActive='True' order by PO.TransID desc End if(@Optype=5) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=Inv_PurchaseOrderHeader.TransID)+CAST(Inv_PurchaseOrderHeader.Field3 as numeric(18,6))) as PoAmount , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseOrderHeader.Condition_2) as ShipToName, (select Set_AddressMaster.Address_Name from Set_AddressMaster where Set_AddressMaster.Trans_Id=Inv_PurchaseOrderHeader.Condition_3) as ShipToAddressName From Inv_PurchaseOrderHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='True' and TransID=@TransID order by TransID desc End if(@Optype=6) Begin Select PO.[Company_Id], PO.[Brand_Id], PO.[Location_ID], PO.[TransID], PO.[PoNO], PO.[PaymentModeID], replace(convert(NVARCHAR,PO.PODate, 106), ' ', '-') AS PODate, PO.[ReferenceVoucherType], PO.[ReferenceID], PO.[SalesOrderID], replace(convert(NVARCHAR,PO.DeliveryDate, 106), ' ', '-') AS DeliveryDate, PO.[OrderType], PO.[SupplierId], PO.[CurrencyID], PO.[CurrencyRate], PO.[Remark], PO.[ShippingLine], PO.[ShipBy], PO.[ShipmentType], PO.[Freight_Status], PO.[ShipUnit], PO.[TotalWeight], PO.[UnitRate], replace(convert(NVARCHAR,PO.DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,PO.DateReceiving, 106), ' ', '-') AS DateReceiving, PO.[PartialShipment], PO.[Condition_1], PO.[Condition_2], PO.[Condition_3], PO.[Condition_4], PO.[Condition_5], Airway_Bill_No, Volumetric_weight, PO.[Field1], PO.[Field2], PO.[Field3], PO.[Field4], PO.[Field5], PO.[Field6], case when PO.[Field6]=0 then 'Pending' when PO.[Field6]=1 then 'Approved' end as ApprovalStatus, PO.[Field7], PO.[IsActive], PO.[CreatedBy], PO.[CreatedDate], PO.[ModifiedBy], PO.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.TransID=PO.TransID) )as Supplier_Name, case when PO.OrderType = 'D' then 'Direct' when po.OrderType='R' And po.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=po.company_id and Set_EmployeeMaster.Emp_Code=po.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader as PO where PO.Company_Id=@Company_Id and PO.Brand_Id=@Brand_Id and PO.Location_ID=@Location_ID and PO.IsActive='False' order by PO.TransID desc End if(@Optype=7) Begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [PoNO], [PaymentModeID], replace(convert(NVARCHAR,PODate, 106), ' ', '-') AS PODate, [ReferenceVoucherType], [ReferenceID], [SalesOrderID], replace(convert(NVARCHAR,DeliveryDate, 106), ' ', '-') AS DeliveryDate, [OrderType], [SupplierId], [CurrencyID], [CurrencyRate], [Remark], [ShippingLine], [ShipBy], [ShipmentType], [Freight_Status], [ShipUnit], [TotalWeight], [UnitRate], replace(convert(NVARCHAR,DateShipping, 106), ' ', '-') AS DateShipping, replace(convert(NVARCHAR,DateReceiving, 106), ' ', '-') AS DateReceiving, [PartialShipment], [Condition_1], [Condition_2], [Condition_3], [Condition_4], [Condition_5], Airway_Bill_No, Volumetric_weight, [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], case when [Field6]=0 then 'Pending' when [Field6]=1 then 'Approved' end as ApprovalStatus, [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseOrderHeader order by TransID desc End if(@Optype=8) begin Select Inv_PurchaseOrderHeader.TransID, Inv_PurchaseOrderHeader.PoNO,Inv_PurchaseOrderHeader.PODate,Inv_PurchaseOrderHeader.DeliveryDate, (Select name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseOrderHeader.SupplierId) as Supplier_Name, case when Inv_PurchaseOrderHeader.OrderType = 'D' then 'Direct' when Inv_PurchaseOrderHeader.OrderType='R' And Inv_PurchaseOrderHeader.SalesOrderID=0 then 'By Quotation' else 'By Salesorder' end as Order_Type, Inv_PurchaseOrderHeader.Field4, ((select sum(Inv_PurchaseOrderDetail.Amount) from Inv_PurchaseOrderDetail where Inv_PurchaseOrderDetail.PoNO=Inv_PurchaseOrderHeader.TransID)+CAST(Inv_PurchaseOrderHeader.Field3 as numeric(18,6))) as PoAmount, Inv_PurchaseOrderHeader.CurrencyID, Inv_productMaster.EProductName as ProductName,Inv_productMaster.ProductCode, Inv_PurchaseOrderDetail.OrderQty, case when (Inv_PurchaseOrderDetail.OrderQty-(Select sUM(RecQty) from Inv_PurchaseInvoiceDetail where POId =Inv_PurchaseOrderDetail.PoNO and ProductId=Inv_PurchaseOrderDetail.Product_ID))is NULL then Inv_PurchaseOrderDetail.OrderQty else (Inv_PurchaseOrderDetail.OrderQty-(Select sUM(RecQty) from Inv_PurchaseInvoiceDetail where POId =Inv_PurchaseOrderDetail.PoNO and ProductId=Inv_PurchaseOrderDetail.Product_ID)) end as RemainQty, Inv_PurchaseOrderDetail.UnitID , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseOrderHeader.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=Inv_PurchaseOrderHeader.company_id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseOrderHeader.ModifiedBy) as ModifiedUser From Inv_PurchaseOrderHeader inner join Inv_PurchaseOrderDetail on Inv_PurchaseOrderHeader.TransID=Inv_PurchaseOrderDetail.PoNO inner join Inv_productMaster on Inv_PurchaseOrderDetail.Product_ID=Inv_productMaster.ProductId where Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='False') and POId =Inv_PurchaseOrderDetail.PoNO) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='True') and (Inv_PurchaseInvoiceDetail.OrderQty-Inv_PurchaseInvoiceDetail.InvoiceQty)<=0 and POId =Inv_PurchaseOrderDetail.PoNO ) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='False') and (Inv_PurchaseInvoiceDetail.InvoiceQty)>0 and Inv_PurchaseOrderHeader.PartialShipment<>'Y' and POId =Inv_PurchaseOrderDetail.PoNO) and Product_ID not in( Select ProductId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo in (Select Inv_PurchaseInvoiceHeader.TransID From Inv_PurchaseInvoiceHeader where Post='True') and (Inv_PurchaseInvoiceDetail.InvoiceQty)>0 and Inv_PurchaseOrderHeader.PartialShipment<>'Y' and POId =Inv_PurchaseOrderDetail.PoNO ) and Inv_PurchaseOrderHeader.Company_Id=@Company_Id and Inv_PurchaseOrderHeader.Brand_Id=@Brand_Id and Inv_PurchaseOrderHeader.Location_ID=@Location_ID and Inv_PurchaseOrderHeader.IsActive='True' end";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader order by TransID desc end if(@Optype=2) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id order by TransID desc end if(@Optype=3) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id order by TransID desc end if(@Optype=4) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID order by TransID desc end if(@Optype=5) begin Select PIN.[Company_Id], PIN.[Brand_Id], PIN.[Location_ID], PIN.[TransID], PIN.[InvoiceNo], PIN.[InvoiceDate], PIN.[InvoiceType], PIN.[SupInvoiceNo], PIN.[SupInvoiceDate], PIN.[PaymentModeID], PIN.[SupplierId], PIN.[CurrencyID], PIN.[ExchangeRate], PIN.[CostingRate], PIN.[Remark], PIN.[OtherCharges], PIN.[TotalQuantity], PIN.[TotalAmount], PIN.[NetTax], PIN.[NetTaxValue], PIN.[NetAmount], PIN.[NetDiscount], PIN.[NetDiscountValue], PIN.[GrandTotal], PIN.[Post], PIN.[Field1], PIN.[Field2], PIN.[Field3], PIN.[Field4], PIN.[Field5], PIN.[Field6], PIN.[Field7], PIN.[IsActive], PIN.[CreatedBy], PIN.[CreatedDate], PIN.[ModifiedBy], PIN.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransID=PIN.TransID) )as Supplier_Name , (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_PurchaseOrderHeader.PoNO) FROM Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.Transid in (select Distinct Inv_PurchaseInvoiceDetail.POId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo=PIN.TransID) FOR XML PATH('')),1,1,'') ) as OrderList, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.ModifiedBy) as ModifiedUser From Inv_PurchaseInvoiceHeader as PIN where PIN.Company_Id=@Company_Id and PIN.Brand_Id=@Brand_Id and PIN.Location_ID=@Location_ID and PIN.IsActive='True' order by PIN.TransID desc end if(@Optype=6) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='False' order by TransID desc end if(@Optype=7) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='True' and TransID=@TransID order by TransID desc end if(@Optype=8) begin Select PIN.[Company_Id], PIN.[Brand_Id], PIN.[Location_ID], PIN.[TransID], PIN.[InvoiceNo], PIN.[InvoiceDate], PIN.[InvoiceType], PIN.[SupInvoiceNo], PIN.[SupInvoiceDate], PIN.[PaymentModeID], PIN.[SupplierId], PIN.[CurrencyID], PIN.[ExchangeRate], PIN.[CostingRate], PIN.[Remark], PIN.[OtherCharges], PIN.[TotalQuantity], PIN.[TotalAmount], PIN.[NetTax], PIN.[NetTaxValue], PIN.[NetAmount], PIN.[NetDiscount], PIN.[NetDiscountValue], PIN.[GrandTotal], PIN.[Post], PIN.[Field1], PIN.[Field2], PIN.[Field3], PIN.[Field4], PIN.[Field5], PIN.[Field6], PIN.[Field7], PIN.[IsActive], PIN.[CreatedBy], PIN.[CreatedDate], PIN.[ModifiedBy], PIN.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransID=PIN.TransID) )as Supplier_Name , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.ModifiedBy) as ModifiedUser From Inv_PurchaseInvoiceHeader as PIN where PIN.Company_Id=@Company_Id and PIN.Brand_Id=@Brand_Id and PIN.Location_ID=@Location_ID and PIN.IsActive='True' and PIN.Post='True' and PIN.TransID not in (select Inv_PurchaseReturnHeader.Invoice_Id from Inv_PurchaseReturnHeader) order by PIN.TransID desc end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @Optype int As Begin if(@Optype=1) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader order by TransID desc end if(@Optype=2) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id order by TransID desc end if(@Optype=3) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id order by TransID desc end if(@Optype=4) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID order by TransID desc end if(@Optype=5) begin Select PIN.[Company_Id], PIN.[Brand_Id], PIN.[Location_ID], PIN.[TransID], PIN.[InvoiceNo], PIN.[InvoiceDate], PIN.[InvoiceType], PIN.[SupInvoiceNo], PIN.[SupInvoiceDate], PIN.[PaymentModeID], PIN.[SupplierId], PIN.[CurrencyID], PIN.[ExchangeRate], PIN.[CostingRate], PIN.[Remark], PIN.[OtherCharges], PIN.[TotalQuantity], PIN.[TotalAmount], PIN.[NetTax], PIN.[NetTaxValue], PIN.[NetAmount], PIN.[NetDiscount], PIN.[NetDiscountValue], PIN.[GrandTotal], PIN.[Post], PIN.[Field1], PIN.[Field2], PIN.[Field3], PIN.[Field4], PIN.[Field5], PIN.[Field6], PIN.[Field7], PIN.[IsActive], PIN.[CreatedBy], PIN.[CreatedDate], PIN.[ModifiedBy], PIN.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransID=PIN.TransID) )as Supplier_Name , (SELECT STUFF((SELECT Distinct ',' + RTRIM(Inv_PurchaseOrderHeader.PoNO) FROM Inv_PurchaseOrderHeader where Inv_PurchaseOrderHeader.Transid in (select Distinct Inv_PurchaseInvoiceDetail.POId from Inv_PurchaseInvoiceDetail where Inv_PurchaseInvoiceDetail.InvoiceNo=PIN.TransID) FOR XML PATH('')),1,1,'') ) as OrderList, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.ModifiedBy) as ModifiedUser From Inv_PurchaseInvoiceHeader as PIN where PIN.Company_Id=@Company_Id and PIN.Brand_Id=@Brand_Id and PIN.Location_ID=@Location_ID and PIN.IsActive='True' order by PIN.TransID desc end if(@Optype=6) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='False' order by TransID desc end if(@Optype=7) begin Select [Company_Id], [Brand_Id], [Location_ID], [TransID], [InvoiceNo], [InvoiceDate], [InvoiceType], [SupInvoiceNo], [SupInvoiceDate], [PaymentModeID], [SupplierId], [CurrencyID], [ExchangeRate], [CostingRate], [Remark], [OtherCharges], [TotalQuantity], [TotalAmount], [NetTax], [NetTaxValue], [NetAmount], [NetDiscount], [NetDiscountValue], [GrandTotal], [Post], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], CAST([Row_Lock_Id] as bigint) as Row_Lock_Id, [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Inv_PurchaseInvoiceHeader where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_ID=@Location_ID and IsActive='True' and TransID=@TransID order by TransID desc end if(@Optype=8) begin Select PIN.[Company_Id], PIN.[Brand_Id], PIN.[Location_ID], PIN.[TransID], PIN.[InvoiceNo], PIN.[InvoiceDate], PIN.[InvoiceType], PIN.[SupInvoiceNo], PIN.[SupInvoiceDate], PIN.[PaymentModeID], PIN.[SupplierId], PIN.[CurrencyID], PIN.[ExchangeRate], PIN.[CostingRate], PIN.[Remark], PIN.[OtherCharges], PIN.[TotalQuantity], PIN.[TotalAmount], PIN.[NetTax], PIN.[NetTaxValue], PIN.[NetAmount], PIN.[NetDiscount], PIN.[NetDiscountValue], PIN.[GrandTotal], PIN.[Post], PIN.[Field1], PIN.[Field2], PIN.[Field3], PIN.[Field4], PIN.[Field5], PIN.[Field6], PIN.[Field7], PIN.[IsActive], PIN.[CreatedBy], PIN.[CreatedDate], PIN.[ModifiedBy], PIN.[ModifiedDate] ,(Select name from Ems_ContactMaster where Trans_Id in (Select SupplierId from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransID=PIN.TransID) )as Supplier_Name , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=PIN.company_id and Set_EmployeeMaster.Emp_Code=PIN.ModifiedBy) as ModifiedUser From Inv_PurchaseInvoiceHeader as PIN where PIN.Company_Id=@Company_Id and PIN.Brand_Id=@Brand_Id and PIN.Location_ID=@Location_ID and PIN.IsActive='True' and PIN.Post='True' and PIN.TransID not in (select Inv_PurchaseReturnHeader.Invoice_Id from Inv_PurchaseReturnHeader) order by PIN.TransID desc end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_PurchaseInquiryHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PI_No nvarchar(255), @TransFrom nvarchar(50), @TransNo nvarchar(50), @Optype int As Begin if(@Optype=1) Begin SELECT PIQ.[Company_Id] ,PIQ.[Brand_Id] ,PIQ.[Location_Id] ,PIQ.[Trans_Id] ,PIQ.[PI_No] ,PIQ.[PIDate] ,PIQ.[TransFrom] ,case when PIQ.[TransFrom]='SI' then 'Sales Inquiry' when PIQ.[TransFrom]='PR' then 'Purchase Request' when PIQ.[TransFrom]='' then 'Direct' end as RefType ,PIQ.[Description] ,PIQ.[Status] ,PIQ.[Field1] ,PIQ.[Field2] ,PIQ.[Field3] ,PIQ.[Field4] ,PIQ.[Field5] ,PIQ.[Field6] ,PIQ.[Field7] ,PIQ.[CreatedBy] ,PIQ.[CreatedDate] ,PIQ.[ModifiedBy] ,PIQ.[ModifiedDate] ,PIQ.[IsActive], (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.CreatedBy) as UserName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.ModifiedBy) as ModifiedUserName, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=PIQ.CreatedBy)) as DepartmentName , case when PIQ.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=PIQ.TransNo) when PIQ.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=PIQ.TransNo) else '0' end as TransNo , case when PIQ.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= PIQ.TransNo)) end as Customer_Name , case when PIQ.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as OrderCompletionDate , case when PIQ.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as TenderNo FROM Inv_PurchaseInquiryHeader as PIQ Where PIQ.Company_Id = @Company_Id and PIQ.Brand_Id=@Brand_Id and PIQ.Location_Id=@Location_Id and PIQ.IsActive='True' order by PIQ.Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT PIQ.[Company_Id] ,PIQ.[Brand_Id] ,PIQ.[Location_Id] ,PIQ.[Trans_Id] ,PIQ.[PI_No] ,PIQ.[PIDate] ,PIQ.[TransFrom] ,case when PIQ.[TransFrom]='SI' then 'Sales Inquiry' when PIQ.[TransFrom]='PR' then 'Purchase Request' when PIQ.[TransFrom]='' then 'Direct' end as RefType ,PIQ.[Description] ,PIQ.[Status] ,PIQ.[Field1] ,PIQ.[Field2] ,PIQ.[Field3] ,PIQ.[Field4] ,PIQ.[Field5] ,PIQ.[Field6] ,PIQ.[Field7] ,PIQ.[CreatedBy] ,PIQ.[CreatedDate] ,PIQ.[ModifiedBy] ,PIQ.[ModifiedDate] ,PIQ.[IsActive], (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.CreatedBy) as UserName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.ModifiedBy) as ModifiedUserName, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=PIQ.CreatedBy)) as DepartmentName , case when PIQ.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=PIQ.TransNo) when PIQ.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=PIQ.TransNo) else '0' end as TransNo , case when PIQ.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= PIQ.TransNo)) end as Customer_Name , case when PIQ.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as OrderCompletionDate , case when PIQ.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as TenderNo FROM Inv_PurchaseInquiryHeader as PIQ Where PIQ .Company_Id = @Company_Id and PIQ.Brand_Id=@Brand_Id and PIQ.Location_Id=@Location_Id and PIQ .IsActive='False' order by PIQ.Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST([Row_Lock_Id] as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and TransFrom=@TransFrom and TransNo=@TransNo order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin Select Inv_PurchaseInquiryHeader.*, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseInquiryHeader.CreatedBy) as UserName, case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then 'Sales Inquiry' when Inv_PurchaseInquiryHeader.[TransFrom]='PR' then 'Purchase Request' when Inv_PurchaseInquiryHeader.[TransFrom]='' then 'Direct' end as RefType, case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=Inv_PurchaseInquiryHeader.TransNo) when Inv_PurchaseInquiryHeader.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=Inv_PurchaseInquiryHeader.TransNo) else '0' end as RefNo , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= Inv_PurchaseInquiryHeader.TransNo)) end as Customer_Name , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = Inv_PurchaseInquiryHeader.TransNo) end as OrderCompletionDate , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = Inv_PurchaseInquiryHeader.TransNo) end as TenderNo, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseInquiryHeader.CreatedBy)) as DepartmentName from Inv_PurchaseInquiryHeader where Inv_PurchaseInquiryHeader.Trans_Id not in(select PI_No from Inv_PurchaseQuoteHeader) and IsActive='True' and Company_Id=@Company_Id and Brand_ID=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_PurchaseInquiryHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PI_No nvarchar(255), @TransFrom nvarchar(50), @TransNo nvarchar(50), @Optype int As Begin if(@Optype=1) Begin SELECT PIQ.[Company_Id] ,PIQ.[Brand_Id] ,PIQ.[Location_Id] ,PIQ.[Trans_Id] ,PIQ.[PI_No] ,PIQ.[PIDate] ,PIQ.[TransFrom] ,case when PIQ.[TransFrom]='SI' then 'Sales Inquiry' when PIQ.[TransFrom]='PR' then 'Purchase Request' when PIQ.[TransFrom]='' then 'Direct' end as RefType ,PIQ.[Description] ,PIQ.[Status] ,PIQ.[Field1] ,PIQ.[Field2] ,PIQ.[Field3] ,PIQ.[Field4] ,PIQ.[Field5] ,PIQ.[Field6] ,PIQ.[Field7] ,PIQ.[CreatedBy] ,PIQ.[CreatedDate] ,PIQ.[ModifiedBy] ,PIQ.[ModifiedDate] ,PIQ.[IsActive], (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.CreatedBy) as UserName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.ModifiedBy) as ModifiedUserName, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=PIQ.CreatedBy)) as DepartmentName , case when PIQ.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=PIQ.TransNo) when PIQ.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=PIQ.TransNo) else '0' end as TransNo , case when PIQ.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= PIQ.TransNo)) end as Customer_Name , case when PIQ.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as OrderCompletionDate , case when PIQ.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as TenderNo FROM Inv_PurchaseInquiryHeader as PIQ Where PIQ.Company_Id = @Company_Id and PIQ.Brand_Id=@Brand_Id and PIQ.Location_Id=@Location_Id and PIQ.IsActive='True' order by PIQ.Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT PIQ.[Company_Id] ,PIQ.[Brand_Id] ,PIQ.[Location_Id] ,PIQ.[Trans_Id] ,PIQ.[PI_No] ,PIQ.[PIDate] ,PIQ.[TransFrom] ,case when PIQ.[TransFrom]='SI' then 'Sales Inquiry' when PIQ.[TransFrom]='PR' then 'Purchase Request' when PIQ.[TransFrom]='' then 'Direct' end as RefType ,PIQ.[Description] ,PIQ.[Status] ,PIQ.[Field1] ,PIQ.[Field2] ,PIQ.[Field3] ,PIQ.[Field4] ,PIQ.[Field5] ,PIQ.[Field6] ,PIQ.[Field7] ,PIQ.[CreatedBy] ,PIQ.[CreatedDate] ,PIQ.[ModifiedBy] ,PIQ.[ModifiedDate] ,PIQ.[IsActive], (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.CreatedBy) as UserName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.company_id=@Company_Id and Set_EmployeeMaster.Emp_Code=PIQ.ModifiedBy) as ModifiedUserName, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=PIQ.CreatedBy)) as DepartmentName , case when PIQ.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=PIQ.TransNo) when PIQ.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=PIQ.TransNo) else '0' end as TransNo , case when PIQ.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= PIQ.TransNo)) end as Customer_Name , case when PIQ.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as OrderCompletionDate , case when PIQ.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = PIQ.TransNo) end as TenderNo FROM Inv_PurchaseInquiryHeader as PIQ Where PIQ .Company_Id = @Company_Id and PIQ.Brand_Id=@Brand_Id and PIQ.Location_Id=@Location_Id and PIQ .IsActive='False' order by PIQ.Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,CAST([Row_Lock_Id] as bigint) as Row_Lock_Id ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and TransFrom=@TransFrom and TransNo=@TransNo order by Trans_Id desc End ELSE IF (@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[PI_No] ,[PIDate] ,[TransFrom] ,case when [TransFrom]='SI' then 'Sales Inquiry' when [TransFrom]='PR' then 'Purchase Request' when [TransFrom]='' then 'Direct' end as RefType ,[TransNo] ,[Description] ,[Status] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] ,[IsActive] FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT MAX(Trans_Id) FROM Inv_PurchaseInquiryHeader Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End ELSE IF (@Optype=8) Begin Select Inv_PurchaseInquiryHeader.*, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=@Company_Id and Set_EmployeeMaster.Emp_Code=Inv_PurchaseInquiryHeader.CreatedBy) as UserName, case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then 'Sales Inquiry' when Inv_PurchaseInquiryHeader.[TransFrom]='PR' then 'Purchase Request' when Inv_PurchaseInquiryHeader.[TransFrom]='' then 'Direct' end as RefType, case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select SInquiryNo from Inv_SalesInquiryHeader where SInquiryID=Inv_PurchaseInquiryHeader.TransNo) when Inv_PurchaseInquiryHeader.[TransFrom]='PR' then (select RequestNo from Inv_PurchaseRequestHeader where Trans_Id=Inv_PurchaseInquiryHeader.TransNo) else '0' end as RefNo , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select Name from Ems_ContactMaster where Trans_Id in (select Customer_Id from Inv_SalesInquiryHeader where SInquiryID= Inv_PurchaseInquiryHeader.TransNo)) end as Customer_Name , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select OrderCompletionDate from Inv_SalesInquiryHeader where SInquiryID = Inv_PurchaseInquiryHeader.TransNo) end as OrderCompletionDate , case when Inv_PurchaseInquiryHeader.[TransFrom]='SI' then (select TenderNo from Inv_SalesInquiryHeader where SInquiryID = Inv_PurchaseInquiryHeader.TransNo) end as TenderNo, (select Dep_Name from Set_DepartmentMaster where Dep_Id=(select Department_Id from Set_EmployeeMaster where company_id=@Company_Id and Emp_Code=Inv_PurchaseInquiryHeader.CreatedBy)) as DepartmentName from Inv_PurchaseInquiryHeader where Inv_PurchaseInquiryHeader.Trans_Id not in(select PI_No from Inv_PurchaseQuoteHeader) and IsActive='True' and Company_Id=@Company_Id and Brand_ID=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_ProductMaster_Update] @Company_Id int, @Brand_Id int, @ProductId int, @ProductCode nvarchar(250), @PartNo nvarchar(50), @ModelNo nvarchar(80), @ModelName nvarchar(MAX), @EProductName nvarchar(MAX), @LProductName nvarchar(MAX), @CountryID int, @UnitId int, @ItemType nvarchar(2), @HScode nvarchar(50), @HasBatchNo bit, @TypeOfBatchNo nvarchar(MAX), @HasSerialNo bit, @ReorderQty nvarchar(50), @CostPrice nvarchar(50), @Description text, @SalesPrice1 nvarchar(MAX), @SalesPrice2 nvarchar(MAX), @SalesPrice3 nvarchar(MAX), @ProductColor nvarchar(50), @WSalePrice nvarchar(MAX), @ReservedQty nvarchar(50), @DamageQty nvarchar(50), @ExpiredQty nvarchar(50), @MaximumQty nvarchar(50), @MinimumQty nvarchar(50), @Profit numeric(18,3), @Discount nvarchar(50), @MaintainStock nvarchar(MAX), @URL nvarchar(MAX), @VMWeight nvarchar(11), @WeighUnitID nvarchar(3), @DimLenth numeric(18,3), @DimHieght numeric(18,3), @DimDepth numeric(18,3), @AlternateId1 nvarchar(25), @AlternateId2 nvarchar(25), @AlternateId3 nvarchar(25), @Field1 nvarchar(MAX), @Field2 nvarchar(MAX), @Field3 nvarchar(MAX), @Field4 nvarchar(MAX), @Field5 nvarchar(MAX), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(11), @ModfiedDate datetime, @ReferenceID int output As Begin Update Inv_ProductMaster Set [ProductCode] = @ProductCode, [PartNo] = @PartNo, [ModelNo] = @ModelNo, [ModelName] =@ModelName, [EProductName] = @EProductName, [LProductName] = @LProductName, [CountryID] = @CountryID, [UnitId] = @UnitId, [ItemType] = @ItemType, [HScode] = @HScode, [HasBatchNo] = @HasBatchNo, [TypeOfBatchNo] = @TypeOfBatchNo, [HasSerialNo] = @HasSerialNo, [ReorderQty] = @ReorderQty, [CostPrice] = @CostPrice, [Description] = @Description, [SalesPrice1] = @SalesPrice1, [SalesPrice2] = @SalesPrice2, [SalesPrice3] = @SalesPrice3, [ProductColor] = @ProductColor, [WSalePrice] = @WSalePrice, [ReservedQty] = @ReservedQty, [DamageQty] = @DamageQty, [ExpiredQty] = @ExpiredQty, [MaximumQty] = @MaximumQty, [MinimumQty] = @MinimumQty, [Profit] = @Profit, [Discount] = @Discount, [MaintainStock] = @MaintainStock, [URL] = @URL, [ActualWeight] = @VMWeight, [WeighUnitID] = @WeighUnitID, [DimLenth] = @DimLenth, [DimHieght] = @DimHieght, [DimDepth] = @DimDepth, AlternateId1=@AlternateId1, AlternateId2=@AlternateId2, AlternateId3=@AlternateId3, [Field1] = @Field1, [Field2] = @Field2, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModfiedDate] = @ModfiedDate Where [Company_Id] = @Company_Id and [ProductId] = @ProductId select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_ProductMaster_Update] @Company_Id int, @Brand_Id int, @ProductId int, @ProductCode nvarchar(250), @PartNo nvarchar(50), @ModelNo nvarchar(80), @ModelName nvarchar(MAX), @EProductName nvarchar(MAX), @LProductName nvarchar(MAX), @CountryID int, @UnitId int, @ItemType nvarchar(2), @HScode nvarchar(50), @HasBatchNo bit, @TypeOfBatchNo nvarchar(MAX), @HasSerialNo bit, @ReorderQty nvarchar(50), @CostPrice nvarchar(50), @Description text, @SalesPrice1 nvarchar(MAX), @SalesPrice2 nvarchar(MAX), @SalesPrice3 nvarchar(MAX), @ProductColor nvarchar(50), @WSalePrice nvarchar(MAX), @ReservedQty nvarchar(50), @DamageQty nvarchar(50), @ExpiredQty nvarchar(50), @MaximumQty nvarchar(50), @MinimumQty nvarchar(50), @Profit numeric(18,3), @Discount nvarchar(50), @MaintainStock nvarchar(MAX), @URL nvarchar(MAX), @VMWeight nvarchar(11), @WeighUnitID nvarchar(3), @DimLenth numeric(18,3), @DimHieght numeric(18,3), @DimDepth numeric(18,3), @AlternateId1 nvarchar(25), @AlternateId2 nvarchar(25), @AlternateId3 nvarchar(25), @Field1 nvarchar(MAX), @Field2 nvarchar(MAX), @Field3 nvarchar(MAX), @Field4 nvarchar(MAX), @Field5 nvarchar(MAX), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(11), @ModfiedDate datetime, @ReferenceID int output As Begin Update Inv_ProductMaster Set [ProductCode] = @ProductCode, [PartNo] = @PartNo, [ModelNo] = @ModelNo, [ModelName] =@ModelName, [EProductName] = @EProductName, [LProductName] = @LProductName, [CountryID] = @CountryID, [UnitId] = @UnitId, [ItemType] = @ItemType, [HScode] = @HScode, [HasBatchNo] = @HasBatchNo, [TypeOfBatchNo] = @TypeOfBatchNo, [HasSerialNo] = @HasSerialNo, [ReorderQty] = @ReorderQty, [CostPrice] = @CostPrice, [Description] = @Description, [SalesPrice1] = @SalesPrice1, [SalesPrice2] = @SalesPrice2, [SalesPrice3] = @SalesPrice3, [ProductColor] = @ProductColor, [WSalePrice] = @WSalePrice, [ReservedQty] = @ReservedQty, [DamageQty] = @DamageQty, [ExpiredQty] = @ExpiredQty, [MaximumQty] = @MaximumQty, [MinimumQty] = @MinimumQty, [Profit] = @Profit, [Discount] = @Discount, [MaintainStock] = @MaintainStock, [URL] = @URL, [ActualWeight] = @VMWeight, [WeighUnitID] = @WeighUnitID, [DimLenth] = @DimLenth, [DimHieght] = @DimHieght, [DimDepth] = @DimDepth, AlternateId1=@AlternateId1, AlternateId2=@AlternateId2, AlternateId3=@AlternateId3, [Field1] = @Field1, [Field2] = @Field2, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModfiedDate] = @ModfiedDate Where [Company_Id] = @Company_Id and [ProductId] = @ProductId select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_ProductMaster_SelectRow] @Company_Id int, @Brand_Id int, @ProductId int, @ProductCode nvarchar(250), @Optype int , @Location_Id int As Begin SET NOCOUNT ON; if(@Optype=1) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,10) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.DimDepth,pm.HScode,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate,pm.IsActive , (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id end if(@Optype=2) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,120) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 1 then Pm.SalesPrice1 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 2 then Pm.SalesPrice2 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 3 then Pm.SalesPrice3 else '0' end as ProductSalesPrice, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.CreatedBy)=0 then 'Superadmin' else substring((select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.CreatedBy)),0,17) end as CreatedEmpName, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.modifiedBy)=0 then 'Superadmin' else substring((select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=pm.modifiedBy)),0,17) end as ModifiedEmpName, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else cast((select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) as numeric(18,3) ) end as StockQty , (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName , (select Inv_ModelMaster.Model_No from Inv_ModelMaster where Inv_ModelMaster.Trans_Id=Pm.ModelNo) as ModelNo From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='True' end if(@Optype=3) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,10) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.WeighUnitID,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.ProductId=@ProductId order by ProductId desc end if(@Optype=4) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(PM.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and ProductCode=@ProductCode order by ProductId desc end if(@Optype=5) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(PM.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=pm.Company_Id and Set_EmployeeMaster.Emp_Code=pm.CreatedBy) as CreatedEmpName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=pm.Company_Id and Set_EmployeeMaster.Emp_Code=pm.ModifiedBy) as ModifiedEmpName From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='False' order by ProductId desc end if(@Optype=6) begin select ProductId,ProductCode,EProductName, (SUBSTRING(EProductName,0,10)) as ShortProductName , (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=inv_productmaster.UnitId) as UnitName, IsActive , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=inv_productmaster.ProductId ) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=inv_productmaster.ProductId) end as StockQty from inv_productmaster order by EProductName asc end if(@Optype=7) begin Select Inv_StockDetail.ProductId, inv_productmaster.ProductCode,(SUBSTRING(inv_productmaster.EProductName,0,10)) as ShortProductName ,inv_productmaster.EProductName ,Inv_UnitMaster.Unit_Name , Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by inv_productmaster.EProductName asc end if(@Optype=8) begin Select Inv_StockDetail.ProductId,Inv_Product_CategoryMaster.Category_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name , Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_Product_Category on inv_productmaster.ProductId=Inv_Product_Category.ProductId inner Join Inv_Product_CategoryMaster on Inv_Product_CategoryMaster.Category_Id=Inv_Product_Category.CategoryId where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_Product_CategoryMaster.Category_Name asc end if(@Optype=9) begin Select Inv_StockDetail.ProductId,Inv_ProductBrandMaster.Brand_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name ,Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_Product_Brand on inv_productmaster.ProductId=Inv_Product_Brand.ProductId inner Join Inv_ProductBrandMaster on Inv_ProductBrandMaster.Brand_Id=Inv_Product_Brand.PBrandId where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_ProductBrandMaster.Brand_Name asc end if(@Optype=10) begin Select Inv_StockDetail.ProductId,Inv_RackMaster.Rack_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name ,Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_RackDetail on inv_productmaster.ProductId=Inv_RackDetail.Product_Id inner Join Inv_RackMaster on Inv_RackMaster.Rack_ID=Inv_RackDetail.Rack_Id where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_RackMaster.Rack_Name asc end if(@Optype=11) begin Select Company_Id,Brand_Id,ProductCode from Inv_ProductMaster where ProductId=@ProductId end if(@optype=12) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(Pm.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 1 then Pm.SalesPrice1 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 2 then Pm.SalesPrice2 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 3 then Pm.SalesPrice3 else '0' end as ProductSalesPrice, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=Pm.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=Pm.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='True' and pm.Field1=' ' and Pm.Field3='True' end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_ProductMaster_SelectRow] @Company_Id int, @Brand_Id int, @ProductId int, @ProductCode nvarchar(250), @Optype int , @Location_Id int As Begin SET NOCOUNT ON; if(@Optype=1) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,10) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.DimDepth,pm.HScode,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate,pm.IsActive , (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id end if(@Optype=2) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,120) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 1 then Pm.SalesPrice1 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 2 then Pm.SalesPrice2 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 3 then Pm.SalesPrice3 else '0' end as ProductSalesPrice, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.CreatedBy)=0 then 'Superadmin' else substring((select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.CreatedBy)),0,17) end as CreatedEmpName, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Pm.modifiedBy)=0 then 'Superadmin' else substring((select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=pm.modifiedBy)),0,17) end as ModifiedEmpName, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else cast((select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) as numeric(18,3) ) end as StockQty , (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName , (select Inv_ModelMaster.Model_No from Inv_ModelMaster where Inv_ModelMaster.Trans_Id=Pm.ModelNo) as ModelNo From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='True' end if(@Optype=3) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,SUBSTRING(PM.EProductName,0,10) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.WeighUnitID,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.ProductId=@ProductId order by ProductId desc end if(@Optype=4) begin Select Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(PM.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and ProductCode=@ProductCode order by ProductId desc end if(@Optype=5) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(PM.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=PM.ProductId) end as StockQty , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=pm.Company_Id and Set_EmployeeMaster.Emp_Code=pm.CreatedBy) as CreatedEmpName, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=pm.Company_Id and Set_EmployeeMaster.Emp_Code=pm.ModifiedBy) as ModifiedEmpName From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='False' order by ProductId desc end if(@Optype=6) begin select ProductId,ProductCode,EProductName, (SUBSTRING(EProductName,0,10)) as ShortProductName , (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=inv_productmaster.UnitId) as UnitName, IsActive , case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=inv_productmaster.ProductId ) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=inv_productmaster.ProductId) end as StockQty from inv_productmaster order by EProductName asc end if(@Optype=7) begin Select Inv_StockDetail.ProductId, inv_productmaster.ProductCode,(SUBSTRING(inv_productmaster.EProductName,0,10)) as ShortProductName ,inv_productmaster.EProductName ,Inv_UnitMaster.Unit_Name , Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by inv_productmaster.EProductName asc end if(@Optype=8) begin Select Inv_StockDetail.ProductId,Inv_Product_CategoryMaster.Category_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name , Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_Product_Category on inv_productmaster.ProductId=Inv_Product_Category.ProductId inner Join Inv_Product_CategoryMaster on Inv_Product_CategoryMaster.Category_Id=Inv_Product_Category.CategoryId where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_Product_CategoryMaster.Category_Name asc end if(@Optype=9) begin Select Inv_StockDetail.ProductId,Inv_ProductBrandMaster.Brand_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name ,Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_Product_Brand on inv_productmaster.ProductId=Inv_Product_Brand.ProductId inner Join Inv_ProductBrandMaster on Inv_ProductBrandMaster.Brand_Id=Inv_Product_Brand.PBrandId where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_ProductBrandMaster.Brand_Name asc end if(@Optype=10) begin Select Inv_StockDetail.ProductId,Inv_RackMaster.Rack_Name, inv_productmaster.ProductCode,inv_productmaster.EProductName,Inv_UnitMaster.Unit_Name ,Inv_StockDetail.Field1 as UnitCost,Inv_StockDetail.Field2 as AverageCost,Inv_StockDetail.Quantity as SystemQuantity,0 as PhysicalQuantity From Inv_StockDetail inner Join inv_productmaster on Inv_StockDetail.ProductId=inv_productmaster.ProductId inner join Inv_UnitMaster on inv_productmaster.UnitId=Inv_UnitMaster.Unit_Id inner join Inv_RackDetail on inv_productmaster.ProductId=Inv_RackDetail.Product_Id inner Join Inv_RackMaster on Inv_RackMaster.Rack_ID=Inv_RackDetail.Rack_Id where Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id order by Inv_RackMaster.Rack_Name asc end if(@Optype=11) begin Select Company_Id,Brand_Id,ProductCode from Inv_ProductMaster where ProductId=@ProductId end if(@optype=12) begin SELECT ROW_NUMBER() OVER(ORDER BY pm.ProductId desc) AS RowNumber, Inv_Product_CompanyBrand.Company_Id as Company_Id, Inv_Product_CompanyBrand.BrandId as Brand_Id,Pm.ProductCode ,(SUBSTRING(Pm.EProductName,0,10)) as ShortProductName ,Pm.ProductId,pm.PartNo,pm.ModelNo,pm.ModelName,pm.EProductName,pm.LProductName,pm.CountryID,pm.UnitId,pm.ItemType,pm.HScode,pm.DimDepth,pm.HasBatchNo,pm.TypeOfBatchNo,pm.HasSerialNo,pm.ReorderQty,pm.CostPrice,pm.Description,pm.SalesPrice1,pm.SalesPrice2,Pm.SalesPrice3,pm.ProductColor,pm.WSalePrice,pm.ReservedQty,pm.DamageQty,pm.ExpiredQty,pm.ExpiredQty,pm.MinimumQty,pm.MaximumQty,pm.Profit,pm.Discount,pm.MaintainStock,pm.URL,pm.ActualWeight,pm.VMWeight,pm.DimLenth,pm.DimHieght,pm.DimLenth,pm.AlternateId1,pm.AlternateId2,pm.AlternateId3,pm.Field1,pm.Field2,pm.Field3,pm.Field4,pm.Field5,pm.Field6,pm.Field7,pm.CreatedBy,pm.CreatedDate,pm.ModifiedBy,pm.ModfiedDate, case when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 1 then Pm.SalesPrice1 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 2 then Pm.SalesPrice2 when (select ParameterValue from Inv_ParameterMaster where ParameterName='Sales Price' and Company_Id=@Company_Id And BrandId=@Brand_Id And Location_Id=@Location_Id)= 3 then Pm.SalesPrice3 else '0' end as ProductSalesPrice, case when PM.ItemType='S' then 'Stockable' when PM.ItemType='NS' then 'Non Stockable' when PM.ItemType='A' then 'Assemble' when PM.ItemType='K' then 'Kit' end as ItemTypeValue, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Pm.UnitId) as UnitName, case when (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=Pm.ProductId) IS null then 0 else (select inv_stockdetail.quantity from inv_stockdetail where inv_stockdetail.Company_Id=@Company_Id And inv_stockdetail.Brand_Id=@Brand_Id And inv_stockdetail.Location_Id=@Location_Id and inv_stockdetail.ProductId=Pm.ProductId) end as StockQty From Inv_ProductMaster as Pm left join Inv_Product_CompanyBrand on Pm.ProductId=Inv_Product_CompanyBrand.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and pm.IsActive='True' and pm.Field1=' ' and Pm.Field3='True' end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_ProductMaster_Insert] @Company_Id int, @Brand_Id int, @ProductCode nvarchar(250) = NULL, @PartNo nvarchar(50) = NULL, @ModelNo nvarchar(80) = NULL, @ModelName nvarchar(MAX), @EProductName nvarchar(MAX) = NULL, @LProductName nvarchar(MAX) = NULL, @CountryID int = NULL, @UnitId int = NULL, @ItemType nvarchar(2) = NULL, @HScode nvarchar(50) = NULL, @HasBatchNo bit = NULL, @TypeOfBatchNo nvarchar(MAX) = NULL, @HasSerialNo bit = NULL, @ReorderQty nvarchar(50) = NULL, @CostPrice nvarchar(50) = NULL, @Description text = NULL, @SalesPrice1 nvarchar(MAX) = NULL, @SalesPrice2 nvarchar(MAX) = NULL, @SalesPrice3 nvarchar(MAX) = NULL, @ProductColor nvarchar(50) = NULL, @WSalePrice nvarchar(MAX) = NULL, @ReservedQty nvarchar(50) = NULL, @DamageQty nvarchar(50) = NULL, @ExpiredQty nvarchar(50) = NULL, @MaximumQty nvarchar(50) = NULL, @MinimumQty nvarchar(50) = NULL, @Profit numeric(18,3) = NULL, @Discount nvarchar(50) = NULL, @MaintainStock nvarchar(MAX) = NULL, @URL nvarchar(MAX) = NULL, @VMWeight nvarchar(11) = NULL, @WeighUnitID nvarchar(3) = NULL, @DimLenth numeric(18,3) = NULL, @DimHieght numeric(18,3) = NULL, @DimDepth numeric(18,3) = NULL, @AlternateId1 nvarchar(25), @AlternateId2 nvarchar(25), @AlternateId3 nvarchar(25), @Field1 nvarchar(MAX) = NULL, @Field2 nvarchar(MAX) = NULL, @Field3 nvarchar(MAX) = NULL, @Field4 nvarchar(MAX) = NULL, @Field5 nvarchar(MAX) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @IsActive bit = NULL, @CreatedBy nvarchar(11) = NULL, @CreatedDate datetime = NULL, @ModifiedBy nvarchar(11) = NULL, @ModfiedDate datetime = NULL, @ReferenceID int output As Begin Insert Into Inv_ProductMaster ([Company_Id],[Brand_Id],[ProductCode],[PartNo],[ModelNo],[ModelName],[EProductName],[LProductName],[CountryID],[UnitId],[ItemType],[HScode],[HasBatchNo],[TypeOfBatchNo],[HasSerialNo],[ReorderQty],[CostPrice],[Description],[SalesPrice1],[SalesPrice2],[SalesPrice3],[ProductColor],[WSalePrice],[ReservedQty],[DamageQty],[ExpiredQty],[MaximumQty],[MinimumQty],[Profit],[Discount],[MaintainStock],[URL],[ActualWeight],[WeighUnitID],[DimLenth],[DimHieght],[DimDepth],[AlternateId1],[AlternateId2],[AlternateId3],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModfiedDate]) Values (@Company_Id,@Brand_Id,@ProductCode,@PartNo,@ModelNo,@ModelName,@EProductName,@LProductName,@CountryID,@UnitId,@ItemType,@HScode,@HasBatchNo,@TypeOfBatchNo,@HasSerialNo,@ReorderQty,@CostPrice,@Description,@SalesPrice1,@SalesPrice2,@SalesPrice3,@ProductColor,@WSalePrice,@ReservedQty,@DamageQty,@ExpiredQty,@MaximumQty,@MinimumQty,@Profit,@Discount,@MaintainStock,@URL,@VMWeight,@WeighUnitID,@DimLenth,@DimHieght,@DimDepth,@AlternateId1,@AlternateId2,@AlternateId3,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModfiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_ProductMaster_Insert] @Company_Id int, @Brand_Id int, @ProductCode nvarchar(250) = NULL, @PartNo nvarchar(50) = NULL, @ModelNo nvarchar(80) = NULL, @ModelName nvarchar(MAX), @EProductName nvarchar(MAX) = NULL, @LProductName nvarchar(MAX) = NULL, @CountryID int = NULL, @UnitId int = NULL, @ItemType nvarchar(2) = NULL, @HScode nvarchar(50) = NULL, @HasBatchNo bit = NULL, @TypeOfBatchNo nvarchar(MAX) = NULL, @HasSerialNo bit = NULL, @ReorderQty nvarchar(50) = NULL, @CostPrice nvarchar(50) = NULL, @Description text = NULL, @SalesPrice1 nvarchar(MAX) = NULL, @SalesPrice2 nvarchar(MAX) = NULL, @SalesPrice3 nvarchar(MAX) = NULL, @ProductColor nvarchar(50) = NULL, @WSalePrice nvarchar(MAX) = NULL, @ReservedQty nvarchar(50) = NULL, @DamageQty nvarchar(50) = NULL, @ExpiredQty nvarchar(50) = NULL, @MaximumQty nvarchar(50) = NULL, @MinimumQty nvarchar(50) = NULL, @Profit numeric(18,3) = NULL, @Discount nvarchar(50) = NULL, @MaintainStock nvarchar(MAX) = NULL, @URL nvarchar(MAX) = NULL, @VMWeight nvarchar(11) = NULL, @WeighUnitID nvarchar(3) = NULL, @DimLenth numeric(18,3) = NULL, @DimHieght numeric(18,3) = NULL, @DimDepth numeric(18,3) = NULL, @AlternateId1 nvarchar(25), @AlternateId2 nvarchar(25), @AlternateId3 nvarchar(25), @Field1 nvarchar(MAX) = NULL, @Field2 nvarchar(MAX) = NULL, @Field3 nvarchar(MAX) = NULL, @Field4 nvarchar(MAX) = NULL, @Field5 nvarchar(MAX) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @IsActive bit = NULL, @CreatedBy nvarchar(11) = NULL, @CreatedDate datetime = NULL, @ModifiedBy nvarchar(11) = NULL, @ModfiedDate datetime = NULL, @ReferenceID int output As Begin Insert Into Inv_ProductMaster ([Company_Id],[Brand_Id],[ProductCode],[PartNo],[ModelNo],[ModelName],[EProductName],[LProductName],[CountryID],[UnitId],[ItemType],[HScode],[HasBatchNo],[TypeOfBatchNo],[HasSerialNo],[ReorderQty],[CostPrice],[Description],[SalesPrice1],[SalesPrice2],[SalesPrice3],[ProductColor],[WSalePrice],[ReservedQty],[DamageQty],[ExpiredQty],[MaximumQty],[MinimumQty],[Profit],[Discount],[MaintainStock],[URL],[ActualWeight],[WeighUnitID],[DimLenth],[DimHieght],[DimDepth],[AlternateId1],[AlternateId2],[AlternateId3],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModfiedDate]) Values (@Company_Id,@Brand_Id,@ProductCode,@PartNo,@ModelNo,@ModelName,@EProductName,@LProductName,@CountryID,@UnitId,@ItemType,@HScode,@HasBatchNo,@TypeOfBatchNo,@HasSerialNo,@ReorderQty,@CostPrice,@Description,@SalesPrice1,@SalesPrice2,@SalesPrice3,@ProductColor,@WSalePrice,@ReservedQty,@DamageQty,@ExpiredQty,@MaximumQty,@MinimumQty,@Profit,@Discount,@MaintainStock,@URL,@VMWeight,@WeighUnitID,@DimLenth,@DimHieght,@DimDepth,@AlternateId1,@AlternateId2,@AlternateId3,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModfiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_Product_Suppliers_SelectRow] @Company_Id int, @Brand_Id int, @Product_Id int , @Supplier_Id int , @Optype Int As Begin if(@Optype=0) begin Select Inv_Product_Suppliers.[Company_Id], Inv_Product_Suppliers. [Brand_Id], Inv_Product_Suppliers. [Product_Id], Inv_Product_Suppliers.[Supplier_Id], Inv_Product_Suppliers.[ProductSupplierCode], Inv_Product_Suppliers. [Field1], Inv_Product_Suppliers.[Field2], Inv_Product_Suppliers.[Field3], Inv_Product_Suppliers.[Field4], Inv_Product_Suppliers. [Field5], Inv_Product_Suppliers.[Field6], Inv_Product_Suppliers.[Field7], Inv_Product_Suppliers.[IsActive], Inv_Product_Suppliers.[CreatedBy], Inv_Product_Suppliers. [CreatedDate], Inv_Product_Suppliers.[ModifiedBy], Inv_Product_Suppliers.[ModifiedDate] , Ems_ContactMaster.Name From Inv_Product_Suppliers inner join Ems_ContactMaster on Inv_Product_Suppliers.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_Product_Suppliers.Company_Id=@Company_Id and Inv_Product_Suppliers.Brand_Id=@Brand_Id and Inv_Product_Suppliers.Product_Id=@Product_Id end else If(@Optype=1) begin Select distinct Inv_Product_Suppliers. [Product_Id] From Inv_Product_Suppliers inner join Ems_ContactMaster on Inv_Product_Suppliers.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_Product_Suppliers.Company_Id=@Company_Id and Inv_Product_Suppliers.Brand_Id=@Brand_Id and Inv_Product_Suppliers.Supplier_Id=@Supplier_Id end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_Product_Suppliers_SelectRow] @Company_Id int, @Brand_Id int, @Product_Id int , @Supplier_Id int , @Optype Int As Begin if(@Optype=0) begin Select Inv_Product_Suppliers.[Company_Id], Inv_Product_Suppliers. [Brand_Id], Inv_Product_Suppliers. [Product_Id], Inv_Product_Suppliers.[Supplier_Id], Inv_Product_Suppliers.[ProductSupplierCode], Inv_Product_Suppliers. [Field1], Inv_Product_Suppliers.[Field2], Inv_Product_Suppliers.[Field3], Inv_Product_Suppliers.[Field4], Inv_Product_Suppliers. [Field5], Inv_Product_Suppliers.[Field6], Inv_Product_Suppliers.[Field7], Inv_Product_Suppliers.[IsActive], Inv_Product_Suppliers.[CreatedBy], Inv_Product_Suppliers. [CreatedDate], Inv_Product_Suppliers.[ModifiedBy], Inv_Product_Suppliers.[ModifiedDate] , Ems_ContactMaster.Name From Inv_Product_Suppliers inner join Ems_ContactMaster on Inv_Product_Suppliers.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_Product_Suppliers.Company_Id=@Company_Id and Inv_Product_Suppliers.Brand_Id=@Brand_Id and Inv_Product_Suppliers.Product_Id=@Product_Id end else If(@Optype=1) begin Select distinct Inv_Product_Suppliers. [Product_Id] From Inv_Product_Suppliers inner join Ems_ContactMaster on Inv_Product_Suppliers.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_Product_Suppliers.Company_Id=@Company_Id and Inv_Product_Suppliers.Brand_Id=@Brand_Id and Inv_Product_Suppliers.Supplier_Id=@Supplier_Id end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Ems_ContactMaster_SelectRowForGrid] @Trans_Id int, @Code nvarchar(255), @Name nvarchar(MAX), @Status nvarchar(50), @GroupId int, @condition nvarchar(Max), @Optype int As Begin if(@Optype=1) begin Declare @SqlCmd nvarchar(max) set @SqlCmd ='select Trans_Id,Code,Name as ContactName,Field1,Field2,Status,Field3,Company_Id,Field6 from Ems_ContactMaster where ' + @condition + ' Order By Name Asc' print(@SqlCmd) exec sp_executesql @SqlCmd end if(@Optype=2) begin Declare @SqlCmd1 nvarchar(max) set @SqlCmd1 ='SELECT Trans_Id,Code,Name as ContactName,Status ,Field1,Field2,Field3,Field6 FROM Ems_ContactMaster WHERE Company_id in (Select Trans_Id From Ems_ContactMaster where ' + @condition +' and Status=''Company'') or Trans_Id in (Select Trans_Id From Ems_ContactMaster where ' + @condition +' and Status=''Company'') Order By Name Asc' exec sp_executesql @SqlCmd1 end if(@Optype=3) begin Declare @SqlCmd2 nvarchar(max) set @SqlCmd2 ='select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Code,Ems_ContactMaster.Name as ContactName,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.Status,Ems_ContactMaster.Field3,Ems_ContactMaster.Company_Id,Ems_ContactMaster.Field6 , case when Ems_ContactMaster.Company_Id=0 then null else (select CM.Name from Ems_ContactMaster as CM where CM.Trans_Id=Ems_ContactMaster.Company_Id) end as Contact_Company_Name, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)) end as CreatedEmployee , case when Ems_ContactMaster.Field4<>'''' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else '''' end as CountryName , Ems_ContactMaster.Remarks , (select PC.Name from Ems_ContactMaster as PC where PC.Trans_Id=ISNULL(Ems_ContactMaster.ParentContactId,0)) as ParentContactName, ISNULL(Ems_ContactMaster.ParentContactId,0) as ParentContactId from Ems_ContactMaster left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id where ' + @condition + ' and Ems_ContactMaster.IsActive=''True'' Order By Ems_ContactMaster.Name Asc' exec sp_executesql @SqlCmd2 end if(@Optype=4) begin select CM.Trans_Id,CM.Code,CM.Name as ContactName,CM.Field1,CM.Field6,CM.Field2,CM.Status,CM.Field3,CM.Company_Id, CM.Remarks, case when CM.Company_Id=0 then ' ' else (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=CM.CreatedBy)=0 then CM.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=CM.CreatedBy)) end as CreatedEmployee , case when CM.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=CM.Field4) else ' ' end as CountryName , (select PC.Name from Ems_ContactMaster as PC where PC.Trans_Id=ISNULL(CM.ParentContactId,0)) as ParentContactName, ISNULL(CM.ParentContactId,0) as ParentContactId from Ems_ContactMaster as CM where CM.IsActive='True' Order By CM.Trans_Id desc end if(@Optype=5) begin Select Trans_Id,Name as ContactName,Field1 from Ems_ContactMaster where Status='Company' end if(@Optype=6) begin Select Trans_Id,Name as ContactName,Field1 from Ems_ContactMaster where ParentContactId=@condition and Ems_ContactMaster.IsActive='True' end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ems_ContactMaster_SelectRowForGrid] @Trans_Id int, @Code nvarchar(255), @Name nvarchar(MAX), @Status nvarchar(50), @GroupId int, @condition nvarchar(Max), @Optype int As Begin if(@Optype=1) begin Declare @SqlCmd nvarchar(max) set @SqlCmd ='select Trans_Id,Code,Name as ContactName,Field1,Field2,Status,Field3,Company_Id,Field6 from Ems_ContactMaster where ' + @condition + ' Order By Name Asc' print(@SqlCmd) exec sp_executesql @SqlCmd end if(@Optype=2) begin Declare @SqlCmd1 nvarchar(max) set @SqlCmd1 ='SELECT Trans_Id,Code,Name as ContactName,Status ,Field1,Field2,Field3,Field6 FROM Ems_ContactMaster WHERE Company_id in (Select Trans_Id From Ems_ContactMaster where ' + @condition +' and Status=''Company'') or Trans_Id in (Select Trans_Id From Ems_ContactMaster where ' + @condition +' and Status=''Company'') Order By Name Asc' exec sp_executesql @SqlCmd1 end if(@Optype=3) begin Declare @SqlCmd2 nvarchar(max) set @SqlCmd2 ='select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Code,Ems_ContactMaster.Name as ContactName,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.Status,Ems_ContactMaster.Field3,Ems_ContactMaster.Company_Id,Ems_ContactMaster.Field6 , case when Ems_ContactMaster.Company_Id=0 then null else (select CM.Name from Ems_ContactMaster as CM where CM.Trans_Id=Ems_ContactMaster.Company_Id) end as Contact_Company_Name, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)) end as CreatedEmployee , case when Ems_ContactMaster.Field4<>'''' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else '''' end as CountryName , Ems_ContactMaster.Remarks , (select PC.Name from Ems_ContactMaster as PC where PC.Trans_Id=ISNULL(Ems_ContactMaster.ParentContactId,0)) as ParentContactName, ISNULL(Ems_ContactMaster.ParentContactId,0) as ParentContactId from Ems_ContactMaster left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id where ' + @condition + ' and Ems_ContactMaster.IsActive=''True'' Order By Ems_ContactMaster.Name Asc' exec sp_executesql @SqlCmd2 end if(@Optype=4) begin select CM.Trans_Id,CM.Code,CM.Name as ContactName,CM.Field1,CM.Field6,CM.Field2,CM.Status,CM.Field3,CM.Company_Id, CM.Remarks, case when CM.Company_Id=0 then ' ' else (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=CM.CreatedBy)=0 then CM.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id=(select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=CM.CreatedBy)) end as CreatedEmployee , case when CM.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=CM.Field4) else ' ' end as CountryName , (select PC.Name from Ems_ContactMaster as PC where PC.Trans_Id=ISNULL(CM.ParentContactId,0)) as ParentContactName, ISNULL(CM.ParentContactId,0) as ParentContactId from Ems_ContactMaster as CM where CM.IsActive='True' Order By CM.Trans_Id desc end if(@Optype=5) begin Select Trans_Id,Name as ContactName,Field1 from Ems_ContactMaster where Status='Company' end if(@Optype=6) begin Select Trans_Id,Name as ContactName,Field1 from Ems_ContactMaster where ParentContactId=@condition and Ems_ContactMaster.IsActive='True' end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Ems_ContactMaster_SelectRow] @Trans_Id int, @Name nvarchar(MAX), @Optype int As Begin if(@Optype=7) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id, (select Dep_Name from Set_DepartmentMaster where Dep_Id=CM.Dep_Id) as DepartmentName , (select Designation from Set_DesignationMaster where Designation_Id=CM.Designation_Id) as DesignationName , case when Ems_Contact_Group.Group_Id =1 then Ems_Contact_Group.Field1 end as Customercode, case when Ems_Contact_Group.Group_Id =2 then Ems_Contact_Group.Field1 end as suppliercode, case when CM.Company_Id<>0 then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , CM.Is_Reseller from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.status end if(@Optype=1) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id end if(@Optype=2) Begin Select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Dep_Id ,Ems_ContactMaster.Status,Ems_ContactMaster.Code,Ems_ContactMaster.Is_Reseller ,Ems_ContactMaster.Field3, Ems_ContactMaster.Name,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.company_id,Ems_ContactMaster.Field1 as EmailId,Ems_ContactMaster.Field2 as MobileNo, Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when Ems_ContactMaster.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else ' ' end as CountryName , Ems_ContactMaster.Field6 , (Ems_ContactMaster.Name+'/'+cast(Ems_ContactMaster.Trans_Id as nvarchar)+'/'+Ems_ContactMaster.Field1+'/'+Ems_ContactMaster.Field2) as Filtertext from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' order by Ems_ContactMaster.Name asc end if(@Optype=3) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_ContactMaster.Trans_Id = @Trans_Id end if(@Optype=4) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Ems_ContactMaster.CreatedBy) end as CreatedUser, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.ModifiedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Ems_ContactMaster.ModifiedBy) end as ModifiedUser from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='False' end if(@Optype=5) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.Trans_Id=@Trans_Id and Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.Name Asc end if(@Optype=6) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Rtrim(LTRIM(Ems_ContactMaster.Name)) = @Name end if(@Optype=8) begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion,Ems_Contact_Group.Group_Id , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_Contact_Group.Group_Id=@Trans_Id end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ems_ContactMaster_SelectRow] @Trans_Id int, @Name nvarchar(MAX), @Optype int As Begin if(@Optype=7) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id, (select Dep_Name from Set_DepartmentMaster where Dep_Id=CM.Dep_Id) as DepartmentName , (select Designation from Set_DesignationMaster where Designation_Id=CM.Designation_Id) as DesignationName , case when Ems_Contact_Group.Group_Id =1 then Ems_Contact_Group.Field1 end as Customercode, case when Ems_Contact_Group.Group_Id =2 then Ems_Contact_Group.Field1 end as suppliercode, case when CM.Company_Id<>0 then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , CM.Is_Reseller from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.status end if(@Optype=1) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id end if(@Optype=2) Begin Select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Dep_Id ,Ems_ContactMaster.Status,Ems_ContactMaster.Code,Ems_ContactMaster.Is_Reseller ,Ems_ContactMaster.Field3, Ems_ContactMaster.Name,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.company_id,Ems_ContactMaster.Field1 as EmailId,Ems_ContactMaster.Field2 as MobileNo, Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when Ems_ContactMaster.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else ' ' end as CountryName , Ems_ContactMaster.Field6 , (Ems_ContactMaster.Name+'/'+cast(Ems_ContactMaster.Trans_Id as nvarchar)+'/'+Ems_ContactMaster.Field1+'/'+Ems_ContactMaster.Field2) as Filtertext from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' order by Ems_ContactMaster.Name asc end if(@Optype=3) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_ContactMaster.Trans_Id = @Trans_Id end if(@Optype=4) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Ems_ContactMaster.CreatedBy) end as CreatedUser, case when (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.ModifiedBy)=0 then Ems_ContactMaster.CreatedBy else (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Code=Ems_ContactMaster.ModifiedBy) end as ModifiedUser from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='False' end if(@Optype=5) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.Trans_Id=@Trans_Id and Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.Name Asc end if(@Optype=6) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Rtrim(LTRIM(Ems_ContactMaster.Name)) = @Name end if(@Optype=8) begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion,Ems_Contact_Group.Group_Id , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_Contact_Group.Group_Id=@Trans_Id end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create PROCEDURE [dbo].[Sp_Arc_File_Transaction_SelectRow] @Company_Id int, @Trans_Id int, @Document_id int, @Optype int AS BEGIN if(@Optype=1) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType,Arc_Directory_Creation.Field3 as DirectoryType_TransId,Arc_Directory_Creation.Field4 as DirectoryType_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id End ELSE IF (@Optype=2) Begin SELECT ArcDir.CreatedDate,ArcDir.Directory_Name,ArcDir.Field1 as DirectoryType,ArcDir.Field3 as DirectoryType_TransId,ArcDir.Field4 as DirectoryType_Name, Arc_Document_Master.Document_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate, case when ArcDir.Field4=' ' then ArcDir.Field3 when ArcDir.Field4='Employee' then (select Emp_Name from Set_EmployeeMaster where Emp_Id=ArcDir.Field3) end as Directory_For FROM Arc_Directory_Creation as ArcDir INNER JOIN Arc_File_Transaction ON ArcDir.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' End ELSE IF (@Optype=3) Begin SELECT ArcDir.CreatedDate,ArcDir.Directory_Name,ArcDir.Field1 as DirectoryType,ArcDir.Field3 as DirectoryType_TransId,ArcDir.Field4 as DirectoryType_Name, Arc_Document_Master.Document_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate, case when ArcDir.Field4=' ' then ArcDir.Field3 when ArcDir.Field4='Employee' then (select Emp_Name from Set_EmployeeMaster where Emp_Id=ArcDir.Field3) when ArcDir.Field4='Contact' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Customer' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Supplier' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Product' then (select EProductName from Inv_ProductMaster where ProductId= ArcDir.Field3) end as Directory_For FROM Arc_Directory_Creation as ArcDir INNER JOIN Arc_File_Transaction ON ArcDir.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='False' End ELSE IF (@Optype=4) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Data, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' and Arc_File_Transaction.[Trans_Id]=@Trans_Id End ELSE IF (@Optype=5) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Data, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id left JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' and Arc_File_Transaction.Directory_Id=@Document_id END ELSE IF (@Optype=6) Begin select Arc_File_Transaction.* , (select Arc_Document_Master.Document_Name from Arc_Document_Master where Arc_Document_Master.Id=Arc_File_Transaction.Document_Master_Id) as DocumentName from Arc_File_Transaction where Company_Id=@Company_Id and Directory_Id=@Document_id and File_Type_Id=@Trans_Id END END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter PROCEDURE [dbo].[Sp_Arc_File_Transaction_SelectRow] @Company_Id int, @Trans_Id int, @Document_id int, @Optype int AS BEGIN if(@Optype=1) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType,Arc_Directory_Creation.Field3 as DirectoryType_TransId,Arc_Directory_Creation.Field4 as DirectoryType_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id End ELSE IF (@Optype=2) Begin SELECT ArcDir.CreatedDate,ArcDir.Directory_Name,ArcDir.Field1 as DirectoryType,ArcDir.Field3 as DirectoryType_TransId,ArcDir.Field4 as DirectoryType_Name, Arc_Document_Master.Document_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate, case when ArcDir.Field4=' ' then ArcDir.Field3 when ArcDir.Field4='Employee' then (select Emp_Name from Set_EmployeeMaster where Emp_Id=ArcDir.Field3) end as Directory_For FROM Arc_Directory_Creation as ArcDir INNER JOIN Arc_File_Transaction ON ArcDir.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' End ELSE IF (@Optype=3) Begin SELECT ArcDir.CreatedDate,ArcDir.Directory_Name,ArcDir.Field1 as DirectoryType,ArcDir.Field3 as DirectoryType_TransId,ArcDir.Field4 as DirectoryType_Name, Arc_Document_Master.Document_Name, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate, case when ArcDir.Field4=' ' then ArcDir.Field3 when ArcDir.Field4='Employee' then (select Emp_Name from Set_EmployeeMaster where Emp_Id=ArcDir.Field3) when ArcDir.Field4='Contact' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Customer' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Supplier' then (select Name from Ems_ContactMaster where Trans_Id=ArcDir.Field3) when ArcDir.Field4='Product' then (select EProductName from Inv_ProductMaster where ProductId= ArcDir.Field3) end as Directory_For FROM Arc_Directory_Creation as ArcDir INNER JOIN Arc_File_Transaction ON ArcDir.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='False' End ELSE IF (@Optype=4) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Data, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id INNER JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' and Arc_File_Transaction.[Trans_Id]=@Trans_Id End ELSE IF (@Optype=5) Begin SELECT Arc_Directory_Creation.Directory_Name, Arc_Document_Master.Document_Name,Arc_Directory_Creation.Field1 as DirectoryType, Arc_File_Transaction.File_Type_Id, Arc_File_Transaction.File_Expiry_Date, Arc_File_Transaction.Company_Id , Arc_File_Transaction.Trans_Id, Arc_File_Transaction.Directory_Id, Arc_File_Transaction.Document_Master_Id, Arc_File_Transaction.File_Name , Arc_File_Transaction.File_Upload_Date, Arc_File_Transaction.File_Data, Arc_File_Transaction.File_Path, Arc_File_Transaction.Field1, Arc_File_Transaction.Field2, Arc_File_Transaction.Field3, Arc_File_Transaction.Field4, Arc_File_Transaction.Field5, Arc_File_Transaction.Field6, Arc_File_Transaction.Field7, Arc_File_Transaction.IsActive, Arc_File_Transaction.CreatedBy, Arc_File_Transaction.CreatedDate, Arc_File_Transaction.ModifiedBy, Arc_File_Transaction.ModifiedDate FROM Arc_Directory_Creation INNER JOIN Arc_File_Transaction ON Arc_Directory_Creation.Id = Arc_File_Transaction.Directory_Id left JOIN Arc_Document_Master ON Arc_File_Transaction.Document_Master_Id = Arc_Document_Master.Id Where Arc_File_Transaction.Company_Id = @Company_Id and Arc_File_Transaction.IsActive='True' and Arc_File_Transaction.Directory_Id=@Document_id END ELSE IF (@Optype=6) Begin select Arc_File_Transaction.* , (select Arc_Document_Master.Document_Name from Arc_Document_Master where Arc_Document_Master.Id=Arc_File_Transaction.Document_Master_Id) as DocumentName from Arc_File_Transaction where Company_Id=@Company_Id and Directory_Id=@Document_id and File_Type_Id=@Trans_Id END END";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Sys_CountryMaster_SelectRow] @Country_Id int, @Country_Name nvarchar(255) , @Optype int As Begin if(@Optype=1) Begin Select *, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.ModifiedBy)) as Modified_User From Sys_CountryMaster where IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=2) Begin Select * From Sys_CountryMaster Where Country_Id = @Country_Id and IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=3) Begin Select *, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.ModifiedBy)) as Modified_User From Sys_CountryMaster Where IsActive='false' order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select * From Sys_CountryMaster Where IsActive='True' and Country_Name=@Country_Name order by CreatedDate desc End ELSE IF (@Optype=5) Begin select ('+'+Sys_CountryMaster.Country_Code+' ('+Sys_CurrencyMaster.Currency_Code+')') as CountryCodeName,('+'+Sys_CountryMaster.Country_Code) as CountryCodeValue from Sys_CountryMaster inner join Sys_Country_Currency on Sys_Country_Currency.Country_Id=Sys_CountryMaster.Country_Id inner join Sys_CurrencyMaster on Sys_Country_Currency.Currency_Id=Sys_CurrencyMaster.Currency_ID where Sys_CurrencyMaster.IsActive='True' and Sys_CountryMaster.IsActive='True' order by sys_countrymaster.CreatedDate desc End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Sys_CountryMaster_SelectRow] @Country_Id int, @Country_Name nvarchar(255) , @Optype int As Begin if(@Optype=1) Begin Select *, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.ModifiedBy)) as Modified_User From Sys_CountryMaster where IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=2) Begin Select * From Sys_CountryMaster Where Country_Id = @Country_Id and IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=3) Begin Select *, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Sys_CountryMaster.ModifiedBy)) as Modified_User From Sys_CountryMaster Where IsActive='false' order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select * From Sys_CountryMaster Where IsActive='True' and Country_Name=@Country_Name order by CreatedDate desc End ELSE IF (@Optype=5) Begin select ('+'+Sys_CountryMaster.Country_Code+' ('+Sys_CurrencyMaster.Currency_Code+')') as CountryCodeName,('+'+Sys_CountryMaster.Country_Code) as CountryCodeValue from Sys_CountryMaster inner join Sys_Country_Currency on Sys_Country_Currency.Country_Id=Sys_CountryMaster.Country_Id inner join Sys_CurrencyMaster on Sys_Country_Currency.Currency_Id=Sys_CurrencyMaster.Currency_ID where Sys_CurrencyMaster.IsActive='True' and Sys_CountryMaster.IsActive='True' order by sys_countrymaster.CreatedDate desc End End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Set_UserPermission_SelectRow] @Company_Id int, @User_Id varchar(11), @Optype int As Begin if(@Optype=1) Begin Select * From Set_UserPermission End ELSE IF (@Optype=2) Begin Select * From Set_UserPermission Where IsActive='True' End ELSE IF (@Optype=3) Begin Select * From Set_UserPermission Where IsActive='false' End ELSE IF (@Optype=4) Begin SELECT Set_UserPermission.TransId, Set_UserPermission.User_Id, Set_UserPermission.Module_Id, Set_UserPermission.Object_Id, Set_UserPermission.IsActive, Set_UserPermission.CreatedBy, Set_UserPermission.CreatedDate, Set_UserPermission.ModifiedBy, Set_UserPermission.ModifiedDate, Set_UserOpPermission.* ,Set_UserPermission.Field1 as Role_Id FROM Set_UserPermission left outer join Set_UserOpPermission ON Set_UserPermission.TransId = Set_UserOpPermission.User_Record_Id where Set_UserPermission.User_Id = @User_Id and Set_UserPermission.Company_Id=@Company_Id and Set_UserPermission.IsActive='True' End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Set_UserPermission_SelectRow] @Company_Id int, @User_Id varchar(11), @Optype int As Begin if(@Optype=1) Begin Select * From Set_UserPermission End ELSE IF (@Optype=2) Begin Select * From Set_UserPermission Where IsActive='True' End ELSE IF (@Optype=3) Begin Select * From Set_UserPermission Where IsActive='false' End ELSE IF (@Optype=4) Begin SELECT Set_UserPermission.TransId, Set_UserPermission.User_Id, Set_UserPermission.Module_Id, Set_UserPermission.Object_Id, Set_UserPermission.IsActive, Set_UserPermission.CreatedBy, Set_UserPermission.CreatedDate, Set_UserPermission.ModifiedBy, Set_UserPermission.ModifiedDate, Set_UserOpPermission.* ,Set_UserPermission.Field1 as Role_Id FROM Set_UserPermission left outer join Set_UserOpPermission ON Set_UserPermission.TransId = Set_UserOpPermission.User_Record_Id where Set_UserPermission.User_Id = @User_Id and Set_UserPermission.Company_Id=@Company_Id and Set_UserPermission.IsActive='True' End End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Set_UserMaster_SelectRow] @User_Id nvarchar(11), @Password nvarchar(50), @Company_Id int, @Optype Int As Begin if(@Optype=1) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id and Password=@Password and IsActive='True' and Company_Id=@Company_Id end if(@Optype=2) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id end if(@Optype=3) begin Select Set_User.[User_Id], Set_User. [Company_Id], Set_User.[Emp_Id], Set_User. [Role_Id], (select Role_Name from Set_RoleMaster where Role_Id=Set_User.Role_Id) as Role_Name, Set_User.[Password], Set_User.[Is_Modified], Set_User.[Field1], Set_User.[Field2], Set_User.[Field3], Set_User.[Field4], Set_User.[Field5], Set_User.[Field6], Set_User.[Field7], Set_User.[IsActive], Set_User.[CreatedBy], Set_User.[CreatedDate], Set_User.[ModifiedBy], Set_User.[ModifiedDate] , (select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_User.Emp_Id) as Emp_Name From Set_UserMaster as Set_User where Set_User.IsActive='False' and Set_User.company_id=@Company_Id end if(@Optype=4) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, Set_EmployeeMaster_1.Emp_Name , Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' and Set_User.Company_Id=@Company_Id and Set_EmployeeMaster_1.Field2='False' order by Set_EmployeeMaster_1.Emp_Name end if(@Optype=5) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, (SELECT Emp_Name FROM Set_EmployeeMaster WHERE (Emp_Id = Set_User.Emp_Id)) AS Emp_Name, Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' and Set_User.Company_Id =@company_id and Set_EmployeeMaster_1.Field2='False' end if(@Optype=6) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id AND Company_Id = @Company_Id end if(@Optype=7) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster end if(@Optype=8) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, (SELECT Emp_Name FROM Set_EmployeeMaster WHERE (Emp_Id = Set_User.Emp_Id)) AS Emp_Name, Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' end if(@Optype=9) begin SELECT dbo.Set_UserMaster.*, dbo.Set_RoleMaster.Role_Name, dbo.Set_EmployeeMaster.Emp_Name as EmpName, dbo.Set_EmployeeMaster.Field2 AS EmployeeField2, dbo.Set_EmployeeMaster.IsActive AS EmployeeIsActive FROM dbo.Set_UserMaster left JOIN dbo.Set_RoleMaster ON dbo.Set_UserMaster.Role_Id = dbo.Set_RoleMaster.Role_Id INNER JOIN dbo.Set_EmployeeMaster ON dbo.Set_UserMaster.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id where Set_UserMaster.User_Id=@User_Id and Set_UserMaster.Password=@Password and Set_UserMaster.IsActive='True' and Set_UserMaster.Company_Id=@Company_Id and Set_EmployeeMaster.IsActive='True' and Set_EmployeeMaster.Field2='False' end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Set_UserMaster_SelectRow] @User_Id nvarchar(11), @Password nvarchar(50), @Company_Id int, @Optype Int As Begin if(@Optype=1) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id and Password=@Password and IsActive='True' and Company_Id=@Company_Id end if(@Optype=2) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id end if(@Optype=3) begin Select Set_User.[User_Id], Set_User. [Company_Id], Set_User.[Emp_Id], Set_User. [Role_Id], (select Role_Name from Set_RoleMaster where Role_Id=Set_User.Role_Id) as Role_Name, Set_User.[Password], Set_User.[Is_Modified], Set_User.[Field1], Set_User.[Field2], Set_User.[Field3], Set_User.[Field4], Set_User.[Field5], Set_User.[Field6], Set_User.[Field7], Set_User.[IsActive], Set_User.[CreatedBy], Set_User.[CreatedDate], Set_User.[ModifiedBy], Set_User.[ModifiedDate] , (select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_User.Emp_Id) as Emp_Name From Set_UserMaster as Set_User where Set_User.IsActive='False' and Set_User.company_id=@Company_Id end if(@Optype=4) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, Set_EmployeeMaster_1.Emp_Name , Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' and Set_User.Company_Id=@Company_Id and Set_EmployeeMaster_1.Field2='False' order by Set_EmployeeMaster_1.Emp_Name end if(@Optype=5) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, (SELECT Emp_Name FROM Set_EmployeeMaster WHERE (Emp_Id = Set_User.Emp_Id)) AS Emp_Name, Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' and Set_User.Company_Id =@company_id and Set_EmployeeMaster_1.Field2='False' end if(@Optype=6) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster where User_Id=@User_Id AND Company_Id = @Company_Id end if(@Optype=7) begin Select [User_Id], [Company_Id], [Emp_Id], [Role_Id],(select Emp_Name from Set_EmployeeMaster where Emp_Id=Set_UserMaster.Emp_Id)as EmpName, (select Role_Name from Set_RoleMaster where Role_Id=Set_UserMaster.Role_Id) as Role_Name, [Password], [Is_Modified], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] From Set_UserMaster end if(@Optype=8) begin SELECT Set_User.User_Id, Set_User.Company_Id, Set_User.Emp_Id, Set_User.Role_Id, (SELECT Role_Name FROM Set_RoleMaster WHERE (Role_Id = Set_User.Role_Id)) AS Role_Name, Set_User.Password, Set_User.Is_Modified, Set_User.Field1, Set_User.Field2, Set_User.Field3, Set_User.Field4, Set_User.Field5, Set_User.Field6, Set_User.Field7, Set_User.IsActive, Set_User.CreatedBy, Set_User.CreatedDate, Set_User.ModifiedBy, Set_User.ModifiedDate, (SELECT Emp_Name FROM Set_EmployeeMaster WHERE (Emp_Id = Set_User.Emp_Id)) AS Emp_Name, Set_EmployeeMaster_1.Brand_Id, Set_EmployeeMaster_1.Location_Id FROM Set_UserMaster AS Set_User INNER JOIN Set_EmployeeMaster AS Set_EmployeeMaster_1 ON Set_User.Emp_Id = Set_EmployeeMaster_1.Emp_Id where Set_User.IsActive='True' end if(@Optype=9) begin SELECT dbo.Set_UserMaster.*, dbo.Set_RoleMaster.Role_Name, dbo.Set_EmployeeMaster.Emp_Name as EmpName, dbo.Set_EmployeeMaster.Field2 AS EmployeeField2, dbo.Set_EmployeeMaster.IsActive AS EmployeeIsActive FROM dbo.Set_UserMaster left JOIN dbo.Set_RoleMaster ON dbo.Set_UserMaster.Role_Id = dbo.Set_RoleMaster.Role_Id INNER JOIN dbo.Set_EmployeeMaster ON dbo.Set_UserMaster.Emp_Id = dbo.Set_EmployeeMaster.Emp_Id where Set_UserMaster.User_Id=@User_Id and Set_UserMaster.Password=@Password and Set_UserMaster.IsActive='True' and Set_UserMaster.Company_Id=@Company_Id and Set_EmployeeMaster.IsActive='True' and Set_EmployeeMaster.Field2='False' end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Set_EmployeeMaster_SelectRow] @Company_Id int, @Emp_Id nvarchar(max), @Emp_Name nvarchar(MAX), @Optype int As Begin if(@Optype=1) Begin Select Set_EmployeeMaster.* ,(select Account_No from Set_Bank_Info where Ref_Id=Set_EmployeeMaster.Emp_Id and Ref_Type='Employee') as Account_No From Set_EmployeeMaster Where [Company_Id] = @Company_Id End ELSE IF (@Optype=2) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=3) Begin Select * , (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation From Set_EmployeeMaster Where [Company_Id] = @Company_Id AND Field2 = 'True' End ELSE IF (@Optype=4) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, (select Account_No from Set_Bank_Info where Set_Bank_Info.Ref_Id=Set_EmployeeMaster.Emp_Id) as Account_No FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (Emp_Id = @Emp_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=5) Begin Select * From Set_EmployeeMaster Where [Company_Id] = @Company_Id and IsActive='True' and Emp_Name=@Emp_Name AND Field2 = 'False' End ELSE IF (@Optype=6) Begin Select Set_EmployeeMaster.*,(select Account_No from Set_Bank_Info where Ref_Id=Emp_Id and Ref_Type='Employee') as Account_No From Set_EmployeeMaster Where [Company_Id] = @Company_Id and Emp_Code = @Emp_Id and IsActive='True' AND Field2 = 'False' End ELSE IF (@Optype=7) Begin SELECT Set_EmployeeMaster.Company_Id, Set_EmployeeMaster.Brand_Id, Set_EmployeeMaster.Location_Id, Set_EmployeeMaster.Emp_Id AS Expr1, Set_EmployeeMaster.Emp_Code, Set_EmployeeMaster.Civil_Id, Set_EmployeeMaster.Emp_Name, Set_EmployeeMaster.Emp_Name_L, Set_EmployeeMaster.Emp_Image, Set_EmployeeMaster.Department_Id, Set_EmployeeMaster.Designation_Id, Set_EmployeeMaster.Religion_Id, Set_EmployeeMaster.Nationality_Id, Set_EmployeeMaster.Qualification_Id, Set_EmployeeMaster.DOB, Set_EmployeeMaster.DOJ, Set_EmployeeMaster.Emp_Type, Set_EmployeeMaster.Termination_Date, Set_EmployeeMaster.Gender, Set_EmployeeMaster.Email_Id, Set_EmployeeMaster.Phone_No, Set_EmployeeMaster.Field1, Set_EmployeeMaster.Field2, Set_EmployeeMaster.Field3, Set_EmployeeMaster.Field4, Set_EmployeeMaster.Field5, Set_EmployeeMaster.Field6, Set_EmployeeMaster.Field7, Set_EmployeeMaster.IsActive, Set_EmployeeMaster.CreatedBy, Set_EmployeeMaster.CreatedDate, Set_EmployeeMaster.ModifiedBy, Set_EmployeeMaster.ModifiedDate, Set_EmployeeInformation.* FROM Set_EmployeeMaster LEFT OUTER JOIN Set_EmployeeInformation ON Set_EmployeeMaster.Emp_Id = Set_EmployeeInformation.Emp_Id WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND Field2 = 'False' and IsActive='True' end ELSE IF (@Optype=8) Begin SELECT Set_EmployeeMaster.Company_Id AS Expr1, Set_EmployeeMaster.Brand_Id, Set_EmployeeMaster.Location_Id, Set_EmployeeMaster.Emp_Id AS Expr2, Set_EmployeeMaster.Emp_Code, Set_EmployeeMaster.Civil_Id, Set_EmployeeMaster.Emp_Name, Set_EmployeeMaster.Emp_Name_L, Set_EmployeeMaster.Emp_Image, Set_EmployeeMaster.Department_Id, Set_EmployeeMaster.Emp_Id, (SELECT Designation FROM Set_DesignationMaster WHERE (Designation_Id = Set_EmployeeMaster.Designation_Id)) AS Designation, Set_EmployeeMaster.Designation_Id, Set_EmployeeMaster.Religion_Id, Set_EmployeeMaster.Nationality_Id, Set_EmployeeMaster.Qualification_Id, Set_EmployeeMaster.DOB, Set_EmployeeMaster.DOJ, Set_EmployeeMaster.Emp_Type, Set_EmployeeMaster.Termination_Date, Set_EmployeeMaster.Gender, Set_EmployeeMaster.Email_Id, Set_EmployeeMaster.Phone_No, Set_EmployeeMaster.Field1 AS Expr3, Set_EmployeeMaster.Field2 AS Expr4, Set_EmployeeMaster.Field3 AS Expr5, Set_EmployeeMaster.Field4 AS Expr6, Set_EmployeeMaster.Field5 AS Expr7, Set_EmployeeMaster.Field6 AS Expr8, Set_EmployeeMaster.Field7 AS Expr9, Set_EmployeeMaster.IsActive AS Expr10, Set_EmployeeMaster.CreatedBy AS Expr11, Set_EmployeeMaster.CreatedDate AS Expr12, Set_EmployeeMaster.ModifiedBy AS Expr13, Set_EmployeeMaster.ModifiedDate AS Expr14, Ser_ReportMaster.Trans_Id, Ser_ReportMaster.Emp_Id AS Expr15, Ser_ReportMaster.Schedule_Days, Ser_ReportMaster.Last_Schedule_Date, Ser_ReportMaster.Field1, Ser_ReportMaster.Field2, Ser_ReportMaster.Field3, Ser_ReportMaster.Field4, Ser_ReportMaster.Field5, Ser_ReportMaster.Field6, Ser_ReportMaster.Field7, Ser_ReportMaster.IsActive, Ser_ReportMaster.CreatedBy, Ser_ReportMaster.CreatedDate, Ser_ReportMaster.ModifiedBy, Ser_ReportMaster.ModifiedDate FROM Set_EmployeeMaster LEFT OUTER JOIN Ser_ReportMaster ON Set_EmployeeMaster.Emp_Id = Ser_ReportMaster.Emp_Id WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND (Set_EmployeeMaster.IsActive = 'True') AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=9) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (SELECT Designation FROM Set_DesignationMaster WHERE (Designation_Id = Set_EmployeeMaster.Designation_Id)) AS Designation, (SELECT Dep_Name FROM Set_DepartmentMaster WHERE (Dep_Id = Set_EmployeeMaster.Department_Id)) AS Department, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND (Set_EmployeeMaster.IsActive = 'True') AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=10) Begin Select distinct Emp_Name,Brand_Id,Location_Id,Emp_Id From Set_EmployeeMaster Where [Company_Id] = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=11) Begin Select Emp_Name,Brand_Id,Location_Id From Set_EmployeeMaster Where Brand_Id = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF(@Optype = 12) BEGIN Select Emp_Name,Brand_Id,Location_Id From Set_EmployeeMaster Where Location_Id = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' END ELSE IF(@Optype = 13) BEGIN select Set_EmployeeMaster.*, Temp.Emp_Id as Payroll_Emp_Id, Temp.Worked_Min_Salary, Temp.Normal_OT_Min_Salary, Temp.Week_Off_OT_Min_Salary, Temp.Holiday_OT_Min_Salary, Temp.Leave_Days_Salary, Temp.Week_Off_Salary, Temp.Holidays_Salary, Temp.Absent_Salary, Temp.Late_Min_Penalty, Temp.Early_Min_Penalty, Temp.Patial_Violation_Penalty, Temp.Employee_PF, Temp.Employee_ESIC, Temp.Year, Temp.Employee_Penalty,Temp.Employee_Claim,Temp.Emlployee_Loan,Temp.Total_Allowance,Temp.Total_Deduction,Temp.Previous_Month_Balance, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select DateName( month , DateAdd( month ,Temp.Month , 0 ) - 1 )) as MonthName from Set_EmployeeMaster left outer join Set_Employee_Parameter on Set_EmployeeMaster.Emp_Id=Set_Employee_Parameter.Emp_Id left outer join Pay_Employe_Month_Temp as Temp on Set_EmployeeMaster.Emp_Id=Temp.Emp_Id where Set_EmployeeMaster.Company_Id=@Company_Id and Set_Employee_Parameter.Company_Id=@Company_Id and Set_EmployeeMaster.IsActive='True' and Set_Employee_Parameter.Field6='True' and set_employeemaster.Emp_Type='On Role' AND Set_EmployeeMaster.Field2 = 'False' END ELSE IF (@Optype=14) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, (select Account_No from Set_Bank_Info where Set_Bank_Info.Ref_Id=Set_EmployeeMaster.Emp_Id) as Account_No FROM Set_EmployeeMaster WHERE (Emp_Id = @Emp_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=15) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate , (Emp_Name+'/('+(select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id)+')/'+Emp_Code ) as EmpDetailInfo FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (IsActive = 'True') AND Field2 = 'False' and Emp_Type='On Role' End ELSE IF (@Optype=16) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) End ELSE IF (@Optype=17) Begin Select *, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation From Set_EmployeeMaster Where [Company_Id] = @Company_Id AND Field2='True' End end ";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Set_EmployeeMaster_SelectRow] @Company_Id int, @Emp_Id nvarchar(max), @Emp_Name nvarchar(MAX), @Optype int As Begin if(@Optype=1) Begin Select Set_EmployeeMaster.* ,(select Account_No from Set_Bank_Info where Ref_Id=Set_EmployeeMaster.Emp_Id and Ref_Type='Employee') as Account_No From Set_EmployeeMaster Where [Company_Id] = @Company_Id End ELSE IF (@Optype=2) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=3) Begin Select * , (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation From Set_EmployeeMaster Where [Company_Id] = @Company_Id AND Field2 = 'True' End ELSE IF (@Optype=4) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, (select Account_No from Set_Bank_Info where Set_Bank_Info.Ref_Id=Set_EmployeeMaster.Emp_Id) as Account_No FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (Emp_Id = @Emp_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=5) Begin Select * From Set_EmployeeMaster Where [Company_Id] = @Company_Id and IsActive='True' and Emp_Name=@Emp_Name AND Field2 = 'False' End ELSE IF (@Optype=6) Begin Select Set_EmployeeMaster.*,(select Account_No from Set_Bank_Info where Ref_Id=Emp_Id and Ref_Type='Employee') as Account_No From Set_EmployeeMaster Where [Company_Id] = @Company_Id and Emp_Code = @Emp_Id and IsActive='True' AND Field2 = 'False' End ELSE IF (@Optype=7) Begin SELECT Set_EmployeeMaster.Company_Id, Set_EmployeeMaster.Brand_Id, Set_EmployeeMaster.Location_Id, Set_EmployeeMaster.Emp_Id AS Expr1, Set_EmployeeMaster.Emp_Code, Set_EmployeeMaster.Civil_Id, Set_EmployeeMaster.Emp_Name, Set_EmployeeMaster.Emp_Name_L, Set_EmployeeMaster.Emp_Image, Set_EmployeeMaster.Department_Id, Set_EmployeeMaster.Designation_Id, Set_EmployeeMaster.Religion_Id, Set_EmployeeMaster.Nationality_Id, Set_EmployeeMaster.Qualification_Id, Set_EmployeeMaster.DOB, Set_EmployeeMaster.DOJ, Set_EmployeeMaster.Emp_Type, Set_EmployeeMaster.Termination_Date, Set_EmployeeMaster.Gender, Set_EmployeeMaster.Email_Id, Set_EmployeeMaster.Phone_No, Set_EmployeeMaster.Field1, Set_EmployeeMaster.Field2, Set_EmployeeMaster.Field3, Set_EmployeeMaster.Field4, Set_EmployeeMaster.Field5, Set_EmployeeMaster.Field6, Set_EmployeeMaster.Field7, Set_EmployeeMaster.IsActive, Set_EmployeeMaster.CreatedBy, Set_EmployeeMaster.CreatedDate, Set_EmployeeMaster.ModifiedBy, Set_EmployeeMaster.ModifiedDate, Set_EmployeeInformation.* FROM Set_EmployeeMaster LEFT OUTER JOIN Set_EmployeeInformation ON Set_EmployeeMaster.Emp_Id = Set_EmployeeInformation.Emp_Id WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND Field2 = 'False' and IsActive='True' end ELSE IF (@Optype=8) Begin SELECT Set_EmployeeMaster.Company_Id AS Expr1, Set_EmployeeMaster.Brand_Id, Set_EmployeeMaster.Location_Id, Set_EmployeeMaster.Emp_Id AS Expr2, Set_EmployeeMaster.Emp_Code, Set_EmployeeMaster.Civil_Id, Set_EmployeeMaster.Emp_Name, Set_EmployeeMaster.Emp_Name_L, Set_EmployeeMaster.Emp_Image, Set_EmployeeMaster.Department_Id, Set_EmployeeMaster.Emp_Id, (SELECT Designation FROM Set_DesignationMaster WHERE (Designation_Id = Set_EmployeeMaster.Designation_Id)) AS Designation, Set_EmployeeMaster.Designation_Id, Set_EmployeeMaster.Religion_Id, Set_EmployeeMaster.Nationality_Id, Set_EmployeeMaster.Qualification_Id, Set_EmployeeMaster.DOB, Set_EmployeeMaster.DOJ, Set_EmployeeMaster.Emp_Type, Set_EmployeeMaster.Termination_Date, Set_EmployeeMaster.Gender, Set_EmployeeMaster.Email_Id, Set_EmployeeMaster.Phone_No, Set_EmployeeMaster.Field1 AS Expr3, Set_EmployeeMaster.Field2 AS Expr4, Set_EmployeeMaster.Field3 AS Expr5, Set_EmployeeMaster.Field4 AS Expr6, Set_EmployeeMaster.Field5 AS Expr7, Set_EmployeeMaster.Field6 AS Expr8, Set_EmployeeMaster.Field7 AS Expr9, Set_EmployeeMaster.IsActive AS Expr10, Set_EmployeeMaster.CreatedBy AS Expr11, Set_EmployeeMaster.CreatedDate AS Expr12, Set_EmployeeMaster.ModifiedBy AS Expr13, Set_EmployeeMaster.ModifiedDate AS Expr14, Ser_ReportMaster.Trans_Id, Ser_ReportMaster.Emp_Id AS Expr15, Ser_ReportMaster.Schedule_Days, Ser_ReportMaster.Last_Schedule_Date, Ser_ReportMaster.Field1, Ser_ReportMaster.Field2, Ser_ReportMaster.Field3, Ser_ReportMaster.Field4, Ser_ReportMaster.Field5, Ser_ReportMaster.Field6, Ser_ReportMaster.Field7, Ser_ReportMaster.IsActive, Ser_ReportMaster.CreatedBy, Ser_ReportMaster.CreatedDate, Ser_ReportMaster.ModifiedBy, Ser_ReportMaster.ModifiedDate FROM Set_EmployeeMaster LEFT OUTER JOIN Ser_ReportMaster ON Set_EmployeeMaster.Emp_Id = Ser_ReportMaster.Emp_Id WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND (Set_EmployeeMaster.IsActive = 'True') AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=9) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (SELECT Designation FROM Set_DesignationMaster WHERE (Designation_Id = Set_EmployeeMaster.Designation_Id)) AS Designation, (SELECT Dep_Name FROM Set_DepartmentMaster WHERE (Dep_Id = Set_EmployeeMaster.Department_Id)) AS Department, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Set_EmployeeMaster.Company_Id = @Company_Id) AND (Set_EmployeeMaster.IsActive = 'True') AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=10) Begin Select distinct Emp_Name,Brand_Id,Location_Id,Emp_Id From Set_EmployeeMaster Where [Company_Id] = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF (@Optype=11) Begin Select Emp_Name,Brand_Id,Location_Id From Set_EmployeeMaster Where Brand_Id = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' End ELSE IF(@Optype = 12) BEGIN Select Emp_Name,Brand_Id,Location_Id From Set_EmployeeMaster Where Location_Id = @Company_Id and IsActive='True' AND Set_EmployeeMaster.Field2 = 'False' END ELSE IF(@Optype = 13) BEGIN select Set_EmployeeMaster.*, Temp.Emp_Id as Payroll_Emp_Id, Temp.Worked_Min_Salary, Temp.Normal_OT_Min_Salary, Temp.Week_Off_OT_Min_Salary, Temp.Holiday_OT_Min_Salary, Temp.Leave_Days_Salary, Temp.Week_Off_Salary, Temp.Holidays_Salary, Temp.Absent_Salary, Temp.Late_Min_Penalty, Temp.Early_Min_Penalty, Temp.Patial_Violation_Penalty, Temp.Employee_PF, Temp.Employee_ESIC, Temp.Year, Temp.Employee_Penalty,Temp.Employee_Claim,Temp.Emlployee_Loan,Temp.Total_Allowance,Temp.Total_Deduction,Temp.Previous_Month_Balance, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select DateName( month , DateAdd( month ,Temp.Month , 0 ) - 1 )) as MonthName from Set_EmployeeMaster left outer join Set_Employee_Parameter on Set_EmployeeMaster.Emp_Id=Set_Employee_Parameter.Emp_Id left outer join Pay_Employe_Month_Temp as Temp on Set_EmployeeMaster.Emp_Id=Temp.Emp_Id where Set_EmployeeMaster.Company_Id=@Company_Id and Set_Employee_Parameter.Company_Id=@Company_Id and Set_EmployeeMaster.IsActive='True' and Set_Employee_Parameter.Field6='True' and set_employeemaster.Emp_Type='On Role' AND Set_EmployeeMaster.Field2 = 'False' END ELSE IF (@Optype=14) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, (select Account_No from Set_Bank_Info where Set_Bank_Info.Ref_Id=Set_EmployeeMaster.Emp_Id) as Account_No FROM Set_EmployeeMaster WHERE (Emp_Id = @Emp_Id) AND (IsActive = 'True') AND Field2 = 'False' End ELSE IF (@Optype=15) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate , (Emp_Name+'/('+(select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id)+')/'+Emp_Code ) as EmpDetailInfo FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) AND (IsActive = 'True') AND Field2 = 'False' and Emp_Type='On Role' End ELSE IF (@Optype=16) Begin SELECT Company_Id, Brand_Id, Location_Id, Emp_Id, Emp_Code, Civil_Id, Emp_Name, Emp_Name_L, Emp_Image, Department_Id, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation, (select Dep_Name from Set_DepartmentMaster where Dep_Id=Set_EmployeeMaster.Department_Id) as Department, (Select Basic_Salary from Set_Employee_Parameter where Set_Employee_Parameter.emp_id= Set_EmployeeMaster.Emp_Id) as BasicSalary , Designation_Id, Religion_Id, Nationality_Id, Qualification_Id, DOB, CONVERT (DATE,DOJ) AS DOJ, Emp_Type, Termination_Date, Gender, Email_Id, Phone_No, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, IsActive,MONTH(DOJ) AS JoiningMonth,YEAR(DOJ) AS JoiningYear, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate FROM Set_EmployeeMaster WHERE (Company_Id = @Company_Id) End ELSE IF (@Optype=17) Begin Select *, (select Designation from Set_DesignationMaster where Designation_Id=Set_EmployeeMaster.Designation_Id) as Designation From Set_EmployeeMaster Where [Company_Id] = @Company_Id AND Field2='True' End end ";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Set_DepartmentMaster_SelectRow] @Dep_Id int, @Dep_Name nvarchar(MAX), @Optype int As Begin if(@Optype=1) Begin Select * From Set_DepartmentMaster End ELSE IF (@Optype=2) Begin SELECT Set_DepartmentMaster.Dep_Id, Set_DepartmentMaster.Parent_Id, Set_DepartmentMaster.Dep_Code, Set_DepartmentMaster.Dep_Name, Set_DepartmentMaster.Dep_Name_L, Set_DepartmentMaster.Field1, Set_DepartmentMaster.Field2, Set_DepartmentMaster.Field3, Set_DepartmentMaster.Field4, Set_DepartmentMaster.Field5, Set_DepartmentMaster.Field6, Set_DepartmentMaster.Field7, Set_DepartmentMaster.IsActive, Set_DepartmentMaster.CreatedBy, Set_DepartmentMaster.CreatedDate, Set_DepartmentMaster.ModifiedBy, Set_DepartmentMaster.ModifiedDate, Set_DepartmentMaster_1.Dep_Name AS ParentDepartment, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.ModifiedBy)) as Modified_User FROM Set_DepartmentMaster LEFT OUTER JOIN Set_DepartmentMaster AS Set_DepartmentMaster_1 ON Set_DepartmentMaster.Parent_Id = Set_DepartmentMaster_1.Dep_Id WHERE (Set_DepartmentMaster.IsActive = 'True') order by CreatedDate desc End ELSE IF (@Optype=3) Begin SELECT Set_DepartmentMaster.Dep_Id, Set_DepartmentMaster.Parent_Id, Set_DepartmentMaster.Dep_Code, Set_DepartmentMaster.Dep_Name, Set_DepartmentMaster.Dep_Name_L, Set_DepartmentMaster.Field1, Set_DepartmentMaster.Field2, Set_DepartmentMaster.Field3, Set_DepartmentMaster.Field4, Set_DepartmentMaster.Field5, Set_DepartmentMaster.Field6, Set_DepartmentMaster.Field7, Set_DepartmentMaster.IsActive, Set_DepartmentMaster.CreatedBy, Set_DepartmentMaster.CreatedDate, Set_DepartmentMaster.ModifiedBy, Set_DepartmentMaster.ModifiedDate, Set_DepartmentMaster_1.Dep_Name AS ParentDepartment, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.ModifiedBy)) as Modified_User FROM Set_DepartmentMaster left Outer JOIN Set_DepartmentMaster AS Set_DepartmentMaster_1 ON Set_DepartmentMaster.Parent_Id = Set_DepartmentMaster_1.Dep_Id WHERE (Set_DepartmentMaster.IsActive = 'False') order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select * From Set_DepartmentMaster Where [Dep_Id] = @Dep_Id and IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=5) Begin Select * From Set_DepartmentMaster Where IsActive='True' and Dep_Name=@Dep_Name End ELSE IF (@Optype=6) Begin select Set_DepartmentMaster.Dep_Id,Set_DepartmentMaster.Dep_Name from Set_DepartmentMaster where Set_DepartmentMaster.Parent_Id=@Dep_Id order by Set_DepartmentMaster.Dep_Name End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Set_DepartmentMaster_SelectRow] @Dep_Id int, @Dep_Name nvarchar(MAX), @Optype int As Begin if(@Optype=1) Begin Select * From Set_DepartmentMaster End ELSE IF (@Optype=2) Begin SELECT Set_DepartmentMaster.Dep_Id, Set_DepartmentMaster.Parent_Id, Set_DepartmentMaster.Dep_Code, Set_DepartmentMaster.Dep_Name, Set_DepartmentMaster.Dep_Name_L, Set_DepartmentMaster.Field1, Set_DepartmentMaster.Field2, Set_DepartmentMaster.Field3, Set_DepartmentMaster.Field4, Set_DepartmentMaster.Field5, Set_DepartmentMaster.Field6, Set_DepartmentMaster.Field7, Set_DepartmentMaster.IsActive, Set_DepartmentMaster.CreatedBy, Set_DepartmentMaster.CreatedDate, Set_DepartmentMaster.ModifiedBy, Set_DepartmentMaster.ModifiedDate, Set_DepartmentMaster_1.Dep_Name AS ParentDepartment, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.ModifiedBy)) as Modified_User FROM Set_DepartmentMaster LEFT OUTER JOIN Set_DepartmentMaster AS Set_DepartmentMaster_1 ON Set_DepartmentMaster.Parent_Id = Set_DepartmentMaster_1.Dep_Id WHERE (Set_DepartmentMaster.IsActive = 'True') order by CreatedDate desc End ELSE IF (@Optype=3) Begin SELECT Set_DepartmentMaster.Dep_Id, Set_DepartmentMaster.Parent_Id, Set_DepartmentMaster.Dep_Code, Set_DepartmentMaster.Dep_Name, Set_DepartmentMaster.Dep_Name_L, Set_DepartmentMaster.Field1, Set_DepartmentMaster.Field2, Set_DepartmentMaster.Field3, Set_DepartmentMaster.Field4, Set_DepartmentMaster.Field5, Set_DepartmentMaster.Field6, Set_DepartmentMaster.Field7, Set_DepartmentMaster.IsActive, Set_DepartmentMaster.CreatedBy, Set_DepartmentMaster.CreatedDate, Set_DepartmentMaster.ModifiedBy, Set_DepartmentMaster.ModifiedDate, Set_DepartmentMaster_1.Dep_Name AS ParentDepartment, (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.CreatedBy)) as Created_User , (select set_employeemaster.Emp_Name from set_employeemaster where set_employeemaster.emp_id= (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Set_DepartmentMaster.ModifiedBy)) as Modified_User FROM Set_DepartmentMaster left Outer JOIN Set_DepartmentMaster AS Set_DepartmentMaster_1 ON Set_DepartmentMaster.Parent_Id = Set_DepartmentMaster_1.Dep_Id WHERE (Set_DepartmentMaster.IsActive = 'False') order by CreatedDate desc End ELSE IF (@Optype=4) Begin Select * From Set_DepartmentMaster Where [Dep_Id] = @Dep_Id and IsActive='True' order by CreatedDate desc End ELSE IF (@Optype=5) Begin Select * From Set_DepartmentMaster Where IsActive='True' and Dep_Name=@Dep_Name End ELSE IF (@Optype=6) Begin select Set_DepartmentMaster.Dep_Id,Set_DepartmentMaster.Dep_Name from Set_DepartmentMaster where Set_DepartmentMaster.Parent_Id=@Dep_Id order by Set_DepartmentMaster.Dep_Name End End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Set_DepartmentMaster_RowStatus] @Dep_Id int, @IsActive bit, @ModifiedBy nvarchar(11), @ModifiedDate datetime, @Optype Int, @ReferenceID int output As Begin if(@Optype=0) begin Update Set_DepartmentMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Dep_Id] = @Dep_Id end if(@Optype=1) begin Update Set_DepartmentMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Parent_Id] = @Dep_Id end select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Set_DepartmentMaster_RowStatus] @Dep_Id int, @IsActive bit, @ModifiedBy nvarchar(11), @ModifiedDate datetime, @Optype Int, @ReferenceID int output As Begin if(@Optype=0) begin Update Set_DepartmentMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Dep_Id] = @Dep_Id end if(@Optype=1) begin Update Set_DepartmentMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Parent_Id] = @Dep_Id end select @ReferenceID=@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_IT_ModuleMaster_SelectRow] @Module_Id int, @Module_Name nvarchar(255), @Optype int As Begin if(@Optype=1) Begin Select * From IT_ModuleMaster End ELSE IF (@Optype=2) Begin SELECT IT_ModuleMaster.Module_Id, IT_ModuleMaster.Module_Name, IT_ModuleMaster.Module_Name_L, IT_ModuleMaster.Sequence_No, IT_ModuleMaster.Module_Image, IT_ModuleMaster.Module_Banner, IT_ModuleMaster.DashBoard_Url, IT_ModuleMaster.IsActive, IT_ModuleMaster.CreatedBy, IT_ModuleMaster.CreatedDate, IT_ModuleMaster.ModifiedBy, IT_ModuleMaster.ModifiedDate,IT_ModuleMaster.DashBoardIconUrl,IT_ModuleMaster.Field1,IT_ModuleMaster.Field2,IT_ModuleMaster.Field3,IT_ModuleMaster.Field4,IT_ModuleMaster.Field5 ,IT_ModuleMaster.Field6,IT_ModuleMaster.Field7, (select Application_Name from IT_ApplicationMaster where Application_Id in (Select Param_Value From Sys_Parameter Where Param_Name = 'Application_Id')) as Application_Name , case when IT_ModuleMaster.Field1='0' then IT_ModuleMaster.Module_Id else IT_ModuleMaster.Field1 end as ParentModuleId, case when IT_ModuleMaster.Field1='0' then IT_ModuleMaster.Module_Name else (select IM.Module_Name from IT_ModuleMaster as IM where IM.Module_Id=IT_ModuleMaster.Field1) end as ParentModuleName FROM IT_ModuleMaster where IT_ModuleMaster.IsActive='True' End ELSE IF (@Optype=3) Begin Select * From IT_ModuleMaster where IsActive='false' End ELSE IF (@Optype=4) Begin Select * From IT_ModuleMaster where [Module_Id] = @Module_Id and IsActive='True' End ELSE IF (@Optype=5) Begin Select * From IT_ModuleMaster Where IsActive='True' and Module_Name=@Module_Name End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_IT_ModuleMaster_SelectRow] @Module_Id int, @Module_Name nvarchar(255), @Optype int As Begin if(@Optype=1) Begin Select * From IT_ModuleMaster End ELSE IF (@Optype=2) Begin SELECT IT_ModuleMaster.Module_Id, IT_ModuleMaster.Module_Name, IT_ModuleMaster.Module_Name_L, IT_ModuleMaster.Sequence_No, IT_ModuleMaster.Module_Image, IT_ModuleMaster.Module_Banner, IT_ModuleMaster.DashBoard_Url, IT_ModuleMaster.IsActive, IT_ModuleMaster.CreatedBy, IT_ModuleMaster.CreatedDate, IT_ModuleMaster.ModifiedBy, IT_ModuleMaster.ModifiedDate,IT_ModuleMaster.DashBoardIconUrl,IT_ModuleMaster.Field1,IT_ModuleMaster.Field2,IT_ModuleMaster.Field3,IT_ModuleMaster.Field4,IT_ModuleMaster.Field5 ,IT_ModuleMaster.Field6,IT_ModuleMaster.Field7, (select Application_Name from IT_ApplicationMaster where Application_Id in (Select Param_Value From Sys_Parameter Where Param_Name = 'Application_Id')) as Application_Name , case when IT_ModuleMaster.Field1='0' then IT_ModuleMaster.Module_Id else IT_ModuleMaster.Field1 end as ParentModuleId, case when IT_ModuleMaster.Field1='0' then IT_ModuleMaster.Module_Name else (select IM.Module_Name from IT_ModuleMaster as IM where IM.Module_Id=IT_ModuleMaster.Field1) end as ParentModuleName FROM IT_ModuleMaster where IT_ModuleMaster.IsActive='True' End ELSE IF (@Optype=3) Begin Select * From IT_ModuleMaster where IsActive='false' End ELSE IF (@Optype=4) Begin Select * From IT_ModuleMaster where [Module_Id] = @Module_Id and IsActive='True' End ELSE IF (@Optype=5) Begin Select * From IT_ModuleMaster Where IsActive='True' and Module_Name=@Module_Name End End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_StockDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @optype int As Begin if(@optype=5) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id end if(@optype=1) begin Select [Company_Id], [Brand_Id], [Location_Id], [ProductId], [OpeningBalance], [RackID], [Quantity], [Minimum_Qty], [Maximum_Qty], [ReserveQty], [DamageQty], [BlockedQty], [OrderQty], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal From Inv_StockDetail end if(@optype=2) begin SELECT Set_LocationMaster.Location_Name, Inv_StockDetail.* , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail INNER JOIN Set_LocationMaster ON Inv_StockDetail.Location_Id = Set_LocationMaster.Location_Id where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.ProductId=@ProductId end if(@optype=3) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id end if(@optype=4) begin Select Inv_Product_CompanyBrand.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, ( Case when Inv_StockDetail.ProductId<>'' then 0 else 1 end )as InStock,Inv_StockDetail.Quantity as SysQty , Inv_StockDetail.OpeningBalance as Quantity ,Inv_StockDetail.Location_Id,Inv_StockDetail.Field1 as UnitPrice, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , Inv_ProductMaster.UnitId , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , case when Inv_StockDetail.Quantity is null then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyVisibleStatus, case when Inv_StockDetail.Quantity is null then CAST ('False' as Bit) else CAST ('True' as Bit) end as lblQtyVisibleStatus , case when Inv_StockDetail.Quantity is null And Inv_ProductMaster.MaintainStock='NM' then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyEnableStatus, case when Inv_StockDetail.Quantity is not null then CAST ('False' as Bit) when Inv_StockDetail.Quantity is null and Inv_ProductMaster.MaintainStock='NM' then CAST ('False' as Bit) else CAST ('True' as Bit) end as lnkserialbtnVisibleStatus , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal from Inv_Product_CompanyBrand inner join Inv_ProductMaster on Inv_Product_CompanyBrand.ProductId=Inv_ProductMaster.ProductId and Inv_ProductMaster.IsActive='True' left Join Inv_StockDetail on Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_Product_CompanyBrand.ProductId=Inv_StockDetail.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and Inv_ProductMaster.ItemType='S' and Inv_ProductMaster.Field1=' ' and Inv_ProductMaster.Field3='True' end if(@optype=6) begin Select Inv_StockDetail.Field2,Inv_StockDetail.Quantity from Inv_StockDetail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@optype=7) begin Select Inv_StockDetail.ProductId from Inv_StockDetail where ProductId=@ProductId end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_StockDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @optype int As Begin if(@optype=5) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id end if(@optype=1) begin Select [Company_Id], [Brand_Id], [Location_Id], [ProductId], [OpeningBalance], [RackID], [Quantity], [Minimum_Qty], [Maximum_Qty], [ReserveQty], [DamageQty], [BlockedQty], [OrderQty], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal From Inv_StockDetail end if(@optype=2) begin SELECT Set_LocationMaster.Location_Name, Inv_StockDetail.* , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail INNER JOIN Set_LocationMaster ON Inv_StockDetail.Location_Id = Set_LocationMaster.Location_Id where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.ProductId=@ProductId end if(@optype=3) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id end if(@optype=4) begin Select Inv_Product_CompanyBrand.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, ( Case when Inv_StockDetail.ProductId<>'' then 0 else 1 end )as InStock,Inv_StockDetail.Quantity as SysQty , Inv_StockDetail.OpeningBalance as Quantity ,Inv_StockDetail.Location_Id,Inv_StockDetail.Field1 as UnitPrice, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , Inv_ProductMaster.UnitId , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , case when Inv_StockDetail.Quantity is null then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyVisibleStatus, case when Inv_StockDetail.Quantity is null then CAST ('False' as Bit) else CAST ('True' as Bit) end as lblQtyVisibleStatus , case when Inv_StockDetail.Quantity is null And Inv_ProductMaster.MaintainStock='NM' then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyEnableStatus, case when Inv_StockDetail.Quantity is not null then CAST ('False' as Bit) when Inv_StockDetail.Quantity is null and Inv_ProductMaster.MaintainStock='NM' then CAST ('False' as Bit) else CAST ('True' as Bit) end as lnkserialbtnVisibleStatus , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal from Inv_Product_CompanyBrand inner join Inv_ProductMaster on Inv_Product_CompanyBrand.ProductId=Inv_ProductMaster.ProductId and Inv_ProductMaster.IsActive='True' left Join Inv_StockDetail on Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_Product_CompanyBrand.ProductId=Inv_StockDetail.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and Inv_ProductMaster.ItemType='S' and Inv_ProductMaster.Field1=' ' and Inv_ProductMaster.Field3='True' end if(@optype=6) begin Select Inv_StockDetail.Field2,Inv_StockDetail.Quantity from Inv_StockDetail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@optype=7) begin Select Inv_StockDetail.ProductId from Inv_StockDetail where ProductId=@ProductId end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "alter Procedure [dbo].[sp_Inv_StockBatchMaster_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @SerialNo nvarchar(255), @TransType nvarchar(2), @TransTypeId int, @OpType int As Begin if (@OpType=0) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id end if(@OpType=1) begin select Inv_ProductMaster.ProductCode as ProductId,Inv_ProductMaster.EProductName as ProductName,Inv_UnitMaster.Unit_Name as Unit, case when Inv_StockBatchMaster.TransType='SI' THEN 'Sales Invoice' when Inv_StockBatchMaster.TransType='SR' THEN 'Sales Return' when Inv_StockBatchMaster.TransType='PR' THEN 'Purchase Return' when Inv_StockBatchMaster.TransType='TI' THEN 'Transfer IN' when Inv_StockBatchMaster.TransType='TO' THEN 'Transfer Out' when Inv_StockBatchMaster.TransType='PG' THEN 'Purchase Goods' when Inv_StockBatchMaster.TransType='SA' THEN 'Stock Adjustment' when Inv_StockBatchMaster.TransType='OP' THEN 'Opening Stock' when Inv_StockBatchMaster.TransType='FO' THEN 'Production Out' when Inv_StockBatchMaster.TransType='FI' THEN 'Production In' when Inv_StockBatchMaster.TransType='FR' THEN 'Production Return' when Inv_StockBatchMaster.TransType='DV' THEN 'Delivery Voucher' end as RefferenceType , Case When Inv_StockBatchMaster.TransType='SI' Then cast((Select Invoice_No From Inv_SalesInvoiceHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SR' Then Cast((Select Return_No From Inv_SalesReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='PR' Then Cast((Select PReturn_No From Inv_PurchaseReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TI' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TO' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SA' Then Cast((Select VoucherNo From Inv_AdjustHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='PG' THEN Cast((Select InvoiceNo From dbo.Inv_PurchaseInvoiceHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='FO' or Inv_StockBatchMaster.TransType='FI' or Inv_StockBatchMaster.TransType='FR' THEN Cast((Select Inv_Production_Process.Job_No From dbo.Inv_Production_Process where Inv_Production_Process.Id=Inv_StockBatchMaster. TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='DV' THEN Cast((Select Inv_SalesDeliveryVoucher_Header.Voucher_No From dbo.Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) end as RefferenceId , case when Inv_StockBatchMaster.InOut='o' THEN 'Out' ELSE 'In' end as Status, Inv_StockBatchMaster.Quantity , REPLACE(CONVERT(CHAR(11), Inv_StockBatchMaster.CreatedDate, 106), ' ', '-') as CreatedDate, Inv_StockBatchMaster.SerialNo from Inv_StockBatchMaster inner join Inv_ProductMaster on Inv_StockBatchMaster.ProductId=Inv_ProductMaster.ProductId inner join Inv_UnitMaster on Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId and Inv_StockBatchMaster.Company_Id=@Company_Id and Inv_StockBatchMaster.Brand_Id=@Brand_Id and Inv_StockBatchMaster.Location_Id=@Location_Id end if(@OpType=2) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , CONVERT(VARCHAR(11),Inv_StockBatchMaster.CreatedDate,106) as VoucherDate, (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName , case when Inv_StockBatchMaster.TransType='SI' THEN 'Sales Invoice' when Inv_StockBatchMaster.TransType='SR' THEN 'Sales Return' when Inv_StockBatchMaster.TransType='PR' THEN 'Purchase Return' when Inv_StockBatchMaster.TransType='TI' THEN 'Transfer IN' when Inv_StockBatchMaster.TransType='TO' THEN 'Transfer Out' when Inv_StockBatchMaster.TransType='PG' THEN 'Purchase Goods' when Inv_StockBatchMaster.TransType='SA' THEN 'Stock Adjustment' when Inv_StockBatchMaster.TransType='OP' THEN 'Opening Stock' when Inv_StockBatchMaster.TransType='FO' THEN 'Production Out' when Inv_StockBatchMaster.TransType='FI' THEN 'Production In' when Inv_StockBatchMaster.TransType='FR' THEN 'Production Return' when Inv_StockBatchMaster.TransType='DV' THEN 'Delivery Voucher' end as RefferenceType , Case When Inv_StockBatchMaster.TransType='SI' Then cast((Select Invoice_No From Inv_SalesInvoiceHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SR' Then Cast((Select Return_No From Inv_SalesReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='PR' Then Cast((Select PReturn_No From Inv_PurchaseReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TI' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TO' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SA' Then Cast((Select VoucherNo From Inv_AdjustHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='PG' THEN Cast((Select InvoiceNo From dbo.Inv_PurchaseInvoiceHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='FO' or Inv_StockBatchMaster.TransType='FI' or Inv_StockBatchMaster.TransType='FR' THEN Cast((Select Inv_Production_Process.Job_No From dbo.Inv_Production_Process where Inv_Production_Process.Id=Inv_StockBatchMaster. TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='DV' THEN Cast((Select Inv_SalesDeliveryVoucher_Header.Voucher_No From dbo.Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) end as RefferenceId , case when Inv_StockBatchMaster.InOut='o' THEN 'Out' ELSE 'In' end as Status, case when Inv_StockBatchMaster.InOut='I' THEN inv_stockbatchmaster.Quantity else 0 end as InQty, case when Inv_StockBatchMaster.InOut='O' THEN inv_stockbatchmaster.Quantity else 0 end as OutQty, ((select ISNULL( SUM( isnull(sb.Quantity,0)),0) from Inv_StockBatchMaster as SB where sb.Company_Id=Inv_StockBatchMaster.Company_Id and sb.Brand_Id=Inv_StockBatchMaster.Brand_Id and sb.Location_Id=Inv_StockBatchMaster.Location_Id and sb.ProductId=Inv_StockBatchMaster.ProductId and sb.InOut='I' and SB.Trans_Id<= Inv_StockBatchMaster.Trans_Id)-(select ISNULL( SUM(isnull(sb.Quantity,0)),0) from Inv_StockBatchMaster as SB where sb.Company_Id=Inv_StockBatchMaster.Company_Id and sb.Brand_Id=Inv_StockBatchMaster.Brand_Id and sb.Location_Id=Inv_StockBatchMaster.Location_Id and sb.ProductId=Inv_StockBatchMaster.ProductId and sb.InOut='O' and SB.Trans_Id<= Inv_StockBatchMaster.Trans_Id)) as BalanceQty, (select substring(Set_LocationMaster.Location_Name,0,15)+'..' from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockBatchMaster.Location_Id) as Location , case when(TransType='Dv') then (select Ems_ContactMaster.Name from Inv_SalesDeliveryVoucher_Header inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId ) when(TransType='SI' or TransType='SR') then (select Ems_ContactMaster.Name from Inv_SalesInvoiceHeader inner join Ems_ContactMaster on Inv_SalesInvoiceHeader.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_SalesInvoiceHeader.Trans_Id=Inv_StockBatchMaster.TransTypeId ) when(TransType='PG') then (select Ems_ContactMaster.Name from Inv_PurchaseInvoiceHeader inner join Ems_ContactMaster on Inv_PurchaseInvoiceHeader.SupplierId=Ems_ContactMaster.Trans_Id where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) when(TransType='FI' or TransType='FO') then (select Ems_ContactMaster.Name from Inv_Production_Process inner join Inv_ProductionRequestHeader on Inv_Production_Process.Ref_Production_Req_No=Inv_ProductionRequestHeader.Trans_Id inner join Ems_ContactMaster on Inv_ProductionRequestHeader.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_Production_Process.Id=Inv_StockBatchMaster.TransTypeId ) end as ContactName, case when(TransType='PG') then (select Inv_PurchaseInvoiceHeader.SupInvoiceNo from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) else '0' end as Supplier_Invoice_No , case when(TransType='PG') then (select CONVERT(VARCHAR(11),Inv_PurchaseInvoiceHeader.SupInvoiceDate,106) from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) else ' ' end as Supplier_Invoice_Date From Inv_StockBatchMaster where ProductId=@ProductId order by Inv_StockBatchMaster.Trans_Id end if(@OpType=3) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@OpType=4) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where ProductId=@ProductId and SerialNo=@SerialNo order by Trans_Id desc end if(@OpType=5) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and TransType=@TransType and TransTypeId=@TransTypeId end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_StockBatchMaster_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @SerialNo nvarchar(255), @TransType nvarchar(2), @TransTypeId int, @OpType int As Begin if (@OpType=0) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id end if(@OpType=1) begin select Inv_ProductMaster.ProductCode as ProductId,Inv_ProductMaster.EProductName as ProductName,Inv_UnitMaster.Unit_Name as Unit, case when Inv_StockBatchMaster.TransType='SI' THEN 'Sales Invoice' when Inv_StockBatchMaster.TransType='SR' THEN 'Sales Return' when Inv_StockBatchMaster.TransType='PR' THEN 'Purchase Return' when Inv_StockBatchMaster.TransType='TI' THEN 'Transfer IN' when Inv_StockBatchMaster.TransType='TO' THEN 'Transfer Out' when Inv_StockBatchMaster.TransType='PG' THEN 'Purchase Goods' when Inv_StockBatchMaster.TransType='SA' THEN 'Stock Adjustment' when Inv_StockBatchMaster.TransType='OP' THEN 'Opening Stock' when Inv_StockBatchMaster.TransType='FO' THEN 'Production Out' when Inv_StockBatchMaster.TransType='FI' THEN 'Production In' when Inv_StockBatchMaster.TransType='FR' THEN 'Production Return' when Inv_StockBatchMaster.TransType='DV' THEN 'Delivery Voucher' end as RefferenceType , Case When Inv_StockBatchMaster.TransType='SI' Then cast((Select Invoice_No From Inv_SalesInvoiceHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SR' Then Cast((Select Return_No From Inv_SalesReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='PR' Then Cast((Select PReturn_No From Inv_PurchaseReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TI' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TO' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SA' Then Cast((Select VoucherNo From Inv_AdjustHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='PG' THEN Cast((Select InvoiceNo From dbo.Inv_PurchaseInvoiceHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='FO' or Inv_StockBatchMaster.TransType='FI' or Inv_StockBatchMaster.TransType='FR' THEN Cast((Select Inv_Production_Process.Job_No From dbo.Inv_Production_Process where Inv_Production_Process.Id=Inv_StockBatchMaster. TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='DV' THEN Cast((Select Inv_SalesDeliveryVoucher_Header.Voucher_No From dbo.Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) end as RefferenceId , case when Inv_StockBatchMaster.InOut='o' THEN 'Out' ELSE 'In' end as Status, Inv_StockBatchMaster.Quantity , REPLACE(CONVERT(CHAR(11), Inv_StockBatchMaster.CreatedDate, 106), ' ', '-') as CreatedDate, Inv_StockBatchMaster.SerialNo from Inv_StockBatchMaster inner join Inv_ProductMaster on Inv_StockBatchMaster.ProductId=Inv_ProductMaster.ProductId inner join Inv_UnitMaster on Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId and Inv_StockBatchMaster.Company_Id=@Company_Id and Inv_StockBatchMaster.Brand_Id=@Brand_Id and Inv_StockBatchMaster.Location_Id=@Location_Id end if(@OpType=2) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , CONVERT(VARCHAR(11),Inv_StockBatchMaster.CreatedDate,106) as VoucherDate, (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName , case when Inv_StockBatchMaster.TransType='SI' THEN 'Sales Invoice' when Inv_StockBatchMaster.TransType='SR' THEN 'Sales Return' when Inv_StockBatchMaster.TransType='PR' THEN 'Purchase Return' when Inv_StockBatchMaster.TransType='TI' THEN 'Transfer IN' when Inv_StockBatchMaster.TransType='TO' THEN 'Transfer Out' when Inv_StockBatchMaster.TransType='PG' THEN 'Purchase Goods' when Inv_StockBatchMaster.TransType='SA' THEN 'Stock Adjustment' when Inv_StockBatchMaster.TransType='OP' THEN 'Opening Stock' when Inv_StockBatchMaster.TransType='FO' THEN 'Production Out' when Inv_StockBatchMaster.TransType='FI' THEN 'Production In' when Inv_StockBatchMaster.TransType='FR' THEN 'Production Return' when Inv_StockBatchMaster.TransType='DV' THEN 'Delivery Voucher' end as RefferenceType , Case When Inv_StockBatchMaster.TransType='SI' Then cast((Select Invoice_No From Inv_SalesInvoiceHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SR' Then Cast((Select Return_No From Inv_SalesReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='PR' Then Cast((Select PReturn_No From Inv_PurchaseReturnHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TI' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='TO' Then Cast((Select VoucherNo From Inv_TransferHeader where Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) When Inv_StockBatchMaster.TransType='SA' Then Cast((Select VoucherNo From Inv_AdjustHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='PG' THEN Cast((Select InvoiceNo From dbo.Inv_PurchaseInvoiceHeader where TransId=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='FO' or Inv_StockBatchMaster.TransType='FI' or Inv_StockBatchMaster.TransType='FR' THEN Cast((Select Inv_Production_Process.Job_No From dbo.Inv_Production_Process where Inv_Production_Process.Id=Inv_StockBatchMaster. TransTypeId)as Nvarchar(Max)) when Inv_StockBatchMaster.TransType='DV' THEN Cast((Select Inv_SalesDeliveryVoucher_Header.Voucher_No From dbo.Inv_SalesDeliveryVoucher_Header where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId)as Nvarchar(Max)) end as RefferenceId , case when Inv_StockBatchMaster.InOut='o' THEN 'Out' ELSE 'In' end as Status, case when Inv_StockBatchMaster.InOut='I' THEN inv_stockbatchmaster.Quantity else 0 end as InQty, case when Inv_StockBatchMaster.InOut='O' THEN inv_stockbatchmaster.Quantity else 0 end as OutQty, ((select ISNULL( SUM( isnull(sb.Quantity,0)),0) from Inv_StockBatchMaster as SB where sb.Company_Id=Inv_StockBatchMaster.Company_Id and sb.Brand_Id=Inv_StockBatchMaster.Brand_Id and sb.Location_Id=Inv_StockBatchMaster.Location_Id and sb.ProductId=Inv_StockBatchMaster.ProductId and sb.InOut='I' and SB.Trans_Id<= Inv_StockBatchMaster.Trans_Id)-(select ISNULL( SUM(isnull(sb.Quantity,0)),0) from Inv_StockBatchMaster as SB where sb.Company_Id=Inv_StockBatchMaster.Company_Id and sb.Brand_Id=Inv_StockBatchMaster.Brand_Id and sb.Location_Id=Inv_StockBatchMaster.Location_Id and sb.ProductId=Inv_StockBatchMaster.ProductId and sb.InOut='O' and SB.Trans_Id<= Inv_StockBatchMaster.Trans_Id)) as BalanceQty, (select substring(Set_LocationMaster.Location_Name,0,15)+'..' from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockBatchMaster.Location_Id) as Location , case when(TransType='Dv') then (select Ems_ContactMaster.Name from Inv_SalesDeliveryVoucher_Header inner join Ems_ContactMaster on Inv_SalesDeliveryVoucher_Header.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_SalesDeliveryVoucher_Header.Trans_Id=Inv_StockBatchMaster.TransTypeId ) when(TransType='SI' or TransType='SR') then (select Ems_ContactMaster.Name from Inv_SalesInvoiceHeader inner join Ems_ContactMaster on Inv_SalesInvoiceHeader.Supplier_Id=Ems_ContactMaster.Trans_Id where Inv_SalesInvoiceHeader.Trans_Id=Inv_StockBatchMaster.TransTypeId ) when(TransType='PG') then (select Ems_ContactMaster.Name from Inv_PurchaseInvoiceHeader inner join Ems_ContactMaster on Inv_PurchaseInvoiceHeader.SupplierId=Ems_ContactMaster.Trans_Id where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) when(TransType='FI' or TransType='FO') then (select Ems_ContactMaster.Name from Inv_Production_Process inner join Inv_ProductionRequestHeader on Inv_Production_Process.Ref_Production_Req_No=Inv_ProductionRequestHeader.Trans_Id inner join Ems_ContactMaster on Inv_ProductionRequestHeader.Customer_Id=Ems_ContactMaster.Trans_Id where Inv_Production_Process.Id=Inv_StockBatchMaster.TransTypeId ) end as ContactName, case when(TransType='PG') then (select Inv_PurchaseInvoiceHeader.SupInvoiceNo from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) else '0' end as Supplier_Invoice_No , case when(TransType='PG') then (select CONVERT(VARCHAR(11),Inv_PurchaseInvoiceHeader.SupInvoiceDate,106) from Inv_PurchaseInvoiceHeader where Inv_PurchaseInvoiceHeader.TransId=Inv_StockBatchMaster.TransTypeId ) else ' ' end as Supplier_Invoice_Date From Inv_StockBatchMaster where ProductId=@ProductId order by Inv_StockBatchMaster.Trans_Id end if(@OpType=3) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@OpType=4) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where ProductId=@ProductId and SerialNo=@SerialNo order by Trans_Id desc end if(@OpType=5) begin Select [Company_Id], [Brand_Id], [Location_Id], [Trans_Id], [TransType], [TransTypeId], [ProductId], [UnitId], [InOut], CAST( Quantity as nvarchar(max)) as Quantity , [LotNo], [BatchNo], [ExpiryDate], [SerialNo], [ManufacturerDate], [Barcode], [Width], [Length], [Pallet_ID], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (select Inv_ProductMaster.ProductCode from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductCode, (select Inv_ProductMaster.EProductName from Inv_ProductMaster where Inv_ProductMaster.ProductId=Inv_StockBatchMaster.ProductId) as ProductName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_StockBatchMaster.UnitId) as UnitName From Inv_StockBatchMaster where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and TransType=@TransType and TransTypeId=@TransTypeId end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_SalesReturnHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Optype int As Begin if(@Optype=1) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id end if(@Optype=2) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Ems_ContactMaster.Name as CustomerName ,Set_EmployeeMaster.Emp_Name as SalesPerson_Name ,case when SH.SIFromTransType='S' then 'By Sales Order' end as Transtype , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.ModifiedBy) as ModifiedUser FROM [dbo].[Inv_SalesReturnHeader] as SH inner join Ems_ContactMaster on SH.Customer_Id=Ems_ContactMaster.Trans_Id inner join Set_EmployeeMaster on SH.SalesPerson_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='True' end if(@Optype=3) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Ems_ContactMaster.Name as CustomerName ,Set_EmployeeMaster.Emp_Name as SalesPerson_Name ,case when SH.SIFromTransType='S' then 'By Sales Order' end as Transtype , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.ModifiedBy) as ModifiedUser FROM [dbo].[Inv_SalesReturnHeader] as SH inner join Ems_ContactMaster on SH.Customer_Id=Ems_ContactMaster.Trans_Id inner join Set_EmployeeMaster on SH.SalesPerson_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='False' end if(@Optype=4) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.Trans_Id=@Trans_Id end if(@Optype=5) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.Invoice_Id=@Trans_Id and SH.Post='False' and sh.IsActive='True' end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_SalesReturnHeader_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Optype int As Begin if(@Optype=1) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id end if(@Optype=2) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Ems_ContactMaster.Name as CustomerName ,Set_EmployeeMaster.Emp_Name as SalesPerson_Name ,case when SH.SIFromTransType='S' then 'By Sales Order' end as Transtype , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.ModifiedBy) as ModifiedUser FROM [dbo].[Inv_SalesReturnHeader] as SH inner join Ems_ContactMaster on SH.Customer_Id=Ems_ContactMaster.Trans_Id inner join Set_EmployeeMaster on SH.SalesPerson_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='True' end if(@Optype=3) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] ,Ems_ContactMaster.Name as CustomerName ,Set_EmployeeMaster.Emp_Name as SalesPerson_Name ,case when SH.SIFromTransType='S' then 'By Sales Order' end as Transtype , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.CreatedBy) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Company_Id=SH.company_id and Set_EmployeeMaster.Emp_Code=SH.ModifiedBy) as ModifiedUser FROM [dbo].[Inv_SalesReturnHeader] as SH inner join Ems_ContactMaster on SH.Customer_Id=Ems_ContactMaster.Trans_Id inner join Set_EmployeeMaster on SH.SalesPerson_Id=Set_EmployeeMaster.Emp_Id where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.IsActive='False' end if(@Optype=4) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.Trans_Id=@Trans_Id end if(@Optype=5) begin SELECT SH.[Company_Id] ,SH.[Brand_Id] ,SH.[Location_Id] ,SH.[Trans_Id] ,SH.[Invoice_Id] ,SH.[Return_No] ,SH.[Return_Date] ,SH.[Invoice_No] ,SH.[Invoice_Date] ,SH.[PaymentModeId] ,SH.[Currency_Id] ,SH.[SIFromTransType] ,SH.[SIFromTransNo] ,SH.[SalesPerson_Id] ,SH.[PosNo] ,SH.[Remark] ,SH.[Post] ,SH.[TotalQuantity] ,SH.[TotalAmount] ,SH.[NetTaxP] ,SH.[NetTaxV] ,SH.[NetDiscountP] ,SH.[NetDiscountV] ,SH.[GrandTotal] ,SH.[Customer_Id] ,SH.[Field1] ,SH.[Field2] ,SH.[Field3] ,SH.[Field4] ,SH.[Field5] ,SH.[Field6] ,SH.[Field7] ,SH.[IsActive] ,SH.[CreatedBy] ,SH.[CreatedDate] ,SH.[ModifiedBy] ,SH.[ModifiedDate] FROM [dbo].[Inv_SalesReturnHeader] as SH where SH.Company_Id=@Company_Id and SH.Brand_Id=@Brand_Id and SH.Location_Id=@Location_Id and SH.Invoice_Id=@Trans_Id and SH.Post='False' and sh.IsActive='True' end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Ac_SubChartOfAccount_Update] @FinancialYearId int, @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @AccTransId int, @Other_Account_No int, @LDr_Amount numeric(18,6), @LCr_Amount numeric(18,6), @FDr_Amount numeric(18,6), @FCr_Amount numeric(18,6), @FCurrency_Id int, @CompanyCurrDebit numeric(18,6), @CompanyCurrCredit numeric(18,6), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy varchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Update Ac_SubChartOfAccount SET [LDr_Amount]=@LDr_Amount ,[LCr_Amount]=@LCr_Amount ,[FDr_Amount]=@FDr_Amount ,[FCr_Amount]=@FCr_Amount ,[FCurrency_Id]=@FCurrency_Id ,[CompanyCurrDebit]=@CompanyCurrDebit ,[CompanyCurrCredit]=@CompanyCurrCredit ,[Field1] = @Field1 ,[Field2] = @Field2 ,[Field3] = @Field3 ,[Field4] = @Field4 ,[Field5] = @Field5 ,[Field6] = @Field6 ,[Field7] = @Field7 ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate Where [FinancialYearId]=@FinancialYearId and [Company_Id] = @Company_Id and [Brand_Id]=@Brand_Id and [Location_Id]=@Location_Id and [AccTransId] = @AccTransId and [Trans_Id]=@Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_SubChartOfAccount_Update] @FinancialYearId int, @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @AccTransId int, @Other_Account_No int, @LDr_Amount numeric(18,6), @LCr_Amount numeric(18,6), @FDr_Amount numeric(18,6), @FCr_Amount numeric(18,6), @FCurrency_Id int, @CompanyCurrDebit numeric(18,6), @CompanyCurrCredit numeric(18,6), @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy varchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Update Ac_SubChartOfAccount SET [LDr_Amount]=@LDr_Amount ,[LCr_Amount]=@LCr_Amount ,[FDr_Amount]=@FDr_Amount ,[FCr_Amount]=@FCr_Amount ,[FCurrency_Id]=@FCurrency_Id ,[CompanyCurrDebit]=@CompanyCurrDebit ,[CompanyCurrCredit]=@CompanyCurrCredit ,[Field1] = @Field1 ,[Field2] = @Field2 ,[Field3] = @Field3 ,[Field4] = @Field4 ,[Field5] = @Field5 ,[Field6] = @Field6 ,[Field7] = @Field7 ,[IsActive] = @IsActive ,[ModifiedBy] = @ModifiedBy ,[ModifiedDate] = @ModifiedDate Where [FinancialYearId]=@FinancialYearId and [Company_Id] = @Company_Id and [Brand_Id]=@Brand_Id and [Location_Id]=@Location_Id and [AccTransId] = @AccTransId and [Trans_Id]=@Trans_Id select @ReferenceID =@@ROWCOUNT return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Ac_SubChartOfAccount_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @AccTrans_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT [FinancialYearId] ,[Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[AccTransId] ,[Other_Account_No] ,[LDr_Amount] ,[LCr_Amount] ,[FDr_Amount] ,[FCr_Amount] ,[FCurrency_Id] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_SubChartOfAccount Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id asc End else if(@Optype=2) Begin SELECT [FinancialYearId] ,[Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[AccTransId] ,[Other_Account_No] ,[LDr_Amount] ,[LCr_Amount] ,[FDr_Amount] ,[FCr_Amount] ,[FCurrency_Id] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_SubChartOfAccount Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and IsActive='True' and AccTransId=@AccTrans_Id order by Trans_Id asc End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_SubChartOfAccount_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @AccTrans_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT [FinancialYearId] ,[Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[AccTransId] ,[Other_Account_No] ,[LDr_Amount] ,[LCr_Amount] ,[FDr_Amount] ,[FCr_Amount] ,[FCurrency_Id] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_SubChartOfAccount Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id asc End else if(@Optype=2) Begin SELECT [FinancialYearId] ,[Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[AccTransId] ,[Other_Account_No] ,[LDr_Amount] ,[LCr_Amount] ,[FDr_Amount] ,[FCr_Amount] ,[FCurrency_Id] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_SubChartOfAccount Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and IsActive='True' and AccTransId=@AccTrans_Id order by Trans_Id asc End End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Ac_SubChartOfAccount_Insert] @FinancialYearId int, @Company_Id int, @Brand_Id int, @Location_Id int, @AccTransId int, @Other_Account_No int, @LDr_Amount numeric(18,6), @LCr_Amount numeric(18,6), @FDr_Amount numeric(18,6), @FCr_Amount numeric(18,6), @FCurrency_Id int, @CompanyCurrDebit numeric(18,6), @CompanyCurrCredit numeric(18,6), @Field1 nvarchar(max), @Field2 nvarchar(max), @Field3 nvarchar(max), @Field4 nvarchar(max), @Field5 nvarchar(max), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Ac_SubChartOfAccount ([FinancialYearId],[Company_Id],[Brand_Id],[Location_Id],[AccTransId],[Other_Account_No],[LDr_Amount],[LCr_Amount],[FDr_Amount],[FCr_Amount],[FCurrency_Id],[CompanyCurrDebit],[CompanyCurrCredit],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@FinancialYearId,@Company_Id,@Brand_Id,@Location_Id,@AccTransId,@Other_Account_No,@LDr_Amount,@LCr_Amount,@FDr_Amount,@FCr_Amount,@FCurrency_Id,@CompanyCurrDebit,@CompanyCurrCredit, @Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_SubChartOfAccount_Insert] @FinancialYearId int, @Company_Id int, @Brand_Id int, @Location_Id int, @AccTransId int, @Other_Account_No int, @LDr_Amount numeric(18,6), @LCr_Amount numeric(18,6), @FDr_Amount numeric(18,6), @FCr_Amount numeric(18,6), @FCurrency_Id int, @CompanyCurrDebit numeric(18,6), @CompanyCurrCredit numeric(18,6), @Field1 nvarchar(max), @Field2 nvarchar(max), @Field3 nvarchar(max), @Field4 nvarchar(max), @Field5 nvarchar(max), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceID int output As Begin Insert Into Ac_SubChartOfAccount ([FinancialYearId],[Company_Id],[Brand_Id],[Location_Id],[AccTransId],[Other_Account_No],[LDr_Amount],[LCr_Amount],[FDr_Amount],[FCr_Amount],[FCurrency_Id],[CompanyCurrDebit],[CompanyCurrCredit],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@FinancialYearId,@Company_Id,@Brand_Id,@Location_Id,@AccTransId,@Other_Account_No,@LDr_Amount,@LCr_Amount,@FDr_Amount,@FCr_Amount,@FCurrency_Id,@CompanyCurrDebit,@CompanyCurrCredit, @Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = SCOPE_IDENTITY() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Ac_Ageing_Detail_SelectRow]    @Company_Id int,   @Brand_Id int,   @Location_Id nvarchar(max),   @Trans_Id int,   @Ref_Id int,   @Ref_Type nvarchar(max),  @Other_Account_No int, @AgeingType nvarchar(max), @VoucherId nvarchar(max), @Optype int  As  Begin    if(@Optype=1)  Begin    SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]            ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and VoucherId=@VoucherId order by Trans_Id desc    End     ELSE IF (@Optype=2)  Begin   SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]         ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True'    End      ELSE IF (@Optype=3)  Begin   SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]         ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc      End ELSE IF (@Optype=4)  Begin   select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount)else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType     End ELSE IF(@Optype=5)  Begin  select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-31,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))   and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType      End ELSE IF(@Optype=6)  Begin  select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-61,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType        End ELSE IF(@Optype=7)  Begin   select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-180,getdate()) and Invoice_Date<DATEADD(day,-91,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType    End ELSE IF(@Optype=8)  Begin   select  (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-365,getdate()) and Invoice_Date<DATEADD(day,-181,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and  Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType End ELSE IF(@Optype=9)   Begin   select  (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-366,getdate())and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType     End ELSE IF(@Optype=10)   Begin SELECT dbo.Ac_Ageing_Detail.*, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date FROM   dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Ageing_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Ageing_Detail.VoucherId Where Ac_Ageing_Detail.Company_Id = @Company_Id and Ac_Ageing_Detail.Brand_Id=@Brand_Id and Ac_Ageing_Detail.Location_Id=@Location_Id and Ac_Ageing_Detail.IsActive='True'     End ELSE IF(@Optype=11)  Begin Select * from Ac_Ageing_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and IsActive='True' End End ";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Ac_Ageing_Detail_SelectRow]    @Company_Id int,   @Brand_Id int,   @Location_Id nvarchar(max),   @Trans_Id int,   @Ref_Id int,   @Ref_Type nvarchar(max),  @Other_Account_No int, @AgeingType nvarchar(max), @VoucherId nvarchar(max), @Optype int  As  Begin    if(@Optype=1)  Begin    SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]            ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and VoucherId=@VoucherId order by Trans_Id desc    End     ELSE IF (@Optype=2)  Begin   SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]         ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True'    End      ELSE IF (@Optype=3)  Begin   SELECT [Company_Id]      ,[Brand_Id]      ,[Location_Id]      ,[Trans_Id]      ,[Ref_Type]      ,[Ref_Id]      ,[Invoice_No]      ,[Invoice_Date]      ,[Account_No]      ,[Other_Account_No]      ,[Invoice_Amount]      ,[Paid_Receive_Amount]      ,[Due_Amount]      ,[Cheque_Issue_Date]      ,[Cheque_Clear_Date]      ,[Cheque_No]      ,[Narration]      ,[Emp_Id]      ,[Currency_Id]      ,[Exchange_Rate]      ,[Foreign_Amount]      ,[CompanyCurrDebit]      ,[CompanyCurrCredit]      ,[FinancialYearId]      ,[AgeingType]      ,[VoucherId]         ,[Field1]      ,[Field2]      ,[Field3]      ,[Field4]      ,[Field5]      ,[Field6]      ,[Field7]      ,[IsActive]      ,[CreatedBy]      ,[CreatedDate]      ,[ModifiedBy]      ,[ModifiedDate]  FROM Ac_Ageing_Detail   Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc      End ELSE IF (@Optype=4)  Begin   select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount)else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-30,getdate()) and Invoice_Date<GETDATE() and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ',')) and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType     End ELSE IF(@Optype=5)  Begin  select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-60,getdate()) and Invoice_Date<DATEADD(day,-31,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))   and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType      End ELSE IF(@Optype=6)  Begin  select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-90,getdate()) and Invoice_Date<DATEADD(day,-61,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType        End ELSE IF(@Optype=7)  Begin   select (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-180,getdate()) and Invoice_Date<DATEADD(day,-91,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType    End ELSE IF(@Optype=8)  Begin   select  (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where Invoice_Date> DATEADD(day,-365,getdate()) and Invoice_Date<DATEADD(day,-181,getdate()) and Company_Id = @Company_Id and Brand_Id=@Brand_Id and  Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType End ELSE IF(@Optype=9)   Begin   select  (case when @Ref_Id=1 then sum(due_amount)-SUM(Paid_Receive_Amount) else sum(CompanyCurrDebit)-SUM(CompanyCurrCredit) end) from Ac_Ageing_Detail where  Invoice_Date<DATEADD(day,-366,getdate())and Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id IN (SELECT CAST(Value AS INT) FROM F_Split(@Location_Id, ','))  and Other_Account_No=@Other_Account_No and AgeingType=@AgeingType     End ELSE IF(@Optype=10)   Begin SELECT dbo.Ac_Ageing_Detail.*, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date FROM   dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Ageing_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Ageing_Detail.VoucherId Where Ac_Ageing_Detail.Company_Id = @Company_Id and Ac_Ageing_Detail.Brand_Id=@Brand_Id and Ac_Ageing_Detail.Location_Id=@Location_Id and Ac_Ageing_Detail.IsActive='True'     End ELSE IF(@Optype=11)  Begin Select * from Ac_Ageing_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and IsActive='True' End End ";
            objDa.execute_Command(strsql);
        }
        try
        {
            strsql = "create procedure [dbo].[sp_Ac_VoucherDetailTotal] @Company_Id int, @Brand_Id int, @Optype int as begin if(@Optype=1) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id End ELSE IF (@Optype=2) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and SUM(Ac_Voucher_Detail.Credit_Amount)=SUM(Ac_Voucher_Detail.Debit_Amount) End ELSE IF (@Optype=3) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and SUM(Ac_Voucher_Detail.Credit_Amount)<>SUM(Ac_Voucher_Detail.Debit_Amount) End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter procedure [dbo].[sp_Ac_VoucherDetailTotal] @Company_Id int, @Brand_Id int, @Optype int as begin if(@Optype=1) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id End ELSE IF (@Optype=2) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and SUM(Ac_Voucher_Detail.Credit_Amount)=SUM(Ac_Voucher_Detail.Debit_Amount) End ELSE IF (@Optype=3) Begin select Ac_Voucher_Header.Trans_Id,Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, SUM(Ac_Voucher_Detail.Credit_Amount) as CreditTotal, SUM(Ac_Voucher_Detail.Debit_Amount) as DebitTotal, (SUM(Ac_Voucher_Detail.Debit_Amount)-SUM(Ac_Voucher_Detail.Credit_Amount)) as Diffrence from ac_voucher_header inner join Ac_Voucher_Detail on ac_voucher_header.Trans_Id=Ac_Voucher_Detail.Voucher_No group by Ac_Voucher_Header.Trans_Id, Ac_Voucher_Header.Location_Id,Ac_Voucher_Header.Voucher_Type,Ac_Voucher_Header.Voucher_No,Ac_Voucher_Header.Voucher_Date, Ac_Voucher_Header.IsActive, Ac_Voucher_Detail.CreatedBy, Ac_Voucher_Detail.ModifiedBy, Ac_Voucher_Header.ReconciledFromFinance, Ac_Voucher_Header.Company_Id,Ac_Voucher_Header.Brand_Id, Ac_Voucher_Header.Location_Id having Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.Company_Id=@Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and SUM(Ac_Voucher_Detail.Credit_Amount)<>SUM(Ac_Voucher_Detail.Debit_Amount) End End";
            objDa.execute_Command(strsql);
        }
        try
        {
            strsql = "create Procedure [dbo].[sp_Ac_Voucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No nvarchar(255), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' and Voucher_No=@Voucher_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT MAX(Trans_Id) FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End else if(@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ReconciledFromFinance='True' End else if(@Optype=7) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' End else if(@Optype=8) Begin SELECT Distinct dbo.Ac_Voucher_Header.*, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ems_ContactMaster.Name FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN dbo.Ems_ContactMaster ON dbo.Ac_Voucher_Detail.Other_Account_No = dbo.Ems_ContactMaster.Trans_Id Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' order by Ac_Voucher_Header.Voucher_Date desc End ELSE IF (@Optype=9) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=10) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=11) Begin SELECT top 1 Voucher_Date as Voucher_Date FROM Ac_Voucher_Header order by Voucher_Date End if(@Optype=12) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Voucher_Date DESC End if(@Optype=13) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Trans_Id, dbo.Ac_Voucher_Header.Finance_Code, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Header.Cancel, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Detail.Account_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No End if(@Optype=14) Begin Select * from Ac_Voucher_Header End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_Voucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No nvarchar(255), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' and Voucher_No=@Voucher_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT MAX(Trans_Id) FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id End else if(@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ReconciledFromFinance='True' End else if(@Optype=7) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' End else if(@Optype=8) Begin SELECT Distinct dbo.Ac_Voucher_Header.*, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ems_ContactMaster.Name FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN dbo.Ems_ContactMaster ON dbo.Ac_Voucher_Detail.Other_Account_No = dbo.Ems_ContactMaster.Trans_Id Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' order by Ac_Voucher_Header.Voucher_Date desc End ELSE IF (@Optype=9) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=10) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=11) Begin SELECT top 1 Voucher_Date as Voucher_Date FROM Ac_Voucher_Header order by Voucher_Date End if(@Optype=12) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Voucher_Date DESC End if(@Optype=13) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Trans_Id, dbo.Ac_Voucher_Header.Finance_Code, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Header.Cancel, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Detail.Account_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No End if(@Optype=14) Begin Select * from Ac_Voucher_Header End End";
            objDa.execute_Command(strsql);
        }
        try
        {
            strsql = "create Procedure [dbo].[sp_Ac_Voucher_Detail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No int, @Optype int As Begin IF (@Optype=6) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id,dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount,Ac_Voucher_Detail.Field2 as BankReconcilation, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End else if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Voucher_No=@Voucher_No order by Trans_Id asc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail order by Trans_Id desc End else if(@Optype=8) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id End else if(@Optype=9) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id and dbo.Ac_Voucher_Detail.Field3='' and dbo.Ac_Voucher_Detail.Field4='' End else if(@Optype=10) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id and dbo.Ac_Voucher_Detail.Field3!='' and dbo.Ac_Voucher_Detail.Field4!='' End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Ac_Voucher_Detail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No int, @Optype int As Begin IF (@Optype=6) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Post,dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id,dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id as Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id,Ac_ChartOfAccount.Account_No as ACNo,Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Debit_Amount-dbo.Ac_Voucher_Detail.Credit_Amount) as BalanceAmount,Ac_Voucher_Detail.Field2 as BankReconcilation, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Ac_Voucher_Header.Location_Id) as LocationName , (Select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Other_Account_Name, (Select Ems_ContactMaster.Field1 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Email_Id, (Select Ems_ContactMaster.Field2 from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Ac_Voucher_Detail.Other_Account_No) as Phone_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No inner join Ac_ChartOfAccount on Ac_Voucher_Detail.Account_no=Ac_ChartOfAccount.Trans_Id where Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' and (Ac_Voucher_Header.Field3='' or Ac_Voucher_Header.Field3 is null or Ac_Voucher_Header.Field3='Approved') order by Ac_Voucher_Header.Trans_Id asc End else if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Voucher_No=@Voucher_No order by Trans_Id asc End ELSE IF (@Optype=5) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail Where IsActive='True' order by Trans_Id desc End ELSE IF (@Optype=7) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Voucher_No] ,[Serial_No] ,[Account_No] ,[Other_Account_No] ,[Ref_Id] ,[Ref_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[Debit_Amount] ,[Credit_Amount] ,[Narration] ,[CostCenter_ID] ,[Emp_Id] ,[Currency_Id] ,[Exchange_Rate] ,[Foreign_Amount] ,[CompanyCurrDebit] ,[CompanyCurrCredit] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Detail order by Trans_Id desc End else if(@Optype=8) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id End else if(@Optype=9) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id and dbo.Ac_Voucher_Detail.Field3='' and dbo.Ac_Voucher_Detail.Field4='' End else if(@Optype=10) Begin SELECT dbo.Ac_Voucher_Detail.Trans_Id,dbo.Ac_Voucher_Detail.Company_Id, dbo.Ac_Voucher_Detail.Brand_Id, dbo.Ac_Voucher_Detail.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Detail.Debit_Amount, dbo.Ac_Voucher_Detail.Credit_Amount, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Detail.Field3 as ReconciledBy, dbo.Ac_Voucher_Detail.Field4 as ReconciledDate FROM dbo.Ac_Voucher_Detail INNER JOIN dbo.Ac_Voucher_Header ON dbo.Ac_Voucher_Detail.Voucher_No = dbo.Ac_Voucher_Header.Trans_Id where Ac_Voucher_Header.ReconciledFromFinance='True' and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Detail.Company_Id=@Company_Id and Ac_Voucher_Detail.Brand_Id=@Brand_Id and Ac_Voucher_Detail.Location_Id=@Location_Id and dbo.Ac_Voucher_Detail.Field3!='' and dbo.Ac_Voucher_Detail.Field4!='' End End";
            objDa.execute_Command(strsql);
        }


        //created on 02-11-2016

        try
        {
            strsql = "create Procedure [dbo].[sp_Ems_ContactMaster_SelectRow] @Trans_Id int, @Name nvarchar(MAX), @Optype int As Begin if(@Optype=7) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id, (select Dep_Name from Set_DepartmentMaster where Dep_Id=CM.Dep_Id) as DepartmentName , (select Designation from Set_DesignationMaster where Designation_Id=CM.Designation_Id) as DesignationName , case when Ems_Contact_Group.Group_Id =1 then Ems_Contact_Group.Field1 end as Customercode, case when Ems_Contact_Group.Group_Id =2 then Ems_Contact_Group.Field1 end as suppliercode, case when CM.Company_Id<>0 then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , CM.Is_Reseller from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.status end if(@Optype=1) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id end if(@Optype=2) Begin Select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Dep_Id ,Ems_ContactMaster.Status,Ems_ContactMaster.Code,Ems_ContactMaster.Is_Reseller ,Ems_ContactMaster.Field3, Ems_ContactMaster.Name,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.company_id,Ems_ContactMaster.Field1 as EmailId,Ems_ContactMaster.Field2 as MobileNo, Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when Ems_ContactMaster.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else ' ' end as CountryName , Ems_ContactMaster.Field6 , (Ems_ContactMaster.Name+'/'+cast(Ems_ContactMaster.Trans_Id as nvarchar)+'/'+Ems_ContactMaster.Field1+'/'+Ems_ContactMaster.Field2) as Filtertext from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' order by Ems_ContactMaster.Name asc end if(@Optype=3) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_ContactMaster.Trans_Id = @Trans_Id end if(@Optype=4) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id = (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id = (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.ModifiedBy)) as ModifiedUser from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.ModifiedDate desc end if(@Optype=5) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.Trans_Id=@Trans_Id and Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.Name Asc end if(@Optype=6) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Rtrim(LTRIM(Ems_ContactMaster.Name)) = @Name end if(@Optype=8) begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion,Ems_Contact_Group.Group_Id , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_Contact_Group.Group_Id=@Trans_Id end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Ems_ContactMaster_SelectRow] @Trans_Id int, @Name nvarchar(MAX), @Optype int As Begin if(@Optype=7) begin select CM.Trans_Id,CM.Code,CM.Name,CM.Name_L,CM.Status,CM.Field1 as Permanent_EmailId,CM.Field2 as Permanent_Mobileno,Ems_GroupMaster.Group_Name,Ems_GroupMaster.Group_Name_L,Ems_GroupMaster.Group_id, (select Dep_Name from Set_DepartmentMaster where Dep_Id=CM.Dep_Id) as DepartmentName , (select Designation from Set_DesignationMaster where Designation_Id=CM.Designation_Id) as DesignationName , case when Ems_Contact_Group.Group_Id =1 then Ems_Contact_Group.Field1 end as Customercode, case when Ems_Contact_Group.Group_Id =2 then Ems_Contact_Group.Field1 end as suppliercode, case when CM.Company_Id<>0 then (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=CM.Company_Id) end as Contact_Company_Name , CM.Is_Reseller from ems_contactmaster as CM inner join Ems_Contact_Group on CM.Trans_Id=Ems_Contact_Group.Contact_Id inner join Ems_GroupMaster on Ems_GroupMaster.Group_id=Ems_Contact_Group.Group_id where CM.IsActive='True' order by cm.status end if(@Optype=1) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id end if(@Optype=2) Begin Select Ems_ContactMaster.Trans_Id,Ems_ContactMaster.Dep_Id ,Ems_ContactMaster.Status,Ems_ContactMaster.Code,Ems_ContactMaster.Is_Reseller ,Ems_ContactMaster.Field3, Ems_ContactMaster.Name,Ems_ContactMaster.Field1,Ems_ContactMaster.Field2,Ems_ContactMaster.company_id,Ems_ContactMaster.Field1 as EmailId,Ems_ContactMaster.Field2 as MobileNo, Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , case when Ems_ContactMaster.Field4<>' ' then (select Sys_CountryMaster.Country_Name from Sys_CountryMaster where Sys_CountryMaster.Country_Id=Ems_ContactMaster.Field4) else ' ' end as CountryName , Ems_ContactMaster.Field6 , (Ems_ContactMaster.Name+'/'+cast(Ems_ContactMaster.Trans_Id as nvarchar)+'/'+Ems_ContactMaster.Field1+'/'+Ems_ContactMaster.Field2) as Filtertext from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' order by Ems_ContactMaster.Name asc end if(@Optype=3) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_ContactMaster.Trans_Id = @Trans_Id end if(@Optype=4) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName , (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id = (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.CreatedBy)) as CreatedUser, (select Set_EmployeeMaster.Emp_Name from Set_EmployeeMaster where Set_EmployeeMaster.Emp_Id = (select Set_UserMaster.Emp_Id from Set_UserMaster where Set_UserMaster.User_Id=Ems_ContactMaster.ModifiedBy)) as ModifiedUser from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.ModifiedDate desc end if(@Optype=5) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.Trans_Id=@Trans_Id and Ems_ContactMaster.IsActive='False' order by Ems_ContactMaster.Name Asc end if(@Optype=6) Begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Rtrim(LTRIM(Ems_ContactMaster.Name)) = @Name end if(@Optype=8) begin Select Ems_ContactMaster.*,Set_DepartmentMaster.Dep_Name,Set_DesignationMaster.Designation ,Set_ReligionMaster.Religion,Ems_Contact_Group.Group_Id , case when Ems_ContactMaster.company_Id=0 then Ems_ContactMaster.Name else e2.Name end as C_Name, case when Ems_ContactMaster.Status='Company' then Ems_ContactMaster.Name else (Ems_ContactMaster.Field3+' '+Ems_ContactMaster.Name) end as ContactName from Ems_ContactMaster left join Set_DepartmentMaster on Ems_ContactMaster.Dep_Id=Set_DepartmentMaster.Dep_Id left join Set_DesignationMaster on Ems_ContactMaster.Designation_Id=Set_DesignationMaster.Designation_Id left Join Set_ReligionMaster on Ems_ContactMaster.Religion_Id=Set_ReligionMaster.Religion_Id left Join Ems_Contact_Group on Ems_ContactMaster.Trans_Id=Ems_Contact_Group.Contact_Id left JOIN Ems_ContactMaster e2 ON Ems_ContactMaster.Company_Id = e2.Trans_Id where Ems_ContactMaster.IsActive='True' and Ems_Contact_Group.Group_Id=@Trans_Id end End";
            objDa.execute_Command(strsql);
        }

        try
        {

            strsql = "create Procedure [dbo].[sp_Ems_ContactMaster_RowStatus] @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @Optype int, @ReferenceID int output As Begin if(@Optype=0) begin Update Ems_ContactMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Trans_Id] = @Trans_Id select @ReferenceID=@@ROWCOUNT end if(@Optype=1) begin Update Ems_ContactMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [ParentContactId] = @Trans_Id select @ReferenceID=@@ROWCOUNT end return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Ems_ContactMaster_RowStatus] @Trans_Id int, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @Optype int, @ReferenceID int output As Begin if(@Optype=0) begin Update Ems_ContactMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [Trans_Id] = @Trans_Id select @ReferenceID=@@ROWCOUNT end if(@Optype=1) begin Update Ems_ContactMaster Set IsActive = @IsActive ,ModifiedBy=@ModifiedBy ,ModifiedDate=@ModifiedDate Where [ParentContactId] = @Trans_Id select @ReferenceID=@@ROWCOUNT end return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        //04-11-2016

        try
        {
            strsql = "create Procedure [dbo].[sp_Ac_Voucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No nvarchar(255), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' and Voucher_No=@Voucher_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT MAX(Trans_Id) FROM Ac_Voucher_Header End else if(@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ReconciledFromFinance='True' End else if(@Optype=7) Begin SELECT dbo.Ac_Voucher_Header.*, (case when (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0)!=0 then (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0) else 0 end) as Other_Account FROM dbo.Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' End else if(@Optype=8) Begin SELECT Distinct dbo.Ac_Voucher_Header.*, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ems_ContactMaster.Name FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN dbo.Ems_ContactMaster ON dbo.Ac_Voucher_Detail.Other_Account_No = dbo.Ems_ContactMaster.Trans_Id Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' order by Ac_Voucher_Header.Voucher_Date desc End ELSE IF (@Optype=9) Begin SELECT dbo.Ac_Voucher_Header.*, (case when (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0)!=0 then (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0) else 0 end) as Other_Account FROM dbo.Ac_Voucher_Header Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=10) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=11) Begin SELECT top 1 Voucher_Date as Voucher_Date FROM Ac_Voucher_Header order by Voucher_Date End if(@Optype=12) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Voucher_Date DESC End if(@Optype=13) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Trans_Id, dbo.Ac_Voucher_Header.Finance_Code, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Header.Cancel, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Detail.Account_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No End if(@Optype=14) Begin Select * from Ac_Voucher_Header End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Ac_Voucher_Header_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @Voucher_No nvarchar(255), @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='True' order by Voucher_Date DESC End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' and Voucher_No=@Voucher_No order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT MAX(Trans_Id) FROM Ac_Voucher_Header End else if(@Optype=6) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ReconciledFromFinance='True' End else if(@Optype=7) Begin SELECT dbo.Ac_Voucher_Header.*, (case when (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0)!=0 then (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0) else 0 end) as Other_Account FROM dbo.Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' and ReconciledFromFinance='True' End else if(@Optype=8) Begin SELECT Distinct dbo.Ac_Voucher_Header.*, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ems_ContactMaster.Name FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN dbo.Ems_ContactMaster ON dbo.Ac_Voucher_Detail.Other_Account_No = dbo.Ems_ContactMaster.Trans_Id Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='True' order by Ac_Voucher_Header.Voucher_Date desc End ELSE IF (@Optype=9) Begin SELECT dbo.Ac_Voucher_Header.*, (case when (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0)!=0 then (select distinct Ac_Voucher_Detail.Other_Account_No from Ac_Voucher_Detail where Ac_Voucher_Detail.Voucher_No= Ac_Voucher_Header.Trans_Id and Ac_Voucher_Detail.Other_Account_No!=0) else 0 end) as Other_Account FROM dbo.Ac_Voucher_Header Where Ac_Voucher_Header.Company_Id = @Company_Id and Ac_Voucher_Header.Brand_Id=@Brand_Id and Ac_Voucher_Header.Location_Id=@Location_Id and Ac_Voucher_Header.IsActive='True' and Ac_Voucher_Header.ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=10) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='False' and ReconciledFromFinance='False' order by Voucher_Date DESC End ELSE IF (@Optype=11) Begin SELECT top 1 Voucher_Date as Voucher_Date FROM Ac_Voucher_Header order by Voucher_Date End if(@Optype=12) Begin SELECT [Company_Id] ,[Brand_Id] ,[Location_Id] ,[Trans_Id] ,[Finance_Code] ,[Location_To] ,[Department_Id] ,[Ref_Id] ,[Ref_Type] ,[Inv_Number] ,[Inv_Date] ,[Voucher_No] ,[Voucher_Date] ,[Voucher_Type] ,[Cheque_Issue_Date] ,[Cheque_Clear_Date] ,[Cheque_No] ,[RefrenceNo] ,[Currency_Id] ,[Exchange_Rate] ,[Narration] ,[Post] ,[Cancel] ,[ReconciledFromFinance] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Ac_Voucher_Header Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and IsActive='True' order by Voucher_Date DESC End if(@Optype=13) Begin SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Trans_Id, dbo.Ac_Voucher_Header.Finance_Code, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Header.Cancel, dbo.Ac_Voucher_Header.ReconciledFromFinance, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Detail.Account_No FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No End if(@Optype=14) Begin Select * from Ac_Voucher_Header End End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_StockDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @optype int As Begin if(@optype=5) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id end if(@optype=1) begin Select [Company_Id], [Brand_Id], [Location_Id], [ProductId], [OpeningBalance], [RackID], [Quantity], [Minimum_Qty], [Maximum_Qty], [ReserveQty], [DamageQty], [BlockedQty], [OrderQty], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal From Inv_StockDetail end if(@optype=2) begin SELECT Set_LocationMaster.Location_Name, Inv_StockDetail.* , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail INNER JOIN Set_LocationMaster ON Inv_StockDetail.Location_Id = Set_LocationMaster.Location_Id where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.ProductId=@ProductId end if(@optype=3) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id end if(@optype=4) begin Select Inv_Product_CompanyBrand.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, ( Case when Inv_StockDetail.ProductId<>'' then 0 else 1 end )as InStock,Inv_StockDetail.Quantity as SysQty , Inv_StockDetail.OpeningBalance as Quantity ,Inv_StockDetail.Location_Id,Inv_StockDetail.Field1 as UnitPrice, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , Inv_ProductMaster.UnitId , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , case when Inv_StockDetail.Quantity is null then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyVisibleStatus, case when Inv_StockDetail.Quantity is null then CAST ('False' as Bit) else CAST ('True' as Bit) end as lblQtyVisibleStatus , case when Inv_StockDetail.Quantity is null And Inv_ProductMaster.Maintainstock='SNO' then CAST ('False' as Bit) else CAST ('True' as Bit) end as txtQtyEnableStatus, case when Inv_StockDetail.Quantity is not null then CAST ('False' as Bit) when Inv_StockDetail.Quantity is null and Inv_ProductMaster.MaintainStock='SNO' then CAST ('True' as Bit) else CAST ('False' as Bit) end as lnkserialbtnVisibleStatus , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal from Inv_Product_CompanyBrand inner join Inv_ProductMaster on Inv_Product_CompanyBrand.ProductId=Inv_ProductMaster.ProductId and Inv_ProductMaster.IsActive='True' left Join Inv_StockDetail on Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_Product_CompanyBrand.ProductId=Inv_StockDetail.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and Inv_ProductMaster.ItemType='S' and Inv_ProductMaster.Field1=' ' and Inv_ProductMaster.Field3='True' end if(@optype=6) begin Select Inv_StockDetail.Field2,Inv_StockDetail.Quantity from Inv_StockDetail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@optype=7) begin Select Inv_StockDetail.ProductId from Inv_StockDetail where ProductId=@ProductId end End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Inv_StockDetail_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @ProductId int, @optype int As Begin if(@optype=5) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id end if(@optype=1) begin Select [Company_Id], [Brand_Id], [Location_Id], [ProductId], [OpeningBalance], [RackID], [Quantity], [Minimum_Qty], [Maximum_Qty], [ReserveQty], [DamageQty], [BlockedQty], [OrderQty], [Field1], [Field2], [Field3], [Field4], [Field5], [Field6], [Field7], [IsActive], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate] , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal From Inv_StockDetail end if(@optype=2) begin SELECT Set_LocationMaster.Location_Name, Inv_StockDetail.* , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail INNER JOIN Set_LocationMaster ON Inv_StockDetail.Location_Id = Set_LocationMaster.Location_Id where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.ProductId=@ProductId end if(@optype=3) begin SELECT Inv_StockDetail.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal FROM Inv_StockDetail left JOIN Inv_ProductMaster ON Inv_StockDetail.ProductId = Inv_ProductMaster.ProductId where Inv_StockDetail.Company_Id =@Company_Id and Inv_StockDetail.Brand_Id =@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id end if(@optype=4) begin Select Inv_Product_CompanyBrand.*,Inv_ProductMaster.ProductCode,Inv_ProductMaster.EProductName, ( Case when Inv_StockDetail.ProductId<>'' then 0 else 1 end )as InStock,Inv_StockDetail.Quantity as SysQty , Inv_StockDetail.OpeningBalance as Quantity ,Inv_StockDetail.Location_Id,Inv_StockDetail.Field1 as UnitPrice, (select Set_LocationMaster.Location_Name from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as LocationName, (select Inv_UnitMaster.Unit_Name from Inv_UnitMaster where Inv_UnitMaster.Unit_Id=Inv_ProductMaster.UnitId) as Unitname , Inv_ProductMaster.UnitId , (select Set_LocationMaster.Field1 from Set_LocationMaster where Set_LocationMaster.Location_Id=Inv_StockDetail.Location_Id) as CurrencyID , case when Inv_StockDetail.Quantity is null then CAST ('True' as Bit) else CAST ('False' as Bit) end as txtQtyVisibleStatus, case when Inv_StockDetail.Quantity is null then CAST ('False' as Bit) else CAST ('True' as Bit) end as lblQtyVisibleStatus , case when Inv_StockDetail.Quantity is null And Inv_ProductMaster.Maintainstock='SNO' then CAST ('False' as Bit) else CAST ('True' as Bit) end as txtQtyEnableStatus, case when Inv_StockDetail.Quantity is not null then CAST ('False' as Bit) when Inv_StockDetail.Quantity is null and Inv_ProductMaster.MaintainStock='SNO' then CAST ('True' as Bit) else CAST ('False' as Bit) end as lnkserialbtnVisibleStatus , (CAST(Inv_StockDetail.Quantity as float) *CAST(Inv_StockDetail.Field1 as float)) as LineTotal from Inv_Product_CompanyBrand inner join Inv_ProductMaster on Inv_Product_CompanyBrand.ProductId=Inv_ProductMaster.ProductId and Inv_ProductMaster.IsActive='True' left Join Inv_StockDetail on Inv_StockDetail.Company_Id=@Company_Id and Inv_StockDetail.Brand_Id=@Brand_Id and Inv_StockDetail.Location_Id=@Location_Id and Inv_Product_CompanyBrand.ProductId=Inv_StockDetail.ProductId where Inv_Product_CompanyBrand.Company_Id=@Company_Id and Inv_Product_CompanyBrand.BrandId=@Brand_Id and Inv_ProductMaster.ItemType='S' and Inv_ProductMaster.Field1=' ' and Inv_ProductMaster.Field3='True' end if(@optype=6) begin Select Inv_StockDetail.Field2,Inv_StockDetail.Quantity from Inv_StockDetail where Company_Id=@Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and ProductId=@ProductId end if(@optype=7) begin Select Inv_StockDetail.ProductId from Inv_StockDetail where ProductId=@ProductId end End";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "update IT_ObjectEntry set IsActive='False' where Object_Id='281'";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        //updated on 07-11-2016
        try
        {
            strsql = "update Inv_PurchaseQuoteDetail set Field4=(select inv_purchasequoteheader.Field1 from inv_purchasequoteheader where inv_purchasequoteheader.Trans_Id=Inv_PurchaseQuoteDetail.RPQ_No ),Field5=Amount  where Field4=' '";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_PurchaseInquiry_Supplier_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PI_No int, @Supplier_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Name FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Supplier_Id=@Supplier_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT Inv_PurchaseInquiry_Supplier.Supplier_Id, (select sum(cast(Field5 as Float)) from Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id and Supplier_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Amount , (select max(Field1) from Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id and Supplier_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Field1 FROM Inv_PurchaseInquiry_Supplier left JOIN Inv_PurchaseQuoteHeader ON Inv_PurchaseInquiry_Supplier.PI_No = Inv_PurchaseQuoteHeader.PI_No AND Inv_PurchaseInquiry_Supplier.Company_Id = Inv_PurchaseQuoteHeader.Company_Id AND Inv_PurchaseInquiry_Supplier.Brand_Id = Inv_PurchaseQuoteHeader.Brand_Id where Inv_PurchaseInquiry_Supplier.Company_Id = @Company_Id and Inv_PurchaseInquiry_Supplier.Brand_Id=@Brand_Id and Inv_PurchaseInquiry_Supplier.Location_Id=@Location_Id and Inv_PurchaseInquiry_Supplier.PI_No=@PI_No order by Inv_PurchaseInquiry_Supplier.Trans_Id desc End End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Inv_PurchaseInquiry_Supplier_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id int, @Trans_Id int, @PI_No int, @Supplier_Id int, @Optype int As Begin if(@Optype=1) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id order by Trans_Id desc End ELSE IF (@Optype=2) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Trans_Id=@Trans_Id order by Trans_Id desc End ELSE IF (@Optype=3) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] , (select Ems_ContactMaster.Name from Ems_ContactMaster where Ems_ContactMaster.Trans_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Name FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and PI_No=@PI_No order by Trans_Id desc End ELSE IF (@Optype=4) Begin SELECT [Company_Id] ,[Brand_Id] ,[Trans_Id] ,[PI_No] ,[Supplier_Id] ,[Group_Id] ,[Field1] ,[Field2] ,[Field3] ,[Field4] ,[Field5] ,[Field6] ,[Field7] ,[IsActive] ,[CreatedBy] ,[CreatedDate] ,[ModifiedBy] ,[ModifiedDate] FROM Inv_PurchaseInquiry_Supplier Where Company_Id = @Company_Id and Brand_Id=@Brand_Id and Location_Id=@Location_Id and Supplier_Id=@Supplier_Id order by Trans_Id desc End ELSE IF (@Optype=5) Begin SELECT Inv_PurchaseInquiry_Supplier.Supplier_Id, (select sum(cast(Field5 as Float)) from Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id and Supplier_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Amount , (select max(Field1) from Inv_PurchaseQuoteDetail where RPQ_No=Inv_PurchaseQuoteHeader.Trans_Id and Supplier_Id=Inv_PurchaseInquiry_Supplier.Supplier_Id) as Field1 FROM Inv_PurchaseInquiry_Supplier left JOIN Inv_PurchaseQuoteHeader ON Inv_PurchaseInquiry_Supplier.PI_No = Inv_PurchaseQuoteHeader.PI_No AND Inv_PurchaseInquiry_Supplier.Company_Id = Inv_PurchaseQuoteHeader.Company_Id AND Inv_PurchaseInquiry_Supplier.Brand_Id = Inv_PurchaseQuoteHeader.Brand_Id where Inv_PurchaseInquiry_Supplier.Company_Id = @Company_Id and Inv_PurchaseInquiry_Supplier.Brand_Id=@Brand_Id and Inv_PurchaseInquiry_Supplier.Location_Id=@Location_Id and Inv_PurchaseInquiry_Supplier.PI_No=@PI_No order by Inv_PurchaseInquiry_Supplier.Trans_Id desc End End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "create PROCEDURE [dbo].[sp_Ac_AllCustomer_Balance] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @CustomerAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @currency_type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT company_id, brand_id, Customer_Id, name, (CASE WHEN @currency_type = 1 THEN opening_balance ELSE cmp_ob END) AS opening_final, (CASE WHEN @currency_type = 1 THEN debit_amount ELSE cmp_dr END) AS Debit_final, (CASE WHEN @currency_type = 1 THEN credit_Amount ELSE cmp_cr END) AS Credit_final, (CASE WHEN @currency_type = 1 THEN closing_balance ELSE cmp_cb END) AS closing_final, opening_balance, debit_amount, credit_Amount, closing_balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, cmp_ob, cmp_dr, cmp_cr, (CASE WHEN @currency_type = 1 THEN Start30 ELSE Comp_Start30 END) AS start30_final, (CASE WHEN @currency_type = 1 THEN second60 ELSE comp_second60 END) AS second60_final, (CASE WHEN @currency_type = 1 THEN third90 ELSE Comp_third90 END) AS third90_final, (CASE WHEN @currency_type = 1 THEN fourth90above ELSE Comp_fourth90above END) AS fourth90above_final, (CASE WHEN @currency_type = 1 THEN ageingBalance ELSE Comp_ageingBalance END) AS AgeingBalance_final, Start30, second60, third90, fourth90above, ageingBalance, Comp_Start30, comp_second60, Comp_third90, Comp_fourth90above, Comp_ageingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS cmp_ob, ISNULL(trans.cmp_dr, 0) AS cmp_dr, ISNULL(trans.cmp_cr, 0) AS cmp_cr, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS cmp_cb, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id FROM set_CustomerMaster WHERE set_CustomerMaster.Account_No = @CustomerAccount_no AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND set_CustomerMaster.IsActive = 'True') set_CustomerMaster LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_CustomerMaster.Customer_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_CustomerMaster.Customer_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN set_CustomerMaster ON set_CustomerMaster.Customer_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = set_CustomerMaster.Customer_Id) final ORDER BY name END END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER PROCEDURE [dbo].[sp_Ac_AllCustomer_Balance] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @CustomerAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @currency_type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT company_id, brand_id, Customer_Id, name, (CASE WHEN @currency_type = 1 THEN opening_balance ELSE cmp_ob END) AS opening_final, (CASE WHEN @currency_type = 1 THEN debit_amount ELSE cmp_dr END) AS Debit_final, (CASE WHEN @currency_type = 1 THEN credit_Amount ELSE cmp_cr END) AS Credit_final, (CASE WHEN @currency_type = 1 THEN closing_balance ELSE cmp_cb END) AS closing_final, opening_balance, debit_amount, credit_Amount, closing_balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, cmp_ob, cmp_dr, cmp_cr, (CASE WHEN @currency_type = 1 THEN Start30 ELSE Comp_Start30 END) AS start30_final, (CASE WHEN @currency_type = 1 THEN second60 ELSE comp_second60 END) AS second60_final, (CASE WHEN @currency_type = 1 THEN third90 ELSE Comp_third90 END) AS third90_final, (CASE WHEN @currency_type = 1 THEN fourth90above ELSE Comp_fourth90above END) AS fourth90above_final, (CASE WHEN @currency_type = 1 THEN ageingBalance ELSE Comp_ageingBalance END) AS AgeingBalance_final, Start30, second60, third90, fourth90above, ageingBalance, Comp_Start30, comp_second60, Comp_third90, Comp_fourth90above, Comp_ageingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS cmp_ob, ISNULL(trans.cmp_dr, 0) AS cmp_dr, ISNULL(trans.cmp_cr, 0) AS cmp_cr, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS cmp_cb, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id FROM set_CustomerMaster WHERE set_CustomerMaster.Account_No = @CustomerAccount_no AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND set_CustomerMaster.IsActive = 'True') set_CustomerMaster LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_CustomerMaster.Customer_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_CustomerMaster.Customer_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN set_CustomerMaster ON set_CustomerMaster.Customer_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = set_CustomerMaster.Customer_Id) final ORDER BY name END END";
            objDa.execute_Command(strsql);
        }



        try
        {
            strsql = "create PROCEDURE [dbo].[sp_Ac_AllSupplierDetail_SelectRow] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @SupplierAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @Currency_Type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT Company_Id, Brand_Id, Supplier_Id, Name, (CASE WHEN @Currency_Type = 1 THEN Opening_Balance ELSE Company_OpeningBalance END) AS Opening_Final, (CASE WHEN @Currency_Type = 1 THEN Debit_Amount ELSE Company_DebitAmount END) AS Debit_Final, (CASE WHEN @Currency_Type = 1 THEN Credit_Amount ELSE Company_CreditAmount END) AS Credit_Final, (CASE WHEN @Currency_Type = 1 THEN Closing_Balance ELSE Company_ClosingBalance END) AS Closing_Final, Opening_Balance, Debit_Amount, Credit_Amount, Closing_Balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, Company_OpeningBalance, Company_DebitAmount, Company_CreditAmount, Company_ClosingBalance, (CASE WHEN @Currency_Type = 1 THEN Start30 ELSE Comp_Start30 END) AS Start30_Final, (CASE WHEN @Currency_Type = 1 THEN Second60 ELSE comp_second60 END) AS Second60_Final, (CASE WHEN @Currency_Type = 1 THEN Third90 ELSE Comp_third90 END) AS Third90_Final, (CASE WHEN @Currency_Type = 1 THEN Fourth90Above ELSE Comp_fourth90above END) AS Fourth90above_Final, (CASE WHEN @Currency_Type = 1 THEN AgeingBalance ELSE Comp_AgeingBalance END) AS AgeingBalance_Final, Start30, Second60, Third90, Fourth90Above, AgeingBalance, Comp_Start30, Comp_Second60, Comp_Third90, Comp_Fourth90Above, Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS Company_OpeningBalance, ISNULL(trans.cmp_dr, 0) AS Company_DebitAmount, ISNULL(trans.cmp_cr, 0) AS Company_CreditAmount, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS Company_ClosingBalance, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id FROM Set_Suppliers WHERE Set_Suppliers.Account_No = @SupplierAccount_No AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND Set_Suppliers.IsActive = 'True') set_suppliers LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_suppliers.Supplier_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_suppliers.Supplier_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN Set_Suppliers ON Set_Suppliers.Supplier_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = Set_Suppliers.Supplier_Id) tbl_final ORDER BY Name END END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER PROCEDURE [dbo].[sp_Ac_AllSupplierDetail_SelectRow] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @SupplierAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @Currency_Type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT Company_Id, Brand_Id, Supplier_Id, Name, (CASE WHEN @Currency_Type = 1 THEN Opening_Balance ELSE Company_OpeningBalance END) AS Opening_Final, (CASE WHEN @Currency_Type = 1 THEN Debit_Amount ELSE Company_DebitAmount END) AS Debit_Final, (CASE WHEN @Currency_Type = 1 THEN Credit_Amount ELSE Company_CreditAmount END) AS Credit_Final, (CASE WHEN @Currency_Type = 1 THEN Closing_Balance ELSE Company_ClosingBalance END) AS Closing_Final, Opening_Balance, Debit_Amount, Credit_Amount, Closing_Balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, Company_OpeningBalance, Company_DebitAmount, Company_CreditAmount, Company_ClosingBalance, (CASE WHEN @Currency_Type = 1 THEN Start30 ELSE Comp_Start30 END) AS Start30_Final, (CASE WHEN @Currency_Type = 1 THEN Second60 ELSE comp_second60 END) AS Second60_Final, (CASE WHEN @Currency_Type = 1 THEN Third90 ELSE Comp_third90 END) AS Third90_Final, (CASE WHEN @Currency_Type = 1 THEN Fourth90Above ELSE Comp_fourth90above END) AS Fourth90above_Final, (CASE WHEN @Currency_Type = 1 THEN AgeingBalance ELSE Comp_AgeingBalance END) AS AgeingBalance_Final, Start30, Second60, Third90, Fourth90Above, AgeingBalance, Comp_Start30, Comp_Second60, Comp_Third90, Comp_Fourth90Above, Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS Company_OpeningBalance, ISNULL(trans.cmp_dr, 0) AS Company_DebitAmount, ISNULL(trans.cmp_cr, 0) AS Company_CreditAmount, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS Company_ClosingBalance, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id FROM Set_Suppliers WHERE Set_Suppliers.Account_No = @SupplierAccount_No AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND Set_Suppliers.IsActive = 'True') set_suppliers LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_suppliers.Supplier_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_suppliers.Supplier_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN Set_Suppliers ON Set_Suppliers.Supplier_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = Set_Suppliers.Supplier_Id) tbl_final ORDER BY Name END END";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_Insert] @Company_Id int, @Brand_Id int, @Location_ID int, @InvoiceNo nvarchar(255), @InvoiceDate datetime = NULL, @InvoiceType nvarchar(50), @SupInvoiceNo nvarchar(255) = NULL, @SupInvoiceDate datetime = NULL, @PaymentModeID int, @SupplierId int = NULL, @CurrencyID int, @ExchangeRate numeric(18,9) = NULL, @CostingRate numeric(18,6), @Remark nvarchar(255) = NULL, @OtherCharges numeric(18,6), @TotalQuantity numeric(18,6) = NULL, @TotalAmount numeric(18,6) = NULL, @NetTax numeric(18,6) = NULL, @NetTaxValue numeric(18,6) = NULL, @NetAmount numeric(18,6) = NULL, @NetDiscount numeric(18,6) = NULL, @NetDiscountValue numeric(18,6) = NULL, @GrandTotal numeric(18,6) = NULL, @Post bit = NULL, @Field1 nvarchar(255) = NULL, @Field2 nvarchar(255) = NULL, @Field3 nvarchar(255) = NULL, @Field4 nvarchar(255) = NULL, @Field5 nvarchar(255) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceId int Output As Begin Insert Into Inv_PurchaseInvoiceHeader ([Company_Id],[Brand_Id],[Location_ID],[InvoiceNo],[InvoiceDate],[InvoiceType],[SupInvoiceNo],[SupInvoiceDate],[PaymentModeID],[SupplierId],[CurrencyID],[ExchangeRate],[CostingRate],[Remark],[OtherCharges],[TotalQuantity],[TotalAmount],[NetTax],[NetTaxValue],[NetAmount],[NetDiscount],[NetDiscountValue],[GrandTotal],[Post],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Company_Id,@Brand_Id,@Location_ID,@InvoiceNo,@InvoiceDate,@InvoiceType,@SupInvoiceNo,@SupInvoiceDate,@PaymentModeID,@SupplierId,@CurrencyID,@ExchangeRate,@CostingRate,@Remark,@OtherCharges,@TotalQuantity,@TotalAmount,@NetTax,@NetTaxValue,@NetAmount,@NetDiscount,@NetDiscountValue,@GrandTotal,@Post,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = Scope_Identity() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_Insert] @Company_Id int, @Brand_Id int, @Location_ID int, @InvoiceNo nvarchar(255), @InvoiceDate datetime = NULL, @InvoiceType nvarchar(50), @SupInvoiceNo nvarchar(255) = NULL, @SupInvoiceDate datetime = NULL, @PaymentModeID int, @SupplierId int = NULL, @CurrencyID int, @ExchangeRate numeric(18,9) = NULL, @CostingRate numeric(18,6), @Remark nvarchar(255) = NULL, @OtherCharges numeric(18,6), @TotalQuantity numeric(18,6) = NULL, @TotalAmount numeric(18,6) = NULL, @NetTax numeric(18,6) = NULL, @NetTaxValue numeric(18,6) = NULL, @NetAmount numeric(18,6) = NULL, @NetDiscount numeric(18,6) = NULL, @NetDiscountValue numeric(18,6) = NULL, @GrandTotal numeric(18,6) = NULL, @Post bit = NULL, @Field1 nvarchar(255) = NULL, @Field2 nvarchar(255) = NULL, @Field3 nvarchar(255) = NULL, @Field4 nvarchar(255) = NULL, @Field5 nvarchar(255) = NULL, @Field6 bit = NULL, @Field7 datetime = NULL, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferenceId int Output As Begin Insert Into Inv_PurchaseInvoiceHeader ([Company_Id],[Brand_Id],[Location_ID],[InvoiceNo],[InvoiceDate],[InvoiceType],[SupInvoiceNo],[SupInvoiceDate],[PaymentModeID],[SupplierId],[CurrencyID],[ExchangeRate],[CostingRate],[Remark],[OtherCharges],[TotalQuantity],[TotalAmount],[NetTax],[NetTaxValue],[NetAmount],[NetDiscount],[NetDiscountValue],[GrandTotal],[Post],[Field1],[Field2],[Field3],[Field4],[Field5],[Field6],[Field7],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate]) Values (@Company_Id,@Brand_Id,@Location_ID,@InvoiceNo,@InvoiceDate,@InvoiceType,@SupInvoiceNo,@SupInvoiceDate,@PaymentModeID,@SupplierId,@CurrencyID,@ExchangeRate,@CostingRate,@Remark,@OtherCharges,@TotalQuantity,@TotalAmount,@NetTax,@NetTaxValue,@NetAmount,@NetDiscount,@NetDiscountValue,@GrandTotal,@Post,@Field1,@Field2,@Field3,@Field4,@Field5,@Field6,@Field7,@IsActive,@CreatedBy,@CreatedDate,@ModifiedBy,@ModifiedDate) Select @ReferenceID = Scope_Identity() Return @ReferenceID End";
            objDa.execute_Command(strsql);
        }


        try
        {
            strsql = "ALTER TABLE Inv_PurchaseInvoiceHeader ALTER COLUMN ExchangeRate numeric(18,9)";
            objDa.execute_Command(strsql);
        }
        catch
        {

        }

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_Update] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @InvoiceNo nvarchar(255), @InvoiceDate datetime, @InvoiceType nvarchar(50), @SupInvoiceNo nvarchar(255), @SupInvoiceDate datetime, @PaymentModeID int, @SupplierId int, @CurrencyID int, @ExchangeRate numeric(18,9), @CostingRate numeric(18,6), @Remark nvarchar(255), @OtherCharges numeric(18,6), @TotalQuantity numeric(18,6), @TotalAmount numeric(18,6), @NetTax numeric(18,6), @NetTaxValue numeric(18,6), @NetAmount numeric(18,6), @NetDiscount numeric(18,6), @NetDiscountValue numeric(18,6), @GrandTotal numeric(18,6), @Post bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferanceId int Output As Begin Update Inv_PurchaseInvoiceHeader Set [InvoiceDate] = @InvoiceDate, [InvoiceType] = @InvoiceType, [SupInvoiceNo] = @SupInvoiceNo, [SupInvoiceDate] = @SupInvoiceDate, [PaymentModeID] = @PaymentModeID, [SupplierId] = @SupplierId, [CurrencyID] = @CurrencyID, [ExchangeRate] = @ExchangeRate, [CostingRate] = @CostingRate, [Remark] = @Remark, [OtherCharges] = @OtherCharges, [TotalQuantity] = @TotalQuantity, [TotalAmount] = @TotalAmount, [NetTax] = @NetTax, [NetTaxValue] = @NetTaxValue, [NetAmount] = @NetAmount, [NetDiscount] = @NetDiscount, [NetDiscountValue] = @NetDiscountValue, [GrandTotal] = @GrandTotal, [Post] = @Post, [Field1] = @Field1, [Field2] = @Field2, [Field3] = @Field3, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_ID] = @Location_ID and [TransID] = @TransID and [InvoiceNo] = @InvoiceNo select @ReferanceId =@@ROWCOUNT return @ReferanceId End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER Procedure [dbo].[sp_Inv_PurchaseInvoiceHeader_Update] @Company_Id int, @Brand_Id int, @Location_ID int, @TransID int, @InvoiceNo nvarchar(255), @InvoiceDate datetime, @InvoiceType nvarchar(50), @SupInvoiceNo nvarchar(255), @SupInvoiceDate datetime, @PaymentModeID int, @SupplierId int, @CurrencyID int, @ExchangeRate numeric(18,9), @CostingRate numeric(18,6), @Remark nvarchar(255), @OtherCharges numeric(18,6), @TotalQuantity numeric(18,6), @TotalAmount numeric(18,6), @NetTax numeric(18,6), @NetTaxValue numeric(18,6), @NetAmount numeric(18,6), @NetDiscount numeric(18,6), @NetDiscountValue numeric(18,6), @GrandTotal numeric(18,6), @Post bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @ModifiedBy nvarchar(255), @ModifiedDate datetime, @ReferanceId int Output As Begin Update Inv_PurchaseInvoiceHeader Set [InvoiceDate] = @InvoiceDate, [InvoiceType] = @InvoiceType, [SupInvoiceNo] = @SupInvoiceNo, [SupInvoiceDate] = @SupInvoiceDate, [PaymentModeID] = @PaymentModeID, [SupplierId] = @SupplierId, [CurrencyID] = @CurrencyID, [ExchangeRate] = @ExchangeRate, [CostingRate] = @CostingRate, [Remark] = @Remark, [OtherCharges] = @OtherCharges, [TotalQuantity] = @TotalQuantity, [TotalAmount] = @TotalAmount, [NetTax] = @NetTax, [NetTaxValue] = @NetTaxValue, [NetAmount] = @NetAmount, [NetDiscount] = @NetDiscount, [NetDiscountValue] = @NetDiscountValue, [GrandTotal] = @GrandTotal, [Post] = @Post, [Field1] = @Field1, [Field2] = @Field2, [Field3] = @Field3, [Field4] = @Field4, [Field5] = @Field5, [Field6] = @Field6, [Field7] = @Field7, [IsActive] = @IsActive, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate Where [Company_Id] = @Company_Id and [Brand_Id] = @Brand_Id and [Location_ID] = @Location_ID and [TransID] = @TransID and [InvoiceNo] = @InvoiceNo select @ReferanceId =@@ROWCOUNT return @ReferanceId End";
            objDa.execute_Command(strsql);

        }


        //08-11-2016

        try
        {
            strsql = "create PROCEDURE [dbo].[sp_Ac_AllCustomer_Balance] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @CustomerAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @currency_type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT company_id, brand_id, Customer_Id, name, (CASE WHEN @currency_type = 1 THEN opening_balance ELSE cmp_ob END) AS opening_final, (CASE WHEN @currency_type = 1 THEN debit_amount ELSE cmp_dr END) AS Debit_final, (CASE WHEN @currency_type = 1 THEN credit_Amount ELSE cmp_cr END) AS Credit_final, (CASE WHEN @currency_type = 1 THEN closing_balance ELSE cmp_cb END) AS closing_final, opening_balance, debit_amount, credit_Amount, closing_balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, cmp_ob, cmp_dr, cmp_cr, (CASE WHEN @currency_type = 1 THEN Start30 ELSE Comp_Start30 END) AS start30_final, (CASE WHEN @currency_type = 1 THEN second60 ELSE comp_second60 END) AS second60_final, (CASE WHEN @currency_type = 1 THEN third90 ELSE Comp_third90 END) AS third90_final, (CASE WHEN @currency_type = 1 THEN fourth90above ELSE Comp_fourth90above END) AS fourth90above_final, (CASE WHEN @currency_type = 1 THEN ageingBalance ELSE Comp_ageingBalance END) AS AgeingBalance_final, Start30, second60, third90, fourth90above, ageingBalance, Comp_Start30, comp_second60, Comp_third90, Comp_fourth90above, Comp_ageingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS cmp_ob, ISNULL(trans.cmp_dr, 0) AS cmp_dr, ISNULL(trans.cmp_cr, 0) AS cmp_cr, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS cmp_cb, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id FROM set_CustomerMaster WHERE set_CustomerMaster.Account_No = @CustomerAccount_no AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND set_CustomerMaster.IsActive = 'True') set_CustomerMaster LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.AccTransId=@CustomerAccount_No AND Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_CustomerMaster.Customer_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_CustomerMaster.Customer_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN set_CustomerMaster ON set_CustomerMaster.Customer_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = set_CustomerMaster.Customer_Id) final ORDER BY name END END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter PROCEDURE [dbo].[sp_Ac_AllCustomer_Balance] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @CustomerAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @currency_type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT company_id, brand_id, Customer_Id, name, (CASE WHEN @currency_type = 1 THEN opening_balance ELSE cmp_ob END) AS opening_final, (CASE WHEN @currency_type = 1 THEN debit_amount ELSE cmp_dr END) AS Debit_final, (CASE WHEN @currency_type = 1 THEN credit_Amount ELSE cmp_cr END) AS Credit_final, (CASE WHEN @currency_type = 1 THEN closing_balance ELSE cmp_cb END) AS closing_final, opening_balance, debit_amount, credit_Amount, closing_balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, cmp_ob, cmp_dr, cmp_cr, (CASE WHEN @currency_type = 1 THEN Start30 ELSE Comp_Start30 END) AS start30_final, (CASE WHEN @currency_type = 1 THEN second60 ELSE comp_second60 END) AS second60_final, (CASE WHEN @currency_type = 1 THEN third90 ELSE Comp_third90 END) AS third90_final, (CASE WHEN @currency_type = 1 THEN fourth90above ELSE Comp_fourth90above END) AS fourth90above_final, (CASE WHEN @currency_type = 1 THEN ageingBalance ELSE Comp_ageingBalance END) AS AgeingBalance_final, Start30, second60, third90, fourth90above, ageingBalance, Comp_Start30, comp_second60, Comp_third90, Comp_fourth90above, Comp_ageingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS cmp_ob, ISNULL(trans.cmp_dr, 0) AS cmp_dr, ISNULL(trans.cmp_cr, 0) AS cmp_cr, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS cmp_cb, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'RV') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_CustomerMaster.Customer_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT set_CustomerMaster.Company_Id, set_CustomerMaster.Brand_Id, set_CustomerMaster.Customer_Id FROM set_CustomerMaster WHERE set_CustomerMaster.Account_No = @CustomerAccount_no AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND set_CustomerMaster.IsActive = 'True') set_CustomerMaster LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.AccTransId=@CustomerAccount_No AND Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_CustomerMaster.Customer_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_CustomerMaster.Customer_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN set_CustomerMaster ON set_CustomerMaster.Customer_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND set_CustomerMaster.Company_Id = @Company_Id AND set_CustomerMaster.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = set_CustomerMaster.Customer_Id) final ORDER BY name END END";
            objDa.execute_Command(strsql);
        }

        try
        {
            strsql = "create PROCEDURE [dbo].[sp_Ac_AllSupplierDetail_SelectRow] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @SupplierAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @Currency_Type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT Company_Id, Brand_Id, Supplier_Id, Name, (CASE WHEN @Currency_Type = 1 THEN Opening_Balance ELSE Company_OpeningBalance END) AS Opening_Final, (CASE WHEN @Currency_Type = 1 THEN Debit_Amount ELSE Company_DebitAmount END) AS Debit_Final, (CASE WHEN @Currency_Type = 1 THEN Credit_Amount ELSE Company_CreditAmount END) AS Credit_Final, (CASE WHEN @Currency_Type = 1 THEN Closing_Balance ELSE Company_ClosingBalance END) AS Closing_Final, Opening_Balance, Debit_Amount, Credit_Amount, Closing_Balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, Company_OpeningBalance, Company_DebitAmount, Company_CreditAmount, Company_ClosingBalance, (CASE WHEN @Currency_Type = 1 THEN Start30 ELSE Comp_Start30 END) AS Start30_Final, (CASE WHEN @Currency_Type = 1 THEN Second60 ELSE comp_second60 END) AS Second60_Final, (CASE WHEN @Currency_Type = 1 THEN Third90 ELSE Comp_third90 END) AS Third90_Final, (CASE WHEN @Currency_Type = 1 THEN Fourth90Above ELSE Comp_fourth90above END) AS Fourth90above_Final, (CASE WHEN @Currency_Type = 1 THEN AgeingBalance ELSE Comp_AgeingBalance END) AS AgeingBalance_Final, Start30, Second60, Third90, Fourth90Above, AgeingBalance, Comp_Start30, Comp_Second60, Comp_Third90, Comp_Fourth90Above, Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS Company_OpeningBalance, ISNULL(trans.cmp_dr, 0) AS Company_DebitAmount, ISNULL(trans.cmp_cr, 0) AS Company_CreditAmount, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS Company_ClosingBalance, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id FROM Set_Suppliers WHERE Set_Suppliers.Account_No = @SupplierAccount_No AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND Set_Suppliers.IsActive = 'True') set_suppliers LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.AccTransId=@SupplierAccount_No AND Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_suppliers.Supplier_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_suppliers.Supplier_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN Set_Suppliers ON Set_Suppliers.Supplier_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = Set_Suppliers.Supplier_Id) tbl_final ORDER BY Name END END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter PROCEDURE [dbo].[sp_Ac_AllSupplierDetail_SelectRow] @Company_Id int, @Brand_Id int, @Account_No nvarchar(max), @SupplierAccount_No int, @Location_Id nvarchar(max), @FromDate datetime, @ToDate datetime, @Currency_Type int, @Optype int AS BEGIN IF (@Optype = 1) BEGIN SELECT Company_Id, Brand_Id, Supplier_Id, Name, (CASE WHEN @Currency_Type = 1 THEN Opening_Balance ELSE Company_OpeningBalance END) AS Opening_Final, (CASE WHEN @Currency_Type = 1 THEN Debit_Amount ELSE Company_DebitAmount END) AS Debit_Final, (CASE WHEN @Currency_Type = 1 THEN Credit_Amount ELSE Company_CreditAmount END) AS Credit_Final, (CASE WHEN @Currency_Type = 1 THEN Closing_Balance ELSE Company_ClosingBalance END) AS Closing_Final, Opening_Balance, Debit_Amount, Credit_Amount, Closing_Balance, ForeignOpening_Balance, ForeignDebit_Amount, ForeignCredit_Amount, ForeignClosing_Balance, Company_OpeningBalance, Company_DebitAmount, Company_CreditAmount, Company_ClosingBalance, (CASE WHEN @Currency_Type = 1 THEN Start30 ELSE Comp_Start30 END) AS Start30_Final, (CASE WHEN @Currency_Type = 1 THEN Second60 ELSE comp_second60 END) AS Second60_Final, (CASE WHEN @Currency_Type = 1 THEN Third90 ELSE Comp_third90 END) AS Third90_Final, (CASE WHEN @Currency_Type = 1 THEN Fourth90Above ELSE Comp_fourth90above END) AS Fourth90above_Final, (CASE WHEN @Currency_Type = 1 THEN AgeingBalance ELSE Comp_AgeingBalance END) AS AgeingBalance_Final, Start30, Second60, Third90, Fourth90Above, AgeingBalance, Comp_Start30, Comp_Second60, Comp_Third90, Comp_Fourth90Above, Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id, ems_contactmaster.Name, ((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) AS Opening_Balance, ISNULL(trans.dr, 0) AS Debit_Amount, ISNULL(trans.cr, 0) AS Credit_Amount, (((ISNULL(trans.cr_opening, 0) + ISNULL(m_ob.m_o_cr, 0)) - (ISNULL(trans.dr_opening, 0) + ISNULL(m_ob.m_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0)) AS Closing_Balance, ((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) AS ForeignOpening_Balance, ISNULL(trans.f_dr, 0) AS ForeignDebit_Amount, ISNULL(trans.f_cr, 0) AS ForeignCredit_Amount, ((((ISNULL(trans.f_cr_opening, 0) + ISNULL(m_ob.m_f_o_cr, 0)) - (ISNULL(trans.f_dr_opening, 0) + ISNULL(m_ob.m_f_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS ForeignClosing_Balance, ((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) AS Company_OpeningBalance, ISNULL(trans.cmp_dr, 0) AS Company_DebitAmount, ISNULL(trans.cmp_cr, 0) AS Company_CreditAmount, ((((ISNULL(trans.cmp_cr_opening, 0) + ISNULL(m_ob.m_cmp_o_cr, 0)) - (ISNULL(trans.cmp_dr_opening, 0) + ISNULL(m_ob.m_cmp_o_dr, 0))) - ISNULL(trans.dr, 0) + ISNULL(trans.cr, 0))) AS Company_ClosingBalance, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Start30, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Second60, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Third90, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Fourth90Above, (SELECT ISNULL(SUM(due_amount) - SUM(Paid_Receive_Amount), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS AgeingBalance, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -30, GETDATE()) AND Invoice_Date < GETDATE() AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Start30, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -60, GETDATE()) AND Invoice_Date < DATEADD(DAY, -30, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Second60, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date > DATEADD(DAY, -90, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Third90, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Invoice_Date < DATEADD(DAY, -91, GETDATE()) AND Invoice_Date < DATEADD(DAY, -60, GETDATE()) AND Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_Fourth90Above, (SELECT ISNULL(SUM(CompanyCurrDebit) - SUM(CompanyCurrCredit), 0) FROM Ac_Ageing_Detail WHERE Ac_Ageing_Detail.Other_Account_No = set_suppliers.Supplier_Id AND Ac_Ageing_Detail.ageingtype = 'pv') AS Comp_AgeingBalance FROM (SELECT Set_Suppliers.Company_Id, Set_Suppliers.Brand_Id, Set_Suppliers.Supplier_Id FROM Set_Suppliers WHERE Set_Suppliers.Account_No = @SupplierAccount_No AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND Set_Suppliers.IsActive = 'True') set_suppliers LEFT JOIN (SELECT Ac_SubChartOfAccount.Other_account_no, SUM(ISNULL(Ac_SubChartOfAccount.LCr_Amount, 0)) AS m_o_cr, SUM(ISNULL(Ac_SubChartOfAccount.LDr_Amount, 0)) AS m_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FCr_Amount AS float), 0)) AS m_f_o_cr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.FDr_Amount AS float), 0)) AS m_f_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrDebit AS float), 0)) AS m_cmp_o_dr, SUM(ISNULL(CAST(Ac_SubChartOfAccount.CompanyCurrCredit AS float), 0)) AS m_cmp_o_cr FROM ac_subChartOfAccount WHERE Ac_SubChartOfAccount.AccTransId=@SupplierAccount_No AND Ac_SubChartOfAccount.Company_Id = @Company_Id AND Ac_SubChartOfAccount.Brand_Id = @Brand_Id AND Ac_SubChartOfAccount.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) GROUP BY Ac_SubChartOfAccount.Company_Id, Ac_SubChartOfAccount.Brand_Id, Ac_SubChartOfAccount.other_account_no) m_ob ON m_ob.other_account_no = set_suppliers.Supplier_Id LEFT JOIN ems_contactmaster ON ems_contactmaster.Trans_Id = set_suppliers.Supplier_Id LEFT JOIN (SELECT VD.Other_Account_No, VD.Company_Id, VD.Brand_Id, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Debit_Amount ELSE 0 END)) AS dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.Foreign_Amount ELSE 0 END)) AS f_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate THEN VD.Credit_Amount ELSE 0 END)) AS cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.Credit_Amount ELSE 0 END)) AS f_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date < @FromDate AND VD.Credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr_opening, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.Debit_Amount ELSE 0 END)) AS dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.Debit_Amount ELSE 0 END)) AS f_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.Debit_Amount > 0 THEN VD.CompanyCurrDebit ELSE 0 END)) AS cmp_dr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate THEN VD.credit_Amount ELSE 0 END)) AS cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.credit_Amount ELSE 0 END)) AS f_cr, SUM((CASE WHEN Ac_Voucher_Header.Voucher_Date >= @FromDate AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND VD.credit_Amount > 0 THEN VD.CompanyCurrCredit ELSE 0 END)) AS cmp_cr FROM Ac_Voucher_Header INNER JOIN Ac_Voucher_Detail AS VD ON Ac_Voucher_Header.Trans_Id = VD.Voucher_No INNER JOIN Set_Suppliers ON Set_Suppliers.Supplier_Id = VD.Other_Account_No WHERE VD.Account_No IN (SELECT CAST(Value AS int) FROM F_Split(@Account_No, ',')) AND VD.Other_Account_No != 0 AND Set_Suppliers.Company_Id = @Company_Id AND Set_Suppliers.Brand_Id = @Brand_Id AND VD.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Header.Isactive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND Ac_Voucher_Header.Voucher_Date <= @ToDate AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') GROUP BY VD.Company_Id, VD.Brand_Id, VD.Other_Account_No) trans ON trans.Other_Account_No = Set_Suppliers.Supplier_Id) tbl_final ORDER BY Name END END";
            objDa.execute_Command(strsql);
        }

        //09-111-2016

        try
        {
            strsql = "create Procedure [dbo].[sp_Inv_PhysicalHeader_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @AccountNo nvarchar(max), @VoucherNo nvarchar(20), @Vdate datetime, @Remark nvarchar(max), @NetAmount numeric(18,6), @Post bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ReferenceID int output As Begin insert into Inv_PhysicalHeader ( Company_Id, Brand_Id, Location_Id, AccountNo, VoucherNo, Vdate, Remark, NetAmount, Post, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate ) values ( @Company_Id, @Brand_Id, @Location_Id, @AccountNo, @VoucherNo, @Vdate, @Remark, @NetAmount, @Post, @Field1, @Field2, @Field3, @Field4, @Field5, @Field6, @Field7, @IsActive, @CreatedBy, @CreatedDate ) select @ReferenceID =SCOPE_IDENTITY() return @ReferenceID End";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "alter Procedure [dbo].[sp_Inv_PhysicalHeader_Insert] @Company_Id int, @Brand_Id int, @Location_Id int, @AccountNo nvarchar(max), @VoucherNo nvarchar(20), @Vdate datetime, @Remark nvarchar(max), @NetAmount numeric(18,6), @Post bit, @Field1 nvarchar(255), @Field2 nvarchar(255), @Field3 nvarchar(255), @Field4 nvarchar(255), @Field5 nvarchar(255), @Field6 bit, @Field7 datetime, @IsActive bit, @CreatedBy nvarchar(255), @CreatedDate datetime, @ReferenceID int output As Begin insert into Inv_PhysicalHeader ( Company_Id, Brand_Id, Location_Id, AccountNo, VoucherNo, Vdate, Remark, NetAmount, Post, Field1, Field2, Field3, Field4, Field5, Field6, Field7, IsActive, CreatedBy, CreatedDate ) values ( @Company_Id, @Brand_Id, @Location_Id, @AccountNo, @VoucherNo, @Vdate, @Remark, @NetAmount, @Post, @Field1, @Field2, @Field3, @Field4, @Field5, @Field6, @Field7, @IsActive, @CreatedBy, @CreatedDate ) select @ReferenceID =SCOPE_IDENTITY() return @ReferenceID End";
            objDa.execute_Command(strsql);
        }

        //try
        try
        {
            strsql = "create PROCEDURE [dbo].[sp_Ac_AllStatements_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id nvarchar(max), @Account_No int, @Other_Account_No int, @From_Date datetime, @To_Date datetime, @Currency_Type int AS BEGIN SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Field4 as RefrenceNumber, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id, dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, (CASE WHEN @Currency_Type = 1 THEN dbo.Ac_Voucher_Detail.Debit_Amount ELSE Ac_Voucher_Detail.CompanyCurrDebit END) AS Debit_Amount, (CASE WHEN @Currency_Type = 1 THEN dbo.Ac_Voucher_Detail.Credit_Amount ELSE Ac_Voucher_Detail.CompanyCurrCredit END) AS Credit_Amount, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id AS Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id, Ac_ChartOfAccount.Account_No AS ACNo, Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Credit_Amount-dbo.Ac_Voucher_Detail.Debit_Amount) AS BalanceAmount, Ac_Voucher_Detail.Field2 AS BankReconcilation, (SELECT Set_LocationMaster.Location_Name FROM Set_LocationMaster WHERE Set_LocationMaster.Location_Id = Ac_Voucher_Header.Location_Id) AS LocationName, (SELECT Ems_ContactMaster.Name FROM Ems_ContactMaster WHERE Ems_ContactMaster.Trans_Id = Ac_Voucher_Detail.Other_Account_No) AS Other_Account_Name, (SELECT TOP 1 Ems_ContactMaster.Name FROM Ems_ContactMaster WHERE Ems_ContactMaster.Company_Id = Ac_Voucher_Detail.Other_Account_No) AS ContactName, (SELECT Ems_ContactMaster.Code FROM Ems_ContactMaster WHERE Ems_ContactMaster.Trans_Id = Ac_Voucher_Detail.Other_Account_No) AS ContactCode, (SELECT Ems_ContactMaster.Field1 FROM Ems_ContactMaster WHERE Ems_ContactMaster.Trans_Id = Ac_Voucher_Detail.Other_Account_No) AS Email_Id, (SELECT Ems_ContactMaster.Field2 FROM Ems_ContactMaster WHERE Ems_ContactMaster.Trans_Id = Ac_Voucher_Detail.Other_Account_No) AS Phone_No, (SELECT Set_AddressMaster.Address FROM Set_AddressMaster WHERE Set_AddressMaster.Trans_Id = (SELECT TOP 1 Set_AddressChild.Ref_Id FROM Set_AddressChild WHERE Set_AddressChild.Add_Type = 'Contact' AND Set_AddressChild.Add_Ref_Id = Ac_Voucher_Detail.Other_Account_No)) AS CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN Ac_ChartOfAccount ON Ac_Voucher_Detail.Account_no = Ac_ChartOfAccount.Trans_Id WHERE Ac_Voucher_Header.Company_Id = @Company_Id AND Ac_Voucher_Header.Brand_Id = @Brand_Id AND Ac_Voucher_Header.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Detail.Account_No = @Account_No AND (CASE WHEN @Other_Account_No > 0 THEN Ac_Voucher_Detail.Other_Account_No ELSE 0 END) = @Other_Account_No AND (Ac_Voucher_Header.Voucher_Date >= @From_Date AND Ac_Voucher_Header.Voucher_Date <= @To_Date) AND Ac_Voucher_Header.IsActive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') ORDER BY Ac_Voucher_Header.Trans_Id ASC END";
            objDa.execute_Command(strsql);
        }
        catch
        {
            strsql = "ALTER PROCEDURE [dbo].[sp_Ac_AllStatements_SelectRow] @Company_Id int, @Brand_Id int, @Location_Id nvarchar(max), @Account_No int, @Other_Account_No int, @From_Date datetime, @To_Date datetime, @Currency_Type int AS BEGIN SELECT dbo.Ac_Voucher_Header.Company_Id, dbo.Ac_Voucher_Header.Brand_Id, dbo.Ac_Voucher_Header.Location_Id, dbo.Ac_Voucher_Header.Voucher_No, dbo.Ac_Voucher_Header.Voucher_Date, dbo.Ac_Voucher_Header.Voucher_Type, dbo.Ac_Voucher_Header.Field4 as RefrenceNumber, dbo.Ac_Voucher_Header.Post, dbo.Ac_Voucher_Detail.Account_No, dbo.Ac_Voucher_Detail.Other_Account_No, dbo.Ac_Voucher_Detail.Foreign_Amount, dbo.Ac_Voucher_Detail.CreatedBy, dbo.Ac_Voucher_Detail.Ref_Id, dbo.Ac_Voucher_Detail.Ref_Type, dbo.Ac_Voucher_Detail.ModifiedBy, (CASE WHEN @Currency_Type = 1 THEN dbo.Ac_Voucher_Detail.Debit_Amount ELSE Ac_Voucher_Detail.CompanyCurrDebit END) AS Debit_Amount, (CASE WHEN @Currency_Type = 1 THEN dbo.Ac_Voucher_Detail.Credit_Amount ELSE Ac_Voucher_Detail.CompanyCurrCredit END) AS Credit_Amount, dbo.Ac_Voucher_Detail.Narration, dbo.Ac_Voucher_Header.IsActive, dbo.Ac_Voucher_Header.Trans_Id AS Header_Trans_Id, dbo.Ac_Voucher_Detail.Trans_Id AS Detail_Trans_Id, Ac_ChartOfAccount.Account_No AS ACNo, Ac_ChartOfAccount.AccountName, (dbo.Ac_Voucher_Detail.Credit_Amount-dbo.Ac_Voucher_Detail.Debit_Amount) AS BalanceAmount, Ac_Voucher_Detail.Field2 AS BankReconcilation, (SELECT Set_LocationMaster.Location_Name FROM Set_LocationMaster WHERE Set_LocationMaster.Location_Id = Ac_Voucher_Header.Location_Id) AS LocationName, (SELECT Ems_ContactMaster.Name FROM Ems_ContactMaster WHERE Ems_ContactMaster.Trans_Id = Ac_Voucher_Detail.Other_Account_No) AS Other_Account_Name, (SELECT TOP 1 Ems_ContactMaster.Name FROM Ems_ContactMaster WHERE Ems_ContactMaster.Company_Id = Ac_Voucher_Detail.Other_Account_No) AS ContactName, (SELECT Ems_ContactMaster.Code FROM Ems_ContactMaster WHERE Ems_ContactMaster.Trans_Id = Ac_Voucher_Detail.Other_Account_No) AS ContactCode, (SELECT Ems_ContactMaster.Field1 FROM Ems_ContactMaster WHERE Ems_ContactMaster.Trans_Id = Ac_Voucher_Detail.Other_Account_No) AS Email_Id, (SELECT Ems_ContactMaster.Field2 FROM Ems_ContactMaster WHERE Ems_ContactMaster.Trans_Id = Ac_Voucher_Detail.Other_Account_No) AS Phone_No, (SELECT Set_AddressMaster.Address FROM Set_AddressMaster WHERE Set_AddressMaster.Trans_Id = (SELECT TOP 1 Set_AddressChild.Ref_Id FROM Set_AddressChild WHERE Set_AddressChild.Add_Type = 'Contact' AND Set_AddressChild.Add_Ref_Id = Ac_Voucher_Detail.Other_Account_No)) AS CompleteAddress FROM dbo.Ac_Voucher_Header INNER JOIN dbo.Ac_Voucher_Detail ON dbo.Ac_Voucher_Header.Trans_Id = dbo.Ac_Voucher_Detail.Voucher_No INNER JOIN Ac_ChartOfAccount ON Ac_Voucher_Detail.Account_no = Ac_ChartOfAccount.Trans_Id WHERE Ac_Voucher_Header.Company_Id = @Company_Id AND Ac_Voucher_Header.Brand_Id = @Brand_Id AND Ac_Voucher_Header.Location_Id IN (SELECT CAST(Value AS int) FROM F_Split(@Location_Id, ',')) AND Ac_Voucher_Detail.Account_No = @Account_No AND (CASE WHEN @Other_Account_No > 0 THEN Ac_Voucher_Detail.Other_Account_No ELSE 0 END) = @Other_Account_No AND (Ac_Voucher_Header.Voucher_Date >= @From_Date AND Ac_Voucher_Header.Voucher_Date <= @To_Date) AND Ac_Voucher_Header.IsActive = 'True' AND Ac_Voucher_Header.ReconciledFromFinance = 'True' AND (Ac_Voucher_Header.Field3 = '' OR Ac_Voucher_Header.Field3 IS NULL OR Ac_Voucher_Header.Field3 = 'Approved') ORDER BY Ac_Voucher_Header.Trans_Id ASC END";
            objDa.execute_Command(strsql);
        }

        Response.Redirect("~/ERPLogin.aspx");

    }

    public void DisplayMessage(string str,string color="orange")
    {
        ScriptManager.RegisterStartupScript(this, GetType(), "", "showAlert('" + str + "','"+color+"','white');", true);
    }
}