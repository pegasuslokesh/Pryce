using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class Inventory_Default2 : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        string strLocationId = string.Empty;
        TextBox txtOrderForMonth = new TextBox();
        string strsql = "WITH tb AS (SELECT DISTINCT (SELECT inv_productbrandmaster.Brand_Name FROM inv_productbrandmaster WHERE inv_productbrandmaster.pbrandid IN (SELECT TOP 1 Inv_Product_Brand.PBrandId FROM Inv_Product_Brand WHERE Inv_Product_Brand.ProductId = Inv_ProductMaster.ProductId)) AS BrandName, (SELECT Inv_Product_CategoryMaster.Category_Name FROM Inv_Product_CategoryMaster WHERE Inv_Product_CategoryMaster.Category_Id IN (SELECT TOP 1 Inv_Product_Category.CategoryId FROM Inv_Product_Category WHERE Inv_Product_Category.ProductId = Inv_ProductMaster.ProductId)) AS CategoryName, Inv_ProductMaster.ProductId, Inv_ProductMaster.ProductCode, Inv_UnitMaster.Unit_Name, Inv_ProductMaster.EProductName, ISNULL(Inv_StockDetail.Quantity, 0) AS StockQuantity, ISNULL((SELECT SUM(Quantity) FROM Inv_SalesInvoiceDetail AS SD INNER JOIN Inv_SalesInvoiceHeader AS SH ON sd.Invoice_No = sh.Trans_Id AND sd.Location_Id IN (" + strLocationId + ") AND sd.Product_Id = Inv_ProductMaster.ProductId AND sh.post = 'True'), 0) AS Totalsalesqty, ISNULL((SELECT DATEDIFF(DAY, MIN(sh.Invoice_Date), MAX(sh.Invoice_Date)) FROM Inv_SalesInvoiceDetail AS SD INNER JOIN Inv_SalesInvoiceHeader AS SH ON sd.Invoice_No = sh.Trans_Id AND sd.Location_Id IN (" + strLocationId + ") AND sd.Product_Id = Inv_ProductMaster.ProductId AND sh.post = 'True'), 0) AS TotalDurationindays, (ISNULL((SELECT SUM(Quantity) FROM Inv_SalesInvoiceDetail AS SD INNER JOIN Inv_SalesInvoiceHeader AS SH ON sd.Invoice_No = sh.Trans_Id AND sd.Location_Id IN (" + strLocationId + ") AND sd.Product_Id = Inv_ProductMaster.ProductId AND sh.post = 'True'), 0) / ISNULL((select DATEDIFF (day,Ac_Finance_Year_Info.From_Date,GETDATE()) from Ac_Finance_Year_Info where Ac_Finance_Year_Info.Trans_Id=" + HttpContext.Current.Session["FinanceYearId"].ToString() + "), 0)) * 30 as MonthlySales, ISNULL((SELECT DATEDIFF(DAY, MAX(Inv_PurchaseOrderHeader.PODate), MAX(PH.invoicedate)) FROM Inv_PurchaseInvoiceDetail AS PD INNER JOIN Inv_PurchaseInvoiceHeader AS PH ON PD.InvoiceNo = ph.TransID INNER JOIN Inv_PurchaseOrderHeader ON PD.POId = Inv_PurchaseOrderHeader.TransID WHERE PD.Location_Id IN (" + strLocationId + ") AND pd.ProductId = Inv_ProductMaster.ProductId), 30) AS LeadTimeDays," + txtOrderForMonth.Text + " AS SuggestedOrderMonth FROM Inv_ProductMaster LEFT JOIN Inv_SalesInvoiceDetail ON Inv_ProductMaster.ProductId = Inv_SalesInvoiceDetail.Product_Id INNER JOIN Inv_UnitMaster ON Inv_ProductMaster.UnitId = Inv_UnitMaster.Unit_Id AND Inv_SalesInvoiceDetail.Location_Id IN (" + strLocationId + ") LEFT JOIN inv_salesinvoiceheader ON Inv_SalesInvoiceDetail.Invoice_No = inv_salesinvoiceheader.Trans_Id AND inv_salesinvoiceheader.Location_Id IN (" + strLocationId + ") LEFT JOIN Inv_StockDetail ON Inv_ProductMaster.ProductId = Inv_StockDetail.ProductId AND Inv_StockDetail.Location_Id IN (" + strLocationId + ") AND Inv_StockDetail.Finance_Year_Id = " + HttpContext.Current.Session["FinanceYearId"].ToString() + " WHERE Inv_ProductMaster.Company_Id = " + Session["CompId"].ToString() + " AND Inv_ProductMaster.Brand_Id =" + Session["BrandId"].ToString() + " AND Inv_ProductMaster.IsActive = 'True') SELECT BrandName, CategoryName, ProductId, ProductCode, Unit_Name, EProductName, SUM(StockQuantity) AS Currentstock, MAX(MonthlySales) AS MonthlySales, MAX(LeadTimeDays) AS LeadTimeDays, (MAX(MonthlySales)/30)*MAX(LeadTimeDays) as LeadTimeQty, MAX(SuggestedOrderMonth) AS SuggestedOrderMonth, MAX((MonthlySales * SuggestedOrderMonth) + ((MonthlySales)/30)*(LeadTimeDays)) AS SuggestedOrderQty, MAX((MonthlySales * SuggestedOrderMonth) +((MonthlySales)/30)*(LeadTimeDays)) AS OrderQty FROM tb GROUP BY ProductId, ProductCode, Unit_Name, EProductName, BrandName, CategoryName";
    }
}